
./octez-client --wait none publish commitment from '[PUBLIC_KEY_HASH]' for smart rollup '[SMART_ROLLUP_HASH]' with compressed state '[SC_ROLLUP_PVM_STATE_HASH]' at inbox level 12 and predecessor '[SC_ROLLUP_COMMITMENT_HASH]' and number of ticks 1
Node is bootstrapped.
Estimated gas: 6588.924 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000989
    Expected counter: 2
    Gas limit: 6689
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000989
      payload fees(the block proposer) ....... +ꜩ0.000989
    Smart rollup commitment publishing:
      Address: [SMART_ROLLUP_HASH]
      Commitment:
        compressed_state: [SC_ROLLUP_PVM_STATE_HASH]
        inbox_level: 12
        predecessor: [SC_ROLLUP_COMMITMENT_HASH]
        number_of_ticks: 1
      This smart rollup commitment publishing was successfully applied
      Consumed gas: 6588.858
      Hash of commit: [SC_ROLLUP_COMMITMENT_HASH]
      Commitment published at level: 14
      Balance updates:
        [PUBLIC_KEY_HASH] ...................................................... -ꜩ10000
        Frozen_bonds([PUBLIC_KEY_HASH],[SMART_ROLLUP_HASH]) ... +ꜩ10000


./octez-client --wait none publish commitment from '[PUBLIC_KEY_HASH]' for smart rollup '[SMART_ROLLUP_HASH]' with compressed state '[SC_ROLLUP_PVM_STATE_HASH]' at inbox level 12 and predecessor '[SC_ROLLUP_COMMITMENT_HASH]' and number of ticks 2
Node is bootstrapped.
Estimated gas: 7287.126 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.001059
    Expected counter: 1
    Gas limit: 7388
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.001059
      payload fees(the block proposer) ....... +ꜩ0.001059
    Smart rollup commitment publishing:
      Address: [SMART_ROLLUP_HASH]
      Commitment:
        compressed_state: [SC_ROLLUP_PVM_STATE_HASH]
        inbox_level: 12
        predecessor: [SC_ROLLUP_COMMITMENT_HASH]
        number_of_ticks: 2
      This smart rollup commitment publishing was successfully applied
      Consumed gas: 7287.060
      Hash of commit: [SC_ROLLUP_COMMITMENT_HASH]
      Commitment published at level: 15
      Balance updates:
        [PUBLIC_KEY_HASH] ...................................................... -ꜩ10000
        Frozen_bonds([PUBLIC_KEY_HASH],[SMART_ROLLUP_HASH]) ... +ꜩ10000

smart_rollup_refute, 231, 5149.837000
