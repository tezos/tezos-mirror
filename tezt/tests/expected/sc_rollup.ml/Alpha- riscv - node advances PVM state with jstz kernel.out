
./octez-client --wait none originate smart rollup rollup from bootstrap1 of kind riscv of type string with kernel kernel:src/riscv/assets/jstz:7e9990f42afe472a46601ef9435ada3b40e0f291b607f5aa5e40d48022be4754 --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 1933.435 units (will add 100 for safety)
Estimated storage: 6552 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000534
    Expected counter: 1
    Gas limit: 2034
    Storage limit: 6572 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000534
      payload fees(the block proposer) ....... +ꜩ0.000534
    Smart rollup origination:
      Kind: riscv
      Parameter type: string
      Kernel Blake2B hash: 'f931d7335fee39a4c38ad8971f11aba8aa12984a3e28e4829b5ca53642e25ffc'
      This smart rollup origination was successfully applied
      Consumed gas: 1933.402
      Storage size: 6552 bytes
      Address: [SMART_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.638
        storage fees ........................... +ꜩ1.638

Smart rollup [SMART_ROLLUP_HASH] memorized as "rollup"
GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"


./octez-client --wait none send smart rollup message 'hex:[ "0023ec6364ae68bf09867b0f08f6c64818e5ddabee000000002000000000000000edadfe6cfe7b716a47cb43d7901504fefef6e3c2d4c84decaa7ec5d8c404800a0000000040000000000000004fd8b650f46128bf5c7edfe3c72de5ae420da3b4a78843eca103e14514efc6c337819ebef88b499d613371d6d3e6bb081745562b87172fe41105cd759eb75100000000001400000000000000cb4197b79836b135dc5bf07449b0d058fb84a395000000000000000000000000b80e00000000000066756e6374696f6e206f2865297b72657475726e20747970656f6620653d3d22737472696e67227d66756e6374696f6e206128652c72297b72657475726e2041727261792e697341727261792872292626722e72656475636528286e2c74293d3e6e2626652874292c2130297d66756e6374696f6e20692865297b72657475726e20747970656f6620653d3d226e756d6265722226264e756d6265722e6973496e74656765722865297d66756e6374696f6e206b2865297b6c657420723d653b7472797b72657475726e206f28722e746f2926266928722e746f6b656e5f69642926264e756d6265722e6973496e746567657228722e616d6f756e74297d63617463687b72657475726e21317d7d66756e6374696f6e20772865297b6c657420723d653b7472797b72657475726e206f28722e66726f6d29262661286b2c722e7472616e7366657273297d63617463687b72657475726e21317d7d66756e6374696f6e20412865297b6c657420723d653b7472797b72657475726e28722e6f7065726174696f6e3d3d3d226164645f6f70657261746f72227c7c722e6f7065726174696f6e3d3d3d2272656d6f76655f6f70657261746f72222926266f28722e6f776e65722926266f28722e6f70657261746f722926266928722e746f6b656e5f6964297d63617463687b72657475726e21317d7d66756e6374696f6e20702865297b6c657420723d653b7472797b72657475726e206f28722e6f776e65722926266928722e746f6b656e5f6964297d63617463687b72657475726e21317d7d66756e6374696f6e205f2865297b6c657420723d653b7472797b72657475726e206128702c722e7265717565737473297d63617463687b72657475726e21317d7d66756e6374696f6e20712865297b6c657420723d653b7472797b72657475726e207028722e726571756573742926264e756d6265722e6973496e746567657228722e62616c616e6365297d63617463687b72657475726e21317d7d66756e6374696f6e20672865297b6c657420723d653b7472797b72657475726e206928722e746f6b656e5f69642926266f28722e6f776e65722926264e756d6265722e6973496e746567657228722e616d6f756e74297d63617463687b72657475726e21317d7d66756e6374696f6e20642865297b72657475726e60746f6b656e2f247b657d607d66756e6374696f6e20522865297b6c657420723d642865293b6966284b762e676574287229297468726f77224641325f544f4b454e5f49445f455849535453223b4b762e73657428642865292c2130297d66756e6374696f6e204f2865297b696628214b762e676574286428652929297468726f77224641325f544f4b454e5f554e444546494e4544227d66756e6374696f6e206c28652c72297b72657475726e6062616c616e63652f247b657d2f247b727d607d66756e6374696f6e206d28652c72297b72657475726e204b762e676574286c28652c7229297c7c307d66756e6374696f6e206828652c722c6e297b6966286e3c30297468726f77224641325f494e53554646494349454e545f42414c414e4345223b4b762e736574286c28652c72292c6e297d66756e6374696f6e207528652c722c6e297b6c657420743d6d28652c72293b6828652c722c742b6e297d66756e6374696f6e207928652c722c6e2c74297b7528652c6e2c2d74292c7528722c6e2c74297d66756e6374696f6e206628652c722c6e297b72657475726e606f776e65722f247b657d2f247b727d2f247b6e7d607d66756e6374696f6e204928652c722c6e297b4b762e736574286628652c722c6e292c2130297d66756e6374696f6e206228652c722c6e297b4b762e64656c657465286628652c722c6e29297d66756e6374696f6e205428652c722c6e297b6966282128653d3d3d727c7c4b762e676574286628652c722c6e292929297468726f77224641325f4e4f545f4f50455241544f52227d66756e6374696f6e204228652c72297b69662865213d3d72297468726f7720636f6e736f6c652e6c6f672860247b657d20213d3d20247b727d60292c224641325f4e4f545f4f574e4552227d66756e6374696f6e204e28652c722c6e297b4f286e2e746f6b656e5f6964292c5428652c722c6e2e746f6b656e5f6964292c7928652c6e2e746f2c6e2e746f6b656e5f69642c6e2e616d6f756e74297d66756e6374696f6e207828652c72297b722e666f7245616368286e3d3e6e2e7472616e73666572732e666f724561636828743d3e4e286e2e66726f6d2c652c742929297d66756e6374696f6e207628652c72297b73776974636828722e6f7065726174696f6e297b63617365226164645f6f70657261746f72223a4228722e6f776e65722c65292c4928722e6f776e65722c722e6f70657261746f722c722e746f6b656e5f6964293b627265616b3b636173652272656d6f76655f6f70657261746f72223a5428722e6f776e65722c652c722e746f6b656e5f6964292c6228722e6f776e65722c722e6f70657261746f722c722e746f6b656e5f6964297d7d66756e6374696f6e20452865297b6c657420723d6d28652e6f776e65722c652e746f6b656e5f6964293b72657475726e20636f6e736f6c652e6c6f672860247b652e6f776e65727d2068617320247b727d206f6620746f6b656e20247b652e746f6b656e5f69647d60292c7b726571756573743a652c62616c616e63653a727d7d66756e6374696f6e20532865297b72657475726e20652e72657175657374732e6d61702845297d66756e6374696f6e204b2865297b5228652e746f6b656e5f6964292c7528652e6f776e65722c652e746f6b656e5f69642c652e616d6f756e74297d6173796e632066756e6374696f6e20552865297b6c657420723d6e65772055524c28652e75726c292c6e3d722e706174686e616d653b7472797b737769746368286e297b63617365222f70696e67223a72657475726e20636f6e736f6c652e6c6f67282248656c6c6f2066726f6d2072756e6e657220736d6172742066756e6374696f6e205c757b31463434427d22292c6e657720526573706f6e73652822506f6e6722293b63617365222f62616c616e63655f6f66223a696628652e6d6574686f643d3d3d2247455422297b6c657420733d7b72657175657374733a4a534f4e2e70617273652861746f6228722e736561726368506172616d732e67657428227265717565737473222929297d3b6966285f287329297b6c657420633d532873293b72657475726e20526573706f6e73652e6a736f6e2863297d656c73652072657475726e20636f6e736f6c652e6572726f722822496e76616c696420706172616d6574657273222c73292c526573706f6e73652e6572726f7228297d656c73657b6c657420733d222f62616c616e63655f6f662069732061204745542072657175657374223b72657475726e20636f6e736f6c652e6572726f722873292c6e657720526573706f6e736528732c7b7374617475733a3530307d297d63617365222f7472616e73666572223a696628652e6d6574686f643d3d3d22504f535422297b6c657420733d617761697420652e6a736f6e28293b72657475726e206128772c73293f287828652e686561646572732e67657428225265666572657222292c73292c6e657720526573706f6e7365282253756363657373212229293a28636f6e736f6c652e6572726f722822496e76616c696420706172616d6574657273222c4a534f4e2e737472696e67696679287329292c526573706f6e73652e6572726f722829297d656c73657b6c657420733d222f7472616e73666572206973206120504f53542072657175657374223b72657475726e20636f6e736f6c652e6572726f722873292c6e657720526573706f6e736528732c7b7374617475733a3530307d297d63617365222f6d696e745f6e6577223a696628652e6d6574686f643d3d3d22504f535422297b6c657420733d617761697420652e6a736f6e28293b72657475726e206128672c73293f28732e666f7245616368284b292c6e657720526573706f6e7365282253756363657373212229293a28636f6e736f6c652e6572726f722822496e76616c696420706172616d6574657273222c4a534f4e2e737472696e67696679287329292c526573706f6e73652e6572726f722829297d656c73657b6c657420733d222f6d696e745f6e6577206973206120504f53542072657175657374223b72657475726e20636f6e736f6c652e6572726f722873292c6e657720526573706f6e736528732c7b7374617475733a3530307d297d63617365222f7570646174655f6f70657261746f7273223a696628652e6d6574686f643d3d3d2250555422297b6c657420733d617761697420652e6a736f6e28293b72657475726e206128412c73293f28732e666f724561636828633d3e7628652e686561646572732e67657428225265666572657222292c6329292c6e657720526573706f6e7365282253756363657373212229293a28636f6e736f6c652e6572726f722822496e76616c696420706172616d6574657273222c4a534f4e2e737472696e67696679287329292c526573706f6e73652e6572726f722829297d656c73657b6c657420733d222f7570646174655f6f70657261746f72732069732061205055542072657175657374223b72657475726e20636f6e736f6c652e6572726f722873292c6e657720526573706f6e736528732c7b7374617475733a3530307d297d64656661756c743a6c657420743d60556e7265636f676e6973656420656e747279706f696e7420247b6e7d603b72657475726e20636f6e736f6c652e6572726f722874292c6e657720526573706f6e736528742c7b7374617475733a3430347d297d7d63617463682874297b7468726f7720636f6e736f6c652e6572726f722874292c747d7d76617220463d553b6578706f72747b462061732064656661756c742c5f20617320697342616c616e63654f662c7020617320697342616c616e6365526571756573742c7120617320697342616c616e6365526573706f6e73652c672061732069734d696e744e65772c69206173206973546f6b656e49642c6b2061732069735472616e736665722c772061732069735472616e73666572732c412061732069735570646174654f70657261746f727d3b0a0000000000000000" ]' from bootstrap2
Node is bootstrapped.
Estimated gas: 321.990 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.004244
    Expected counter: 1
    Gas limit: 422
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.004244
      payload fees(the block proposer) ....... +ꜩ0.004244
    Smart rollup messages submission:
      This smart rollup messages submission was successfully applied
      Consumed gas: 321.924

[src/arch/riscv64/kernel/core_local.rs:38] CPU_ONLINE.load(Ordering::Relaxed) = 0
[0][INFO] Welcome to Hermit 0.6.7
[0][INFO] Kernel starts at 81200000
[0][INFO] BSS starts at 0x81a65de0
[0][INFO] tls_info = Some(
    TlsInfo {
        start: 0x81a00660,
        filesz: 0x18,
        memsz: 0x238,
        align: 0x8,
    },
)
[0][INFO] Model: riscv-virtio
[0][INFO] Total memory size: 100 MB
[0][INFO] Kernel region: [81200000 - 81c00000]
[0][INFO] A pure Rust application is running on top of Hermit!
[0][INFO] Heap: size 58 MB, start address c0000000
[0][INFO] Heap is located at 0xc0000000..0xc3a00000 (0 Bytes unmapped)
[0][INFO] 
[0][INFO] ===================== PHYSICAL MEMORY FREE LIST ======================
[0][INFO] 0x00000081E01000 - 0x00000082000000
[0][INFO] 0x00000085800000 - 0x00000086400000
[0][INFO] ======================================================================
[0][INFO] 
[0][INFO] 
[0][INFO] ================== KERNEL VIRTUAL MEMORY FREE LIST ===================
[0][INFO] 0x000000C3A00000 - 0x00004000000000
[0][INFO] ======================================================================
[0][INFO] 
[0][INFO] Initialized CPU with hart_id 0
[0][INFO] All processors are initialized
[0][INFO] Hermit is running on common system!
[0][WARN] Unable to read entropy! Fallback to a naive implementation!

Internal message: start of level

Internal message: level info (block predecessor: [BLOCK_HASH], predecessor_timestamp: [TIMESTAMP]


External message: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtiFeCFJWwMPy4koWc1wVwes2YvKqAmqK89iwWZutXcnyzUQvZ2jVh3cyJ8vaiyL3YwiruGmHhT4t66xHpLyyY2waXkVpTU")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(0), content: DeployFunction(DeployFunction { function_code: ParsedCode("function o(e){return typeof e==\"string\"}function a(e,r){return Array.isArray(r)&&r.reduce((n,t)=>n&&e(t),!0)}function i(e){return typeof e==\"number\"&&Number.isInteger(e)}function k(e){let r=e;try{return o(r.to)&&i(r.token_id)&&Number.isInteger(r.amount)}catch{return!1}}function w(e){let r=e;try{return o(r.from)&&a(k,r.transfers)}catch{return!1}}function A(e){let r=e;try{return(r.operation===\"add_operator\"||r.operation===\"remove_operator\")&&o(r.owner)&&o(r.operator)&&i(r.token_id)}catch{return!1}}function p(e){let r=e;try{return o(r.owner)&&i(r.token_id)}catch{return!1}}function _(e){let r=e;try{return a(p,r.requests)}catch{return!1}}function q(e){let r=e;try{return p(r.request)&&Number.isInteger(r.balance)}catch{return!1}}function g(e){let r=e;try{return i(r.token_id)&&o(r.owner)&&Number.isInteger(r.amount)}catch{return!1}}function d(e){return`token/${e}`}function R(e){let r=d(e);if(Kv.get(r))throw\"FA2_TOKEN_ID_EXISTS\";Kv.set(d(e),!0)}function O(e){if(!Kv.get(d(e)))throw\"FA2_TOKEN_UNDEFINED\"}function l(e,r){return`balance/${e}/${r}`}function m(e,r){return Kv.get(l(e,r))||0}function h(e,r,n){if(n<0)throw\"FA2_INSUFFICIENT_BALANCE\";Kv.set(l(e,r),n)}function u(e,r,n){let t=m(e,r);h(e,r,t+n)}function y(e,r,n,t){u(e,n,-t),u(r,n,t)}function f(e,r,n){return`owner/${e}/${r}/${n}`}function I(e,r,n){Kv.set(f(e,r,n),!0)}function b(e,r,n){Kv.delete(f(e,r,n))}function T(e,r,n){if(!(e===r||Kv.get(f(e,r,n))))throw\"FA2_NOT_OPERATOR\"}function B(e,r){if(e!==r)throw console.log(`${e} !== ${r}`),\"FA2_NOT_OWNER\"}function N(e,r,n){O(n.token_id),T(e,r,n.token_id),y(e,n.to,n.token_id,n.amount)}function x(e,r){r.forEach(n=>n.transfers.forEach(t=>N(n.from,e,t)))}function v(e,r){switch(r.operation){case\"add_operator\":B(r.owner,e),I(r.owner,r.operator,r.token_id);break;case\"remove_operator\":T(r.owner,e,r.token_id),b(r.owner,r.operator,r.token_id)}}function E(e){let r=m(e.owner,e.token_id);return console.log(`${e.owner} has ${r} of token ${e.token_id}`),{request:e,balance:r}}function S(e){return e.requests.map(E)}function K(e){R(e.token_id),u(e.owner,e.token_id,e.amount)}async function U(e){let r=new URL(e.url),n=r.pathname;try{switch(n){case\"/ping\":return console.log(\"Hello from runner smart function \\u{1F44B}\"),new Response(\"Pong\");case\"/balance_of\":if(e.method===\"GET\"){let s={requests:JSON.parse(atob(r.searchParams.get(\"requests\")))};if(_(s)){let c=S(s);return Response.json(c)}else return console.error(\"Invalid parameters\",s),Response.error()}else{let s=\"/balance_of is a GET request\";return console.error(s),new Response(s,{status:500})}case\"/transfer\":if(e.method===\"POST\"){let s=await e.json();return a(w,s)?(x(e.headers.get(\"Referer\"),s),new Response(\"Success!\")):(console.error(\"Invalid parameters\",JSON.stringify(s)),Response.error())}else{let s=\"/transfer is a POST request\";return console.error(s),new Response(s,{status:500})}case\"/mint_new\":if(e.method===\"POST\"){let s=await e.json();return a(g,s)?(s.forEach(K),new Response(\"Success!\")):(console.error(\"Invalid parameters\",JSON.stringify(s)),Response.error())}else{let s=\"/mint_new is a POST request\";return console.error(s),new Response(s,{status:500})}case\"/update_operators\":if(e.method===\"PUT\"){let s=await e.json();return a(A,s)?(s.forEach(c=>v(e.headers.get(\"Referer\"),c)),new Response(\"Success!\")):(console.error(\"Invalid parameters\",JSON.stringify(s)),Response.error())}else{let s=\"/update_operators is a PUT request\";return console.error(s),new Response(s,{status:500})}default:let t=`Unrecognised entrypoint ${n}`;return console.error(t),new Response(t,{status:404})}}catch(t){throw console.error(t),t}}var F=U;export{F as default,_ as isBalanceOf,p as isBalanceRequest,q as isBalanceResponse,g as isMintNew,i as isTokenId,k as isTransfer,w as isTransfers,A as isUpdateOperator};\n"), account_credit: 0 }) } }
External operation: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtiFeCFJWwMPy4koWc1wVwes2YvKqAmqK89iwWZutXcnyzUQvZ2jVh3cyJ8vaiyL3YwiruGmHhT4t66xHpLyyY2waXkVpTU")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(0), content: DeployFunction(DeployFunction { function_code: ParsedCode("function o(e){return typeof e==\"string\"}function a(e,r){return Array.isArray(r)&&r.reduce((n,t)=>n&&e(t),!0)}function i(e){return typeof e==\"number\"&&Number.isInteger(e)}function k(e){let r=e;try{return o(r.to)&&i(r.token_id)&&Number.isInteger(r.amount)}catch{return!1}}function w(e){let r=e;try{return o(r.from)&&a(k,r.transfers)}catch{return!1}}function A(e){let r=e;try{return(r.operation===\"add_operator\"||r.operation===\"remove_operator\")&&o(r.owner)&&o(r.operator)&&i(r.token_id)}catch{return!1}}function p(e){let r=e;try{return o(r.owner)&&i(r.token_id)}catch{return!1}}function _(e){let r=e;try{return a(p,r.requests)}catch{return!1}}function q(e){let r=e;try{return p(r.request)&&Number.isInteger(r.balance)}catch{return!1}}function g(e){let r=e;try{return i(r.token_id)&&o(r.owner)&&Number.isInteger(r.amount)}catch{return!1}}function d(e){return`token/${e}`}function R(e){let r=d(e);if(Kv.get(r))throw\"FA2_TOKEN_ID_EXISTS\";Kv.set(d(e),!0)}function O(e){if(!Kv.get(d(e)))throw\"FA2_TOKEN_UNDEFINED\"}function l(e,r){return`balance/${e}/${r}`}function m(e,r){return Kv.get(l(e,r))||0}function h(e,r,n){if(n<0)throw\"FA2_INSUFFICIENT_BALANCE\";Kv.set(l(e,r),n)}function u(e,r,n){let t=m(e,r);h(e,r,t+n)}function y(e,r,n,t){u(e,n,-t),u(r,n,t)}function f(e,r,n){return`owner/${e}/${r}/${n}`}function I(e,r,n){Kv.set(f(e,r,n),!0)}function b(e,r,n){Kv.delete(f(e,r,n))}function T(e,r,n){if(!(e===r||Kv.get(f(e,r,n))))throw\"FA2_NOT_OPERATOR\"}function B(e,r){if(e!==r)throw console.log(`${e} !== ${r}`),\"FA2_NOT_OWNER\"}function N(e,r,n){O(n.token_id),T(e,r,n.token_id),y(e,n.to,n.token_id,n.amount)}function x(e,r){r.forEach(n=>n.transfers.forEach(t=>N(n.from,e,t)))}function v(e,r){switch(r.operation){case\"add_operator\":B(r.owner,e),I(r.owner,r.operator,r.token_id);break;case\"remove_operator\":T(r.owner,e,r.token_id),b(r.owner,r.operator,r.token_id)}}function E(e){let r=m(e.owner,e.token_id);return console.log(`${e.owner} has ${r} of token ${e.token_id}`),{request:e,balance:r}}function S(e){return e.requests.map(E)}function K(e){R(e.token_id),u(e.owner,e.token_id,e.amount)}async function U(e){let r=new URL(e.url),n=r.pathname;try{switch(n){case\"/ping\":return console.log(\"Hello from runner smart function \\u{1F44B}\"),new Response(\"Pong\");case\"/balance_of\":if(e.method===\"GET\"){let s={requests:JSON.parse(atob(r.searchParams.get(\"requests\")))};if(_(s)){let c=S(s);return Response.json(c)}else return console.error(\"Invalid parameters\",s),Response.error()}else{let s=\"/balance_of is a GET request\";return console.error(s),new Response(s,{status:500})}case\"/transfer\":if(e.method===\"POST\"){let s=await e.json();return a(w,s)?(x(e.headers.get(\"Referer\"),s),new Response(\"Success!\")):(console.error(\"Invalid parameters\",JSON.stringify(s)),Response.error())}else{let s=\"/transfer is a POST request\";return console.error(s),new Response(s,{status:500})}case\"/mint_new\":if(e.method===\"POST\"){let s=await e.json();return a(g,s)?(s.forEach(K),new Response(\"Success!\")):(console.error(\"Invalid parameters\",JSON.stringify(s)),Response.error())}else{let s=\"/mint_new is a POST request\";return console.error(s),new Response(s,{status:500})}case\"/update_operators\":if(e.method===\"PUT\"){let s=await e.json();return a(A,s)?(s.forEach(c=>v(e.headers.get(\"Referer\"),c)),new Response(\"Success!\")):(console.error(\"Invalid parameters\",JSON.stringify(s)),Response.error())}else{let s=\"/update_operators is a PUT request\";return console.error(s),new Response(s,{status:500})}default:let t=`Unrecognised entrypoint ${n}`;return console.error(t),new Response(t,{status:404})}}catch(t){throw console.error(t),t}}var F=U;export{F as default,_ as isBalanceOf,p as isBalanceRequest,q as isBalanceResponse,g as isMintNew,i as isTokenId,k as isTransfer,w as isTransfers,A as isUpdateOperator};\n"), account_credit: 0 }) } }
[📜] Smart function deployed: [PUBLIC_KEY_HASH]
Receipt: Receipt { hash: Blake2b([33, 70, 27, 168, 129, 21, 184, 237, 27, 213, 97, 217, 149, 7, 101, 172, 248, 89, 172, 128, 198, 35, 169, 30, 122, 202, 143, 59, 243, 112, 155, 245]), inner: Ok(DeployFunction(DeployFunction { address: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")) })) }

Internal message: end of level

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"


./octez-client --wait none send smart rollup message 'hex:[ "0023ec6364ae68bf09867b0f08f6c64818e5ddabee000000002000000000000000edadfe6cfe7b716a47cb43d7901504fefef6e3c2d4c84decaa7ec5d8c404800a000000004000000000000000a4581a2307b6083d352ea867ffd6ddcab1cd49b55777c92e09c2617d86f14db819961665d9ac8d45b986f380671850e26738ddffed964106814b0aad41736401000000001400000000000000cb4197b79836b135dc5bf07449b0d058fb84a395010000000000000001000000350000000000000074657a6f733a2f2f747a314c474a776e734d6a5637667370506954386f4a62476546776743366458703152372f6d696e745f6e65770400000000000000504f535400000000000000000193000000000000005b7b22746f6b656e5f6964223a302c226f776e6572223a22747a3165416b53577964783246454233445263696573673852634b64596f784172393578222c22616d6f756e74223a337d2c7b22746f6b656e5f6964223a312c226f776e6572223a22747a316850796836786b616a614c62544b6a48764b7338336b65694c6861324c46387851222c22616d6f756e74223a337d5da086010000000000" ]' from bootstrap2
Node is bootstrapped.
Estimated gas: 186.623 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000691
    Expected counter: 2
    Gas limit: 287
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000691
      payload fees(the block proposer) ....... +ꜩ0.000691
    Smart rollup messages submission:
      This smart rollup messages submission was successfully applied
      Consumed gas: 186.557

Internal message: start of level

Internal message: level info (block predecessor: [BLOCK_HASH], predecessor_timestamp: [TIMESTAMP]


External message: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtuJpBidwcMWRFQWycovvM1Jd6zZy9AT4pbh3awjvjRjmCgageqTkubijavnHq8jL28GHEdpE2WTGwo4btyWkAUQe9xfJgU")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(1), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/mint_new, method: POST, headers: {}, body: Some([91, 123, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 48, 44, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 101, 65, 107, 83, 87, 121, 100, 120, 50, 70, 69, 66, 51, 68, 82, 99, 105, 101, 115, 103, 56, 82, 99, 75, 100, 89, 111, 120, 65, 114, 57, 53, 120, 34, 44, 34, 97, 109, 111, 117, 110, 116, 34, 58, 51, 125, 44, 123, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 49, 44, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 104, 80, 121, 104, 54, 120, 107, 97, 106, 97, 76, 98, 84, 75, 106, 72, 118, 75, 115, 56, 51, 107, 101, 105, 76, 104, 97, 50, 76, 70, 56, 120, 81, 34, 44, 34, 97, 109, 111, 117, 110, 116, 34, 58, 51, 125, 93]), gas_limit: 100000 }) } }
External operation: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtuJpBidwcMWRFQWycovvM1Jd6zZy9AT4pbh3awjvjRjmCgageqTkubijavnHq8jL28GHEdpE2WTGwo4btyWkAUQe9xfJgU")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(1), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/mint_new, method: POST, headers: {}, body: Some([91, 123, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 48, 44, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 101, 65, 107, 83, 87, 121, 100, 120, 50, 70, 69, 66, 51, 68, 82, 99, 105, 101, 115, 103, 56, 82, 99, 75, 100, 89, 111, 120, 65, 114, 57, 53, 120, 34, 44, 34, 97, 109, 111, 117, 110, 116, 34, 58, 51, 125, 44, 123, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 49, 44, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 104, 80, 121, 104, 54, 120, 107, 97, 106, 97, 76, 98, 84, 75, 106, 72, 118, 75, 115, 56, 51, 107, 101, 105, 76, 104, 97, 50, 76, 70, 56, 120, 81, 34, 44, 34, 97, 109, 111, 117, 110, 116, 34, 58, 51, 125, 93]), gas_limit: 100000 }) } }
[JSTZ:SMART_FUNCTION:REQUEST_START] {"type":"Start","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"33e43b05e7c1914e642319dbb6f5c5eb7f65686093258f21ddf6741801476fd5"}
[JSTZ:SMART_FUNCTION:REQUEST_END] {"type":"End","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"33e43b05e7c1914e642319dbb6f5c5eb7f65686093258f21ddf6741801476fd5"}
🚀 Smart function executed successfully with value: Object((NativeObject) 0xC01F5CE0) (in 504 instructions)
Receipt: Receipt { hash: Blake2b([51, 228, 59, 5, 231, 193, 145, 78, 100, 35, 25, 219, 182, 245, 197, 235, 127, 101, 104, 96, 147, 37, 143, 33, 221, 246, 116, 24, 1, 71, 111, 213]), inner: Ok(RunFunction(RunFunction { body: Some([83, 117, 99, 99, 101, 115, 115, 33]), status_code: 200, headers: {"content-type": "text/plain;charset=UTF-8"} })) }

Internal message: end of level

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"


./octez-client --wait none send smart rollup message 'hex:[ "0023ec6364ae68bf09867b0f08f6c64818e5ddabee000000002000000000000000edadfe6cfe7b716a47cb43d7901504fefef6e3c2d4c84decaa7ec5d8c404800a000000004000000000000000262173110b51a3433caf35d99ee6d945b687879788ce1cecf50e1d335141c6fa806631a160a115246f01909ea1b7e4ec33bc4389d5006e50cdd7dc7770af8d0b000000001400000000000000cb4197b79836b135dc5bf07449b0d058fb84a395020000000000000001000000350000000000000074657a6f733a2f2f747a314c474a776e734d6a5637667370506954386f4a62476546776743366458703152372f7472616e736665720400000000000000504f535400000000000000000185000000000000005b7b2266726f6d223a22747a3165416b53577964783246454233445263696573673852634b64596f784172393578222c227472616e7366657273223a5b7b22746f6b656e5f6964223a302c22616d6f756e74223a312c22746f223a22747a316850796836786b616a614c62544b6a48764b7338336b65694c6861324c46387851227d5d7d5da086010000000000" ]' from bootstrap2
Node is bootstrapped.
Estimated gas: 186.088 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000677
    Expected counter: 3
    Gas limit: 287
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000677
      payload fees(the block proposer) ....... +ꜩ0.000677
    Smart rollup messages submission:
      This smart rollup messages submission was successfully applied
      Consumed gas: 186.022

Internal message: start of level

Internal message: level info (block predecessor: [BLOCK_HASH], predecessor_timestamp: [TIMESTAMP]


External message: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtco6kQkLihrfcL3erwfRS1xd3eNeXyxEarURtnyAj4xMwDb6zxTTweTKBThCAaPcLMdAJGSZrynqndor5U1Eo1DWwMyeNr")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(2), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/transfer, method: POST, headers: {}, body: Some([91, 123, 34, 102, 114, 111, 109, 34, 58, 34, 116, 122, 49, 101, 65, 107, 83, 87, 121, 100, 120, 50, 70, 69, 66, 51, 68, 82, 99, 105, 101, 115, 103, 56, 82, 99, 75, 100, 89, 111, 120, 65, 114, 57, 53, 120, 34, 44, 34, 116, 114, 97, 110, 115, 102, 101, 114, 115, 34, 58, 91, 123, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 48, 44, 34, 97, 109, 111, 117, 110, 116, 34, 58, 49, 44, 34, 116, 111, 34, 58, 34, 116, 122, 49, 104, 80, 121, 104, 54, 120, 107, 97, 106, 97, 76, 98, 84, 75, 106, 72, 118, 75, 115, 56, 51, 107, 101, 105, 76, 104, 97, 50, 76, 70, 56, 120, 81, 34, 125, 93, 125, 93]), gas_limit: 100000 }) } }
External operation: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtco6kQkLihrfcL3erwfRS1xd3eNeXyxEarURtnyAj4xMwDb6zxTTweTKBThCAaPcLMdAJGSZrynqndor5U1Eo1DWwMyeNr")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(2), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/transfer, method: POST, headers: {}, body: Some([91, 123, 34, 102, 114, 111, 109, 34, 58, 34, 116, 122, 49, 101, 65, 107, 83, 87, 121, 100, 120, 50, 70, 69, 66, 51, 68, 82, 99, 105, 101, 115, 103, 56, 82, 99, 75, 100, 89, 111, 120, 65, 114, 57, 53, 120, 34, 44, 34, 116, 114, 97, 110, 115, 102, 101, 114, 115, 34, 58, 91, 123, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 48, 44, 34, 97, 109, 111, 117, 110, 116, 34, 58, 49, 44, 34, 116, 111, 34, 58, 34, 116, 122, 49, 104, 80, 121, 104, 54, 120, 107, 97, 106, 97, 76, 98, 84, 75, 106, 72, 118, 75, 115, 56, 51, 107, 101, 105, 76, 104, 97, 50, 76, 70, 56, 120, 81, 34, 125, 93, 125, 93]), gas_limit: 100000 }) } }
[JSTZ:SMART_FUNCTION:REQUEST_START] {"type":"Start","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"09099c5db275b53d75d13641a6d2d2e125e56aeb95332ab199d38cc918ef2564"}
[JSTZ:SMART_FUNCTION:REQUEST_END] {"type":"End","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"09099c5db275b53d75d13641a6d2d2e125e56aeb95332ab199d38cc918ef2564"}
🚀 Smart function executed successfully with value: Object((NativeObject) 0xC03855E0) (in 496 instructions)
Receipt: Receipt { hash: Blake2b([9, 9, 156, 93, 178, 117, 181, 61, 117, 209, 54, 65, 166, 210, 210, 225, 37, 229, 106, 235, 149, 51, 42, 177, 153, 211, 140, 201, 24, 239, 37, 100]), inner: Ok(RunFunction(RunFunction { body: Some([83, 117, 99, 99, 101, 115, 115, 33]), status_code: 200, headers: {"content-type": "text/plain;charset=UTF-8"} })) }

Internal message: end of level

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"


./octez-client --wait none send smart rollup message 'hex:[ "0023ec6364ae68bf09867b0f08f6c64818e5ddabee000000002000000000000000edadfe6cfe7b716a47cb43d7901504fefef6e3c2d4c84decaa7ec5d8c404800a000000004000000000000000fd95db01720db12e896020decc03c0acd080e84dbc36f1b3608ca9d561422122b9155b5ec991faff9309f471c37b05922459d8e590de25189e373812b2e3470c000000001400000000000000cb4197b79836b135dc5bf07449b0d058fb84a395030000000000000001000000e90000000000000074657a6f733a2f2f747a314c474a776e734d6a5637667370506954386f4a62476546776743366458703152372f62616c616e63655f6f663f72657175657374733d57337369644739725a573566615751694f6a4173496d3933626d5679496a6f6964486f785a554672553164355a486779526b56434d30525359326c6c63326334556d4e4c5a466c76654546794f545634496e307365794a306232746c626c39705a4349364d537769623364755a5849694f694a30656a466c5157745456336c6b65444a475255497a52464a6a6157567a5a7a68535930746b57573934515849354e5867696656303d0300000000000000474554000000000000000000a086010000000000" ]' from bootstrap2
Node is bootstrapped.
Estimated gas: 187.541 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000715
    Expected counter: 4
    Gas limit: 288
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000715
      payload fees(the block proposer) ....... +ꜩ0.000715
    Smart rollup messages submission:
      This smart rollup messages submission was successfully applied
      Consumed gas: 187.475

Internal message: start of level

Internal message: level info (block predecessor: [BLOCK_HASH], predecessor_timestamp: [TIMESTAMP]


External message: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigu6yysUsVtdgrta8b8K6gm8uoPasB6oy93hkHCtVzWwZjP7Pc2tAbmPexeEjwtMw62BguWjCjnAEHq2PDqPEtR7BLPG7H1C")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(3), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/balance_of?requests=W3sidG9rZW5faWQiOjAsIm93bmVyIjoidHoxZUFrU1d5ZHgyRkVCM0RSY2llc2c4UmNLZFlveEFyOTV4In0seyJ0b2tlbl9pZCI6MSwib3duZXIiOiJ0ejFlQWtTV3lkeDJGRUIzRFJjaWVzZzhSY0tkWW94QXI5NXgifV0=, method: GET, headers: {}, body: None, gas_limit: 100000 }) } }
External operation: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigu6yysUsVtdgrta8b8K6gm8uoPasB6oy93hkHCtVzWwZjP7Pc2tAbmPexeEjwtMw62BguWjCjnAEHq2PDqPEtR7BLPG7H1C")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(3), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/balance_of?requests=W3sidG9rZW5faWQiOjAsIm93bmVyIjoidHoxZUFrU1d5ZHgyRkVCM0RSY2llc2c4UmNLZFlveEFyOTV4In0seyJ0b2tlbl9pZCI6MSwib3duZXIiOiJ0ejFlQWtTV3lkeDJGRUIzRFJjaWVzZzhSY0tkWW94QXI5NXgifV0=, method: GET, headers: {}, body: None, gas_limit: 100000 }) } }
[JSTZ:SMART_FUNCTION:REQUEST_START] {"type":"Start","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"f33749261b116523cc4012644b452f842fe5241bfd85a03e38d86c6449de4347"}
[JSTZ:SMART_FUNCTION:LOG] {"address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"f33749261b116523cc4012644b452f842fe5241bfd85a03e38d86c6449de4347","level":"LOG","text":"[PUBLIC_KEY_HASH] has 2 of token 0"}
[JSTZ:SMART_FUNCTION:LOG] {"address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"f33749261b116523cc4012644b452f842fe5241bfd85a03e38d86c6449de4347","level":"LOG","text":"[PUBLIC_KEY_HASH] has 0 of token 1"}
[JSTZ:SMART_FUNCTION:REQUEST_END] {"type":"End","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"f33749261b116523cc4012644b452f842fe5241bfd85a03e38d86c6449de4347"}
🚀 Smart function executed successfully with value: Object((NativeObject) 0xC050A260) (in 381 instructions)
Receipt: Receipt { hash: Blake2b([243, 55, 73, 38, 27, 17, 101, 35, 204, 64, 18, 100, 75, 69, 47, 132, 47, 229, 36, 27, 253, 133, 160, 62, 56, 216, 108, 100, 73, 222, 67, 71]), inner: Ok(RunFunction(RunFunction { body: Some([91, 123, 34, 98, 97, 108, 97, 110, 99, 101, 34, 58, 50, 46, 48, 44, 34, 114, 101, 113, 117, 101, 115, 116, 34, 58, 123, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 101, 65, 107, 83, 87, 121, 100, 120, 50, 70, 69, 66, 51, 68, 82, 99, 105, 101, 115, 103, 56, 82, 99, 75, 100, 89, 111, 120, 65, 114, 57, 53, 120, 34, 44, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 48, 125, 125, 44, 123, 34, 98, 97, 108, 97, 110, 99, 101, 34, 58, 48, 44, 34, 114, 101, 113, 117, 101, 115, 116, 34, 58, 123, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 101, 65, 107, 83, 87, 121, 100, 120, 50, 70, 69, 66, 51, 68, 82, 99, 105, 101, 115, 103, 56, 82, 99, 75, 100, 89, 111, 120, 65, 114, 57, 53, 120, 34, 44, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 49, 125, 125, 93]), status_code: 200, headers: {"content-type": "application/json"} })) }

Internal message: end of level

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"


./octez-client --wait none send smart rollup message 'hex:[ "0023ec6364ae68bf09867b0f08f6c64818e5ddabee0000000020000000000000005cc6bbdb7c8217a70e79f54c50ae51fb73cef19d18d7bc66c87135b1fcf073a90000000040000000000000000fe9f5019f1bc64c65e499a05b9ff58775460fff12c4fc1a25fbd864ee0fa5ddf9cb0005271a4913315e5f7938d0fac6881e1d2bab1c06d9454641e70fd77e0b000000001400000000000000eeaa7074a27463d707bf4b28e70460c70d3b7040000000000000000001000000e90000000000000074657a6f733a2f2f747a314c474a776e734d6a5637667370506954386f4a62476546776743366458703152372f62616c616e63655f6f663f72657175657374733d57337369644739725a573566615751694f6a4173496d3933626d5679496a6f6964486f786146423561445a3461324671595578695645747153485a4c637a677a61325670544768684d6b78474f486852496e307365794a306232746c626c39705a4349364d537769623364755a5849694f694a30656a466f55486c6f4e6e68725957706854474a5553327049646b747a4f444e725a576c4d6147457954455934654645696656303d0300000000000000474554000000000000000000a086010000000000" ]' from bootstrap2
Node is bootstrapped.
Estimated gas: 187.541 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000715
    Expected counter: 5
    Gas limit: 288
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000715
      payload fees(the block proposer) ....... +ꜩ0.000715
    Smart rollup messages submission:
      This smart rollup messages submission was successfully applied
      Consumed gas: 187.475

Internal message: start of level

Internal message: level info (block predecessor: [BLOCK_HASH], predecessor_timestamp: [TIMESTAMP]


External message: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtZtWzfCbSjqfPWe3xHvk4dNpzJvHW1f2M5zoqRXqjeMcPhBPQ7KAQqMaCQioUE6A3ssahpRyqt1dZMySQTC3ei2YG3gYSK")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(0), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/balance_of?requests=W3sidG9rZW5faWQiOjAsIm93bmVyIjoidHoxaFB5aDZ4a2FqYUxiVEtqSHZLczgza2VpTGhhMkxGOHhRIn0seyJ0b2tlbl9pZCI6MSwib3duZXIiOiJ0ejFoUHloNnhrYWphTGJUS2pIdktzODNrZWlMaGEyTEY4eFEifV0=, method: GET, headers: {}, body: None, gas_limit: 100000 }) } }
External operation: SignedOperation { public_key: Ed25519(PublicKeyEd25519("[PUBLIC_KEY]")), signature: Ed25519(Ed25519Signature("edsigtZtWzfCbSjqfPWe3xHvk4dNpzJvHW1f2M5zoqRXqjeMcPhBPQ7KAQqMaCQioUE6A3ssahpRyqt1dZMySQTC3ei2YG3gYSK")), inner: Operation { source: Tz1(ContractTz1Hash("[PUBLIC_KEY_HASH]")), nonce: Nonce(0), content: RunFunction(RunFunction { uri: tezos://[PUBLIC_KEY_HASH]/balance_of?requests=W3sidG9rZW5faWQiOjAsIm93bmVyIjoidHoxaFB5aDZ4a2FqYUxiVEtqSHZLczgza2VpTGhhMkxGOHhRIn0seyJ0b2tlbl9pZCI6MSwib3duZXIiOiJ0ejFoUHloNnhrYWphTGJUS2pIdktzODNrZWlMaGEyTEY4eFEifV0=, method: GET, headers: {}, body: None, gas_limit: 100000 }) } }
[JSTZ:SMART_FUNCTION:REQUEST_START] {"type":"Start","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"1c169abe41308f67c9ecf93fabaf6fea8a9405e69140b4289a1f329f144cc0a6"}
[JSTZ:SMART_FUNCTION:LOG] {"address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"1c169abe41308f67c9ecf93fabaf6fea8a9405e69140b4289a1f329f144cc0a6","level":"LOG","text":"[PUBLIC_KEY_HASH] has 1 of token 0"}
[JSTZ:SMART_FUNCTION:LOG] {"address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"1c169abe41308f67c9ecf93fabaf6fea8a9405e69140b4289a1f329f144cc0a6","level":"LOG","text":"[PUBLIC_KEY_HASH] has 3 of token 1"}
[JSTZ:SMART_FUNCTION:REQUEST_END] {"type":"End","address":{"Tz1":"[PUBLIC_KEY_HASH]"},"request_id":"1c169abe41308f67c9ecf93fabaf6fea8a9405e69140b4289a1f329f144cc0a6"}
🚀 Smart function executed successfully with value: Object((NativeObject) 0xC0692B60) (in 380 instructions)
Receipt: Receipt { hash: Blake2b([28, 22, 154, 190, 65, 48, 143, 103, 201, 236, 249, 63, 171, 175, 111, 234, 138, 148, 5, 230, 145, 64, 180, 40, 154, 31, 50, 159, 20, 76, 192, 166]), inner: Ok(RunFunction(RunFunction { body: Some([91, 123, 34, 98, 97, 108, 97, 110, 99, 101, 34, 58, 49, 44, 34, 114, 101, 113, 117, 101, 115, 116, 34, 58, 123, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 104, 80, 121, 104, 54, 120, 107, 97, 106, 97, 76, 98, 84, 75, 106, 72, 118, 75, 115, 56, 51, 107, 101, 105, 76, 104, 97, 50, 76, 70, 56, 120, 81, 34, 44, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 48, 125, 125, 44, 123, 34, 98, 97, 108, 97, 110, 99, 101, 34, 58, 51, 44, 34, 114, 101, 113, 117, 101, 115, 116, 34, 58, 123, 34, 111, 119, 110, 101, 114, 34, 58, 34, 116, 122, 49, 104, 80, 121, 104, 54, 120, 107, 97, 106, 97, 76, 98, 84, 75, 106, 72, 118, 75, 115, 56, 51, 107, 101, 105, 76, 104, 97, 50, 76, 70, 56, 120, 81, 34, 44, 34, 116, 111, 107, 101, 110, 95, 105, 100, 34, 58, 49, 125, 125, 93]), status_code: 200, headers: {"content-type": "application/json"} })) }

Internal message: end of level

GET http://[HOST]:[PORT]/global/block/head/state_hash
200 OK
"[SC_ROLLUP_PVM_STATE_HASH]"

