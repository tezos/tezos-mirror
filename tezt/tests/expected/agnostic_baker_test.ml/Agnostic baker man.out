
./octez-baker
Usage:
  octez-baker [global options] command [command options]
  octez-baker --help (for global options)
  octez-baker [global options] command --help (for command options)
  octez-baker --version (for version information)

To browse the documentation:
  octez-baker [global options] man (for a list of commands)
  octez-baker [global options] man -v 3 (for the full manual)

Global options (must come before the command):
  -d --base-dir <path>: client data directory (absent: TEZOS_CLIENT_DIR env)
  -n --no-base-dir-warnings: silence warnings about client data directory
  -c --config-file <path>: configuration file
  -t --timings: show RPC request times
  --chain <hash|tag>: chain on which to apply contextual commands (commands
    dependent on the context associated with the specified chain). Possible
    tags are 'main' and 'test'.
  -b --block <hash|level|tag>: block on which to apply contextual commands
    (commands dependent on the context associated with the specified block).
    Possible tags include 'head' and 'genesis' +/- an optional offset (e.g.
    "octez-client -b head-1 get timestamp"). Note that block queried must
    exist in node's storage.
  -w --wait <none|<int>>: how many confirmation blocks are needed before an
    operation is considered included
  -p --protocol <hash>: use commands of a specific protocol
  -l --log-requests: log all requests to the node
  --better-errors: Error reporting is more detailed. Can be used if a call to
    an RPC fails or if you don't know the input accepted by the RPC. It may
    happen that the RPC calls take more time however.
  -A --addr <IP addr|host>: [DEPRECATED: use --endpoint instead] IP address
    of the node
  -P --port <number>: [DEPRECATED: use --endpoint instead] RPC port of the
    node
  -S --tls: [DEPRECATED: use --endpoint instead] use TLS to connect to node.
  -m --media-type <json, binary, any or default>: Sets the "media-type" value
    for the "accept" header for RPC requests to the node. The media accept
    header indicates to the node which format of data serialisation is
    supported. Use the value "json" for serialisation to the JSON format.
  -E --endpoint <uri>: HTTP(S) endpoint of the node RPC interface; e.g.
    'http://localhost:8732'
  -s --sources <path>: path to JSON file containing sources for --mode light.
    Example file content: {"min_agreement": 1.0, "uris":
    ["http://localhost:8732", "https://localhost:8733"]}
  -R --remote-signer <uri>: URI of the remote signer
  -f --password-filename <filename>: path to the password filename
  -M --mode <client|light|mockup|proxy>: how to interact with the
    node
  --log-coloring <true|false>: Enable or disable light coloring in default
    stdout logs. Coloring is enabled by default.

./octez-baker --help
Usage:
  octez-baker [global options] command [command options]
  octez-baker --help (for global options)
  octez-baker [global options] command --help (for command options)
  octez-baker --version (for version information)

To browse the documentation:
  octez-baker [global options] man (for a list of commands)
  octez-baker [global options] man -v 3 (for the full manual)

Global options (must come before the command):
  -d --base-dir <path>: client data directory (absent: TEZOS_CLIENT_DIR env)
  -n --no-base-dir-warnings: silence warnings about client data directory
  -c --config-file <path>: configuration file
  -t --timings: show RPC request times
  --chain <hash|tag>: chain on which to apply contextual commands (commands
    dependent on the context associated with the specified chain). Possible
    tags are 'main' and 'test'.
  -b --block <hash|level|tag>: block on which to apply contextual commands
    (commands dependent on the context associated with the specified block).
    Possible tags include 'head' and 'genesis' +/- an optional offset (e.g.
    "octez-client -b head-1 get timestamp"). Note that block queried must
    exist in node's storage.
  -w --wait <none|<int>>: how many confirmation blocks are needed before an
    operation is considered included
  -p --protocol <hash>: use commands of a specific protocol
  -l --log-requests: log all requests to the node
  --better-errors: Error reporting is more detailed. Can be used if a call to
    an RPC fails or if you don't know the input accepted by the RPC. It may
    happen that the RPC calls take more time however.
  -A --addr <IP addr|host>: [DEPRECATED: use --endpoint instead] IP address
    of the node
  -P --port <number>: [DEPRECATED: use --endpoint instead] RPC port of the
    node
  -S --tls: [DEPRECATED: use --endpoint instead] use TLS to connect to node.
  -m --media-type <json, binary, any or default>: Sets the "media-type" value
    for the "accept" header for RPC requests to the node. The media accept
    header indicates to the node which format of data serialisation is
    supported. Use the value "json" for serialisation to the JSON format.
  -E --endpoint <uri>: HTTP(S) endpoint of the node RPC interface; e.g.
    'http://localhost:8732'
  -s --sources <path>: path to JSON file containing sources for --mode light.
    Example file content: {"min_agreement": 1.0, "uris":
    ["http://localhost:8732", "https://localhost:8733"]}
  -R --remote-signer <uri>: URI of the remote signer
  -f --password-filename <filename>: path to the password filename
  -M --mode <client|light|mockup|proxy>: how to interact with the
    node
  --log-coloring <true|false>: Enable or disable light coloring in default
    stdout logs. Coloring is enabled by default.

./octez-baker man
Usage:
  octez-baker [global options] command [command options]
  octez-baker --help (for global options)
  octez-baker [global options] command --help (for command options)
  octez-baker --version (for version information)

To browse the documentation:
  octez-baker [global options] man (for a list of commands)
  octez-baker [global options] man -v 3 (for the full manual)

Global options (must come before the command):
  -d --base-dir <path>: client data directory (absent: TEZOS_CLIENT_DIR env)
  -n --no-base-dir-warnings: silence warnings about client data directory
  -c --config-file <path>: configuration file
  -t --timings: show RPC request times
  --chain <hash|tag>: chain on which to apply contextual commands (commands
    dependent on the context associated with the specified chain). Possible
    tags are 'main' and 'test'.
  -b --block <hash|level|tag>: block on which to apply contextual commands
    (commands dependent on the context associated with the specified block).
    Possible tags include 'head' and 'genesis' +/- an optional offset (e.g.
    "octez-client -b head-1 get timestamp"). Note that block queried must
    exist in node's storage.
  -w --wait <none|<int>>: how many confirmation blocks are needed before an
    operation is considered included
  -p --protocol <hash>: use commands of a specific protocol
  -l --log-requests: log all requests to the node
  --better-errors: Error reporting is more detailed. Can be used if a call to
    an RPC fails or if you don't know the input accepted by the RPC. It may
    happen that the RPC calls take more time however.
  -A --addr <IP addr|host>: [DEPRECATED: use --endpoint instead] IP address
    of the node
  -P --port <number>: [DEPRECATED: use --endpoint instead] RPC port of the
    node
  -S --tls: [DEPRECATED: use --endpoint instead] use TLS to connect to node.
  -m --media-type <json, binary, any or default>: Sets the "media-type" value
    for the "accept" header for RPC requests to the node. The media accept
    header indicates to the node which format of data serialisation is
    supported. Use the value "json" for serialisation to the JSON format.
  -E --endpoint <uri>: HTTP(S) endpoint of the node RPC interface; e.g.
    'http://localhost:8732'
  -s --sources <path>: path to JSON file containing sources for --mode light.
    Example file content: {"min_agreement": 1.0, "uris":
    ["http://localhost:8732", "https://localhost:8733"]}
  -R --remote-signer <uri>: URI of the remote signer
  -f --password-filename <filename>: path to the password filename
  -M --mode <client|light|mockup|proxy>: how to interact with the
    node
  --log-coloring <true|false>: Enable or disable light coloring in default
    stdout logs. Coloring is enabled by default.

Access the documentation:

  man [<keyword>...]
    Print documentation of commands.

Commands for editing and viewing the client's config file:

  config show
    Show the current config (config file content + command line arguments) or
    the mockup config files if `--mode mockup` is specified.
  
  config reset
    Reset the config file to the factory defaults.
  
  config update
    Update the config based on the current cli values.
  
  config init 
    Create config file(s) based on the current CLI values.

Commands related to the agnostic baker daemon.:

  run with local node <node_data_path> [<baker>...]
    Launch the baker daemon
  
  run remotely [<baker>...]
    Launch the baker daemon using RPCs only.
  
  run vdf 
    Launch the VDF daemon
  
  run accuser 
    Launch the accuser daemon

Commands related to the DAL daemon.:

  run dal 
    Run the Octez DAL
  
  config dal init 
    This command creates a configuration file with the parameters provided on
    the command-line, if no configuration file exists already in the
    specified or default location. Otherwise, the command-line parameters
    override the existing ones, and old parameters are lost. This
    configuration is then used by the run command.
  
  config dal update 
    This command updates the configuration file with the parameters provided
    on the command-line. If no configuration file exists already, the command
    will fail.
  
  debug dal print store schemas 
    Print SQL statements describing the tables created in the store.

Miscellaneous commands:

  list understood protocols
    List the protocol versions that this client understands.
