
./octez-client --mode mockup --wait none originate contract test_transfer_contract1 transferring 100 from bootstrap1 running michelson_test_scripts/opcodes/noop.tz --burn-cap 10 --force
Node is bootstrapped.
Estimated gas: 578.200 units (will add 100 for safety)
Estimated storage: 295 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000336
    Expected counter: 1
    Gas limit: 679
    Storage limit: 315 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000336
      payload fees(the block proposer) ....... +ꜩ0.000336
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ100
      Script:
        { parameter unit ; storage unit ; code { CDR ; NIL operation ; PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 38 bytes
        Paid storage size diff: 38 bytes
        Consumed gas: 578.167
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.0095
          storage fees ........................... +ꜩ0.0095
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425
          [PUBLIC_KEY_HASH] ... -ꜩ100
          [CONTRACT_HASH] ... +ꜩ100

New contract [CONTRACT_HASH] originated.
Contract memorized as test_transfer_contract1.

./octez-client --mode mockup --wait none originate contract test_transfer_contract2 transferring 20 from bootstrap1 running michelson_test_scripts/opcodes/noop.tz --burn-cap 10 --force
Node is bootstrapped.
Estimated gas: 578.200 units (will add 100 for safety)
Estimated storage: 295 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000336
    Expected counter: 2
    Gas limit: 679
    Storage limit: 315 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000336
      payload fees(the block proposer) ....... +ꜩ0.000336
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ20
      Script:
        { parameter unit ; storage unit ; code { CDR ; NIL operation ; PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 38 bytes
        Paid storage size diff: 38 bytes
        Consumed gas: 578.167
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.0095
          storage fees ........................... +ꜩ0.0095
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425
          [PUBLIC_KEY_HASH] ... -ꜩ20
          [CONTRACT_HASH] ... +ꜩ20

New contract [CONTRACT_HASH] originated.
Contract memorized as test_transfer_contract2.

./octez-client --mode mockup --wait none originate contract transfer_tokens transferring 1000 from bootstrap1 running michelson_test_scripts/opcodes/transfer_tokens.tz --burn-cap 10 --force
Node is bootstrapped.
Estimated gas: 589.146 units (will add 100 for safety)
Estimated storage: 323 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000366
    Expected counter: 3
    Gas limit: 690
    Storage limit: 343 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000366
      payload fees(the block proposer) ....... +ꜩ0.000366
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ1000
      Script:
        { parameter (contract unit) ;
          storage unit ;
          code { CAR ;
                 DIP { UNIT } ;
                 PUSH mutez 100000000 ;
                 UNIT ;
                 TRANSFER_TOKENS ;
                 NIL operation ;
                 SWAP ;
                 CONS ;
                 PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 66 bytes
        Paid storage size diff: 66 bytes
        Consumed gas: 589.113
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.0165
          storage fees ........................... +ꜩ0.0165
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425
          [PUBLIC_KEY_HASH] ... -ꜩ1000
          [CONTRACT_HASH] ... +ꜩ1000

New contract [CONTRACT_HASH] originated.
Contract memorized as transfer_tokens.

./octez-client --mode mockup --wait none transfer 0 from bootstrap1 to '[CONTRACT_HASH]' --burn-cap 10 --arg '"[CONTRACT_HASH]"'
Node is bootstrapped.
Estimated gas: 2948.415 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000599
    Expected counter: 4
    Gas limit: 3049
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000599
      payload fees(the block proposer) ....... +ꜩ0.000599
    Transaction:
      Amount: ꜩ0
      From: [PUBLIC_KEY_HASH]
      To: [CONTRACT_HASH]
      Parameter: "[CONTRACT_HASH]"
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 66 bytes
      Consumed gas: 1741.268
      Internal operations:
        Internal Transaction:
          Amount: ꜩ100
          From: [CONTRACT_HASH]
          To: [CONTRACT_HASH]
          This transaction was successfully applied
          Updated storage: Unit
          Storage size: 38 bytes
          Consumed gas: 1208.328
          Balance updates:
            [CONTRACT_HASH] ... -ꜩ100
            [CONTRACT_HASH] ... +ꜩ100


./octez-client --mode mockup --wait none transfer 0 from bootstrap1 to '[CONTRACT_HASH]' --burn-cap 10 --arg '"[CONTRACT_HASH]"'
Node is bootstrapped.
Estimated gas: 2948.415 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000599
    Expected counter: 5
    Gas limit: 3049
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000599
      payload fees(the block proposer) ....... +ꜩ0.000599
    Transaction:
      Amount: ꜩ0
      From: [PUBLIC_KEY_HASH]
      To: [CONTRACT_HASH]
      Parameter: "[CONTRACT_HASH]"
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 66 bytes
      Consumed gas: 1741.268
      Internal operations:
        Internal Transaction:
          Amount: ꜩ100
          From: [CONTRACT_HASH]
          To: [CONTRACT_HASH]
          This transaction was successfully applied
          Updated storage: Unit
          Storage size: 38 bytes
          Consumed gas: 1208.328
          Balance updates:
            [CONTRACT_HASH] ... -ꜩ100
            [CONTRACT_HASH] ... +ꜩ100

