# runtime + datadog client + basic utils

ARG GCLOUD_VERSION=${GCLOUD_VERSION:-543.0.0}
FROM gcr.io/google.com/cloudsdktool/google-cloud-cli:$GCLOUD_VERSION-alpine as gcloud

# hadolint ignore=DL3006
FROM runtime as monitoring

LABEL org.opencontainers.image.title="monitoring"

USER root

# install gcloud to setup GOOGLE_APPLICATION_CREDENTIALS easily
# hadolint ignore=DL3022
COPY --from=gcloud /google-cloud-sdk/ /usr/local/gcloud/google-cloud-sdk/
ENV PATH $PATH:/usr/local/gcloud/google-cloud-sdk/bin

# [jq] and [curl] are used in the job that parses Container Scanning
# vulnerability report and sends a notification via a Slack Webhook.
# These utilities are also used in other Docker images built from this one.

# python3 py3-crcmod are needed to run gcloud

# hadolint ignore=DL3018,DL3019
RUN apk update && apk add --no-cache npm curl jq python3 py3-crcmod

# Set NPM registry
# NPM_REGISTRY_DOMAIN and NPM_REGISTRY are set in the GitLab CI/CD
ARG NPM_REGISTRY_DOMAIN
ARG NPM_REGISTRY
COPY datadog/package.json datadog/package-lock.json /usr/local/lib/datadog/
# hadolint ignore=DL3003
RUN --mount=type=secret,id=npm_token \
    if [ -n "$NPM_REGISTRY" ] ; then \
      npm set registry "$NPM_REGISTRY" && \
      npm set //"${NPM_REGISTRY_DOMAIN}":_authToken="$(cat /run/secrets/npm_token)"; \
    fi \
    && cd /usr/local/lib/datadog && npm ci

USER tezos
ENV USER=tezos
ENV PATH=/usr/local/lib/datadog/node_modules/.bin:$PATH
WORKDIR /home/tezos
