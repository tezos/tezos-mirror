# runtime + prebuild dependencies
#
# This image builds upon the `runtime` image, see its
# header for details on its content.
#
# It adds upon the contents of `runtime`:
# - non-opam build-dependencies (rust dependencies)
# - cache for opam build-dependencies
#
# This image is intended for
# - testing the buildability of tezos opam packages
# - building images on top of it in the image stack (see README.md)

# hadolint ignore=DL3006
FROM monitoring as prebuild

LABEL org.opencontainers.image.title="prebuild"

USER root

# SHELL already set in runtime

WORKDIR /tmp

# Automatically set if you use Docker buildx
ARG TARGETARCH

# why the git config???
COPY --chown=tezos:tezos .gitconfig /home/tezos/

# Rust installer script
COPY --chown=tezos:tezos install-rust.sh /tmp/

# setup kisscache
COPY --chown=tezos:tezos scripts/kiss-fetch.sh scripts/kiss-logs.sh /tmp/
ENV KISSCACHE="http://kisscache.kisscache.svc.cluster.local"
ENV OPAMFETCH="/tmp/kiss-fetch.sh"

# hadolint ignore=DL3018,DL3019
RUN apk update \
# Do not use apk --no-cache here because opam needs the cache.
# See https://github.com/ocaml/opam/issues/5186
 && apk add --no-cache \
    autoconf \
    automake \
    bash \
    build-base \
    ca-certificates \
    cmake \
    coreutils \
    eudev-dev \
    git \
    gmp-dev \
    libev-dev \
    libffi-dev \
    libtool \
    linux-headers \
    m4 \
    ncurses-dev \
    openssh-client \
    openssl-dev \
    patch \
    perl \
    postgresql14-dev \
    rsync \
    tar \
    unzip \
    wget \
    xz \
    zlib-dev \
    zlib-static \
    libusb-dev \
    hidapi-dev \
    sccache \
    shfmt \
    upx \
    protobuf \
    protobuf-dev \
    sqlite-static \
    sqlite-dev \
 # Opam from Edge is Opam 2.2
 && apk add --no-cache \
    opam --repository=https://dl-cdn.alpinelinux.org/alpine/edge/community

# Install Cargo and Rust (more information in the shell script)
RUN ./install-rust.sh \
    && rm -rf /tmp/install-rust.sh

USER tezos
WORKDIR /home/tezos

# Create an opam-repository directory that is a clone of the public opam repository
# filtered to only keep packages which we actually need.
COPY --chown=tezos:tezos scripts/create_opam_repo.sh scripts/version.sh octez-deps.opam.locked ./

COPY --chown=tezos:tezos stdcompat.opam.locked ./

# Run the script, then clean up; we only need the result of the script (the opam repository).
RUN ./create_opam_repo.sh \
  && rm create_opam_repo.sh \
  && rm octez-deps.opam.locked \
  && rm stdcompat.opam.locked \
  && rm version.sh

# Needed by 'opam admin cache' below
WORKDIR /home/tezos/opam-repository

# Install OCaml
ARG OCAML_VERSION
# hadolint ignore=SC2046,DL4006
RUN opam init --disable-sandboxing --no-setup --yes \
              --compiler ocaml-base-compiler.${OCAML_VERSION} \
              tezos /home/tezos/opam-repository \
 && opam clean

# Add opam cache
RUN opam admin cache \
 && opam update \
 && opam clean

USER root
RUN /tmp/kiss-logs.sh /tmp/kiss.log \
 && rm -f /tmp/kiss.log

USER tezos

ENTRYPOINT [ "opam", "exec", "--" ]
CMD [ "/bin/sh" ]
