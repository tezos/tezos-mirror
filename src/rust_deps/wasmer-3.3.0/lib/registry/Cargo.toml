[package]
name = "wasmer-registry"
version = "4.5.0"
edition = "2021"
license = "MIT"
description = "Crate to interact with the wasmer registry (wapm.io), download packages, etc."

[features]
build-package  = ["rusqlite", "indexmap", "wasmer-wasm-interface", "wasmparser", "rpassword", "minisign", "time"]

[dev-dependencies]
rand = "0.8.5"

[dependencies]
dirs = "4.0.0"
graphql_client = "0.11.0"
serde = { version = "1.0.145", features = ["derive"] }
anyhow = "1.0.65"
futures-util = "0.3.25"
whoami = "1.2.3"
serde_json = "1.0.85"
url = "2.3.1"
thiserror = "1.0.37"
toml = "0.5.9"
wasmer-toml = "0.6.0"
tar = "0.4.38"
flate2 = "1.0.24"
semver = "1.0.14"
lzma-rs = "0.2.0"
webc = { version = "5.0", features = ["mmap"] }
hex = "0.4.3"
tokio = "1.24.0"
log = "0.4.17"
regex = "1.7.0"
fs_extra = "1.2.0"
filetime = "0.2.19"
tldextract = "0.6.0"
console = "0.15.2"
indicatif = "0.17.2"
lazy_static = "1.4.0"
tempfile = "3.4.0"

rusqlite = { version = "0.28.0", optional = true, features = ["bundled"] }
time = { version = "0.3.17", default-features = false, features = ["parsing", "std", "formatting"], optional = true }
indexmap = { version = "1.9.3", optional = true }
wasmer-wasm-interface = { version = "3.3.0", path = "../wasm-interface", optional = true }
wasmparser = { version = "0.51.4", optional = true }
rpassword = { version = "7.2.0", optional = true }
minisign = { version = "0.7.2", optional = true }

[target.'cfg(not(target_arch = "riscv64"))'.dependencies]
reqwest = { version = "0.11.12", default-features = false, features = ["rustls-tls", "blocking", "multipart", "json", "stream"] }

[target.'cfg(target_arch = "riscv64")'.dependencies]
reqwest = { version = "0.11.12", default-features = false, features = ["native-tls", "blocking", "multipart", "json", "stream"] }
