[package]
name = "wasmer-web"
version = "0.2.0"
authors = ["John Sharratt <johnathan.sharratt@gmail.com>"]
edition = "2021"
publish = false
description = "Wasmer Web Terminal built on WASMER and ATE"
license = "MIT OR Apache-2.0"
keywords = [ "wasm", "browser", "terminal" ]
repository = "https://github.com/john-sharratt/ate"
readme = "../README.md"

[dependencies]
wasmer = { path = "../api", default_features = false, features = [ "js-default" ] }
wasmer-wasix = { path = "../wasi",  default-features = false, features = [ "js-default" ] }
#wasm-bindgen = { version = "0.2", features = [ "nightly", "serde-serialize" ] }
wasm-bindgen = { version = "0.2", features = [ "serde-serialize" ] }
wasm-bindgen-futures = "0.4"
console_error_panic_hook = "^0.1"
js-sys = "0.3"
tracing = { version = "^0.1", features = [ "log", "release_max_level_info" ] }
#tracing = { version = "^0.1", features = [ "log" ] }
tracing-futures = { version = "^0.2" }
tracing-subscriber = { version = "^0.2" }
tracing-wasm = { version = "^0.2" }
bytes = "^1"
once_cell = "^1"
serde = { version = "^1", features = ["derive"] }
serde_derive = "^1"
serde_json = "^1"
tokio = { version = "1", features = [ "rt", "sync", "macros" ], default_features = false }
derivative = { version = "^2" }
base64 = { version = "^0.13" }
sha2 = { version = "^0.9" }
url = { version = "^2" }
regex = { version = "^1.5" }
fastrand = "^1.5"
bincode = "1"
async-trait = "^0.1"
dummy-waker = "^1"
wat = "1.0"
anyhow = "1.0.66"
futures = "0.3.25"

[dependencies.parking_lot]
version = "^0.11"
features = [ "wasm-bindgen" ]

[dependencies.xterm-js-rs]
version = "^0.1"
features = [
  "xterm-addon-fit",
  "xterm-addon-web-links",
  "xterm-addon-webgl"
]

[dependencies.web-sys]
version = "^0.3"
features = [
  "BinaryType",
  "Blob",
  'console',
  'CanvasRenderingContext2d',
  'CssStyleDeclaration',
  'Document',
  "DedicatedWorkerGlobalScope",
  'Element',
  "ErrorEvent",
  'EventTarget',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  "FileReader",
  'Headers',
  'HtmlCanvasElement',
  'HtmlElement',
  'HtmlInputElement',
  'HtmlDivElement',
  'Location',
  'MessageEvent',
  "Navigator",
  'Node',
  'NodeList',
  "ProgressEvent",
  'Window',  
  "Url",
  'UrlSearchParams',
  "WebSocket",
  'Worker',
  "WorkerOptions",
  "WorkerType",
  "WebGl2RenderingContext",
  "WebGlActiveInfo",
  "WebGlBuffer",
  "WebGlContextAttributes",
  "WebGlContextEvent",
  "WebGlContextEventInit",
  "WebGlFramebuffer",
  "WebGlProgram",
  "WebGlQuery",
  "WebGlRenderbuffer",
  "WebGlRenderingContext",
  "WebGlSampler",
  "WebGlShader",
  "WebGlShaderPrecisionFormat",
  "WebGlSync",
  "WebGlTexture",
  "WebGlTransformFeedback",
  "WebGlUniformLocation",
  "WebGlVertexArrayObject",
  "WebglColorBufferFloat",
  "WebglCompressedTextureAstc",
  "WebglCompressedTextureAtc",
  "WebglCompressedTextureEtc",
  "WebglCompressedTextureEtc1",
  "WebglCompressedTexturePvrtc",
  "WebglCompressedTextureS3tc",
  "WebglCompressedTextureS3tcSrgb",
  "WebglDebugRendererInfo",
  "WebglDebugShaders",
  "WebglDepthTexture",
  "WebglDrawBuffers",
  "WebglLoseContext",
]

[dev-dependencies]
wasm-bindgen-test = "^0.3"

[build-dependencies]
build-deps = "^0.1"

[lib]
crate-type = ["cdylib"]

[package.metadata.wasm-pack.profile.dev]
# Should `wasm-opt` be used to further optimize the wasm binary generated after
# the Rust compiler has finished? Using `wasm-opt` can often further decrease
# binary size or do clever tricks that haven't made their way into LLVM yet.
#
# Configuration is set to `false` by default for the dev profile, but it can
# be set to an array of strings which are explicit arguments to pass to
# `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# would execute very expensive optimizations passes
wasm-opt = ['--strip-debug --enable-reference-types']

[package.metadata.wasm-pack.profile.dev.wasm-bindgen]
debug-js-glue = true
demangle-name-section = true
dwarf-debug-info = true

[package.metadata.wasm-pack.profile.release]
# The version of wasm-opt that wasm-pack bundles crashes on current wasm-bindgen
# .wasm files. Current wasm-opt (version 93) crashes on the DWARF info that
# wasm-bindgen produces. So, we'll just disable wasm-opt for now.
wasm-opt = false #["-O4"]
#wasm-opt = ['--strip-debug --enable-reference-types']

[package.metadata.wasm-pack.profile.release.wasm-bindgen]
debug-js-glue = false
demangle-name-section = false
dwarf-debug-info = false
