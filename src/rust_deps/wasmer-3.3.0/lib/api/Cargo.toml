[package]
name = "wasmer"
version = "3.3.0"
description = "High-performance WebAssembly runtime"
categories = ["wasm"]
keywords = ["wasm", "webassembly", "runtime", "vm"]
authors = ["Wasmer Engineering Team <engineering@wasmer.io>"]
repository = "https://github.com/wasmerio/wasmer"
license = "MIT"
readme = "README.md"
edition = "2018"

#####
# This crate comes in 2 major flavors:
#
# - `sys`, where `wasmer` will be compiled to a native executable
#    which provides compilers, engines, a full VM etc.
# - `js`, where `wasmer` will be compiled to WebAssembly to run in a
#   JavaScript host.
#####

# Shared dependencies.
[dependencies]
# - Mandatory shared dependencies.
indexmap = { version = "1.6" }
cfg-if = "1.0"
thiserror = "1.0"
more-asserts = "0.2"
derivative = { version = "^2" }
bytes = "1"
# - Optional shared dependencies.
wat = { version = "1.0", optional = true }
tracing = { version = "0.1", optional = true }
rustc-demangle = "0.1"

# Dependencies and Development Dependencies for `sys`.
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# - Mandatory dependencies for `sys`.
wasmer-vm = { path = "../vm", version = "=3.3.0" }
wasmer-compiler = { path = "../compiler", version = "=3.3.0" }
wasmer-derive = { path = "../derive", version = "=3.3.0" }
wasmer-types = { path = "../types", version = "=3.3.0" }
target-lexicon = { version = "0.12.2", default-features = false }
# - Optional dependencies for `sys`.
wasmer-compiler-singlepass = { path = "../compiler-singlepass", version = "=3.3.0", optional = true }
wasmer-compiler-cranelift = { path = "../compiler-cranelift", version = "=3.3.0", optional = true }
wasmer-compiler-llvm = { path = "../compiler-llvm", version = "=3.3.0", optional = true }

wasm-bindgen = { version = "0.2.74", optional = true }
js-sys = { version = "0.3.51", optional = true }
rusty_jsc = { version = "0.1.0", optional = true }
# rusty_jsc = { path="../../../rusty_jsc", optional = true }
wasmparser = { version = "0.83", default-features = false, optional = true }

# - Mandatory dependencies for `sys` on Windows.
[target.'cfg(all(not(target_arch = "wasm32"), target_os = "windows"))'.dependencies]
winapi = "0.3"
# - Development Dependencies for `sys`.
[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
wat = "1.0"
tempfile = "3.4.0"
anyhow = "1.0"
macro-wasmer-universal-test = { version = "3.3.0", path = "./macro-wasmer-universal-test" }

# Dependencies and Develoment Dependencies for `js`.
[target.'cfg(target_arch = "wasm32")'.dependencies]
# - Mandatory dependencies for `js`.
wasmer-types = { path = "../types", version = "=3.3.0", default-features = false, features = ["std"] }
wasm-bindgen = "0.2.74"
wasm-bindgen-downcast = { version = "0.1.1" }
js-sys = "0.3.51"
#web-sys = { version = "0.3.51", features = [ "console" ] }
wasmer-derive = { path = "../derive", version = "=3.3.0" }
# - Optional dependencies for `js`.
wasmparser = { version = "0.95", default-features = false, optional = true }
hashbrown = { version = "0.11", optional = true }
serde-wasm-bindgen = { version = "0.4.5" }
serde = { version = "1.0", features = ["derive"] }

# - Development Dependencies for `js`.
[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wat = "1.0"
anyhow = "1.0"
wasm-bindgen-test = "0.3.0"
macro-wasmer-universal-test = { version = "3.3.0", path = "./macro-wasmer-universal-test" }

# Specific to `js`.
#
# `wasm-opt` is on by default in for the release profile, but it can be
# disabled by setting it to `false`
[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[badges]
maintenance = { status = "actively-developed" }

[features]
default = ["sys-default"]
# default = ["js-default"]
std = []
core = ["hashbrown"]

# Features for `sys`.
sys = [
  "wasmer-compiler/translator",
  "wasmer-compiler/compiler",
  "std",
]
sys-default = ["sys", "wat", "cranelift"]
# - Compilers.
compiler = [
    "sys",
]
singlepass = ["compiler", "wasmer-compiler-singlepass"]
cranelift = ["compiler", "wasmer-compiler-cranelift"]
llvm = ["compiler", "wasmer-compiler-llvm"]
# - Engines.
engine = ["sys"]
# - Deprecated features.
jit = ["engine"]

# Features for `js`.
js = ["wasm-bindgen", "js-sys"]
js-default = ["js", "std", "wasm-types-polyfill"]

wasm-types-polyfill = ["wasmparser"]

jsc = [
  "rusty_jsc",
  "wasm-types-polyfill",
  "wasmparser",
]

js-serializable-module = []

# Optional
enable-serde = [
  "wasmer-vm/enable-serde",
  "wasmer-compiler/enable-serde",
  "wasmer-types/enable-serde",
]

wasmer-artifact-load = ["wasmer-compiler/wasmer-artifact-load"]
wasmer-artifact-create = ["wasmer-compiler/wasmer-artifact-create"]
static-artifact-load = ["wasmer-compiler/static-artifact-load"]
static-artifact-create = ["wasmer-compiler/static-artifact-create"]

[package.metadata.docs.rs]
features = [
    "compiler",
    "core",
    "cranelift",
    "engine",
    "jit",
    "singlepass",
    "static-artifact-create",
    "static-artifact-load",
    "sys",
    "sys-default",
    "wasmer-artifact-create",
    "wasmer-artifact-load",
]
