(* Generated by ocaml-rs *)

open! Bigarray

(* file: ocaml_api.rs *)

type repo
type state
type id
type status = Evaluating | WaitingForInput | WaitingForMetadata
type reveal_data = RawData of string | Metadata of bytes * int32
type input = InboxMessage of int32 * int64 * string | Reveal of reveal_data
type input_request
type proof
external octez_riscv_id_unsafe_of_raw_bytes: bytes -> id = "octez_riscv_id_unsafe_of_raw_bytes"
external octez_riscv_storage_id_to_raw_bytes: id -> bytes = "octez_riscv_storage_id_to_raw_bytes"
external octez_riscv_storage_id_equal: id -> id -> bool = "octez_riscv_storage_id_equal"
external octez_riscv_storage_state_equal: state -> state -> bool = "octez_riscv_storage_state_equal"
external octez_riscv_storage_state_empty: unit -> state = "octez_riscv_storage_state_empty"
external octez_riscv_storage_load: string -> repo = "octez_riscv_storage_load"
external octez_riscv_storage_close: repo -> unit = "octez_riscv_storage_close"
external octez_riscv_storage_commit: repo -> state -> id = "octez_riscv_storage_commit"
external octez_riscv_storage_checkout: repo -> id -> state option = "octez_riscv_storage_checkout"
external octez_riscv_get_status: state -> status = "octez_riscv_get_status"
external octez_riscv_string_of_status: status -> string = "octez_riscv_string_of_status"
external octez_riscv_compute_step: state -> state = "octez_riscv_compute_step"
external octez_riscv_compute_step_with_debug: state -> (int -> unit) -> state = "octez_riscv_compute_step_with_debug"
external octez_riscv_compute_step_many: int64 -> state -> (state * int64) = "octez_riscv_compute_step_many"
external octez_riscv_compute_step_many_with_debug: int64 -> state -> (int -> unit) -> (state * int64) = "octez_riscv_compute_step_many_with_debug"
external octez_riscv_get_tick: state -> int64 = "octez_riscv_get_tick"
external octez_riscv_get_level: state -> int32 option = "octez_riscv_get_level"
external octez_riscv_install_boot_sector: state -> bytes -> state = "octez_riscv_install_boot_sector"
external octez_riscv_state_hash: state -> bytes = "octez_riscv_state_hash"
external octez_riscv_set_input: state -> input -> state = "octez_riscv_set_input"
external octez_riscv_get_message_counter: state -> int64 = "octez_riscv_get_message_counter"
external octez_riscv_storage_export_snapshot: repo -> id -> string -> (unit, [`Msg of string]) result = "octez_riscv_storage_export_snapshot"
external octez_riscv_proof_start_state: proof -> bytes = "octez_riscv_proof_start_state"
external octez_riscv_proof_stop_state: proof -> bytes = "octez_riscv_proof_stop_state"
external octez_riscv_verify_proof: input option -> proof -> input_request option = "octez_riscv_verify_proof"
external octez_riscv_produce_proof: input option -> state -> proof option = "octez_riscv_produce_proof"
