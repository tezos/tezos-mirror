function o(e){return typeof e=="string"}function a(e,r){return Array.isArray(r)&&r.reduce((n,t)=>n&&e(t),!0)}function i(e){return typeof e=="number"&&Number.isInteger(e)}function k(e){let r=e;try{return o(r.to)&&i(r.token_id)&&Number.isInteger(r.amount)}catch{return!1}}function w(e){let r=e;try{return o(r.from)&&a(k,r.transfers)}catch{return!1}}function A(e){let r=e;try{return(r.operation==="add_operator"||r.operation==="remove_operator")&&o(r.owner)&&o(r.operator)&&i(r.token_id)}catch{return!1}}function p(e){let r=e;try{return o(r.owner)&&i(r.token_id)}catch{return!1}}function _(e){let r=e;try{return a(p,r.requests)}catch{return!1}}function q(e){let r=e;try{return p(r.request)&&Number.isInteger(r.balance)}catch{return!1}}function g(e){let r=e;try{return i(r.token_id)&&o(r.owner)&&Number.isInteger(r.amount)}catch{return!1}}function d(e){return`token/${e}`}function R(e){let r=d(e);if(Kv.get(r))throw"FA2_TOKEN_ID_EXISTS";Kv.set(d(e),!0)}function O(e){if(!Kv.get(d(e)))throw"FA2_TOKEN_UNDEFINED"}function l(e,r){return`balance/${e}/${r}`}function m(e,r){return Kv.get(l(e,r))||0}function h(e,r,n){if(n<0)throw"FA2_INSUFFICIENT_BALANCE";Kv.set(l(e,r),n)}function u(e,r,n){let t=m(e,r);h(e,r,t+n)}function y(e,r,n,t){u(e,n,-t),u(r,n,t)}function f(e,r,n){return`owner/${e}/${r}/${n}`}function I(e,r,n){Kv.set(f(e,r,n),!0)}function b(e,r,n){Kv.delete(f(e,r,n))}function T(e,r,n){if(!(e===r||Kv.get(f(e,r,n))))throw"FA2_NOT_OPERATOR"}function B(e,r){if(e!==r)throw console.log(`${e} !== ${r}`),"FA2_NOT_OWNER"}function N(e,r,n){O(n.token_id),T(e,r,n.token_id),y(e,n.to,n.token_id,n.amount)}function x(e,r){r.forEach(n=>n.transfers.forEach(t=>N(n.from,e,t)))}function v(e,r){switch(r.operation){case"add_operator":B(r.owner,e),I(r.owner,r.operator,r.token_id);break;case"remove_operator":T(r.owner,e,r.token_id),b(r.owner,r.operator,r.token_id)}}function E(e){let r=m(e.owner,e.token_id);return console.log(`${e.owner} has ${r} of token ${e.token_id}`),{request:e,balance:r}}function S(e){return e.requests.map(E)}function K(e){R(e.token_id),u(e.owner,e.token_id,e.amount)}async function U(e){let r=new URL(e.url),n=r.pathname;try{switch(n){case"/ping":return console.log("Hello from runner smart function \u{1F44B}"),new Response("Pong");case"/balance_of":if(e.method==="GET"){let s={requests:JSON.parse(atob(r.searchParams.get("requests")))};if(_(s)){let c=S(s);return Response.json(c)}else return console.error("Invalid parameters",s),Response.error()}else{let s="/balance_of is a GET request";return console.error(s),new Response(s,{status:500})}case"/transfer":if(e.method==="POST"){let s=await e.json();return a(w,s)?(x(e.headers.get("Referer"),s),new Response("Success!")):(console.error("Invalid parameters",JSON.stringify(s)),Response.error())}else{let s="/transfer is a POST request";return console.error(s),new Response(s,{status:500})}case"/mint_new":if(e.method==="POST"){let s=await e.json();return a(g,s)?(s.forEach(K),new Response("Success!")):(console.error("Invalid parameters",JSON.stringify(s)),Response.error())}else{let s="/mint_new is a POST request";return console.error(s),new Response(s,{status:500})}case"/update_operators":if(e.method==="PUT"){let s=await e.json();return a(A,s)?(s.forEach(c=>v(e.headers.get("Referer"),c)),new Response("Success!")):(console.error("Invalid parameters",JSON.stringify(s)),Response.error())}else{let s="/update_operators is a PUT request";return console.error(s),new Response(s,{status:500})}default:let t=`Unrecognised entrypoint ${n}`;return console.error(t),new Response(t,{status:404})}}catch(t){throw console.error(t),t}}var F=U;export{F as default,_ as isBalanceOf,p as isBalanceRequest,q as isBalanceResponse,g as isMintNew,i as isTokenId,k as isTransfer,w as isTransfers,A as isUpdateOperator};
