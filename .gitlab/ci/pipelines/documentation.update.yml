# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

stages:
- start
- images
- build
- publish

oc.docker:ci:amd64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.13.0
  stage: images
  tags:
  - gcp
  dependencies: []
  timeout: 90 minutes
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - ./images/ci_create_ci_images.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.7
    CI_DOCKER_HUB: "false"
    ARCH: amd64
  artifacts:
    reports:
      dotenv: ci_image_tag.env

datadog_pipeline_trace:
  image: datadog/ci:v2.44.0
  stage: start
  tags:
  - gcp
  needs: []
  dependencies: []
  allow_failure: true
  timeout: 60 minutes
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - CI_MERGE_REQUEST_IID=${CI_MERGE_REQUEST_IID:-none}
  - DATADOG_SITE=datadoghq.eu datadog-ci tag --level pipeline --tags pipeline_type:$PIPELINE_TYPE
    --tags mr_number:$CI_MERGE_REQUEST_IID
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'

oc.build:static-x86_64-linux-binaries:
  image: ${ci_image_name}/build:${ci_image_tag}
  stage: build
  tags:
  - gcp_very_high_cpu_ramfs
  rules:
  - when: always
  needs:
  - oc.docker:ci:amd64
  dependencies:
  - oc.docker:ci:amd64
  timeout: 60 minutes
  cache:
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  - key: rust-targets-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/_target
    policy: pull-push
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - ./scripts/ci/build_static_binaries.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/octez-released-executables script-inputs/octez-experimental-executables
    DUNE_BUILD_JOBS: -j 12
    CARGO_NET_OFFLINE: "false"
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
    OCTEZ_RUST_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rust_deps
    OCTEZ_RUSTZCASH_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rustzcash_deps
    OCTEZ_ETHERLINK_WASM_RUNTIME_TARGET_DIR: $CI_PROJECT_DIR/_target/etherlink_wasm_runtime
  artifacts:
    paths:
    - octez-binaries/$ARCH/*

documentation.docgen:
  image: ${ci_image_name}/test:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  dependencies:
  - oc.docker:ci:amd64
  timeout: 60 minutes
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - eval $(opam env)
  - make -C docs -j docexes-gen
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    CARGO_NET_OFFLINE: "false"
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
  artifacts:
    expire_in: 1 week
    paths:
    - docs/alpha/rpc.rst
    - docs/shell/rpc.rst
    - docs/user/default-acl.json
    - docs/api/errors.rst
    - docs/shell/p2p_api.rst

documentation.manuals:
  image: ${ci_image_name}/test:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  - oc.build:static-x86_64-linux-binaries
  dependencies:
  - oc.docker:ci:amd64
  - oc.build:static-x86_64-linux-binaries
  timeout: 60 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - eval $(opam env)
  - scripts/ci/documentation:manuals_static.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  artifacts:
    expire_in: 1 week
    paths:
    - docs/*/octez-*.html
    - docs/api/octez-*.txt
    - docs/developer/metrics.csv
    - docs/developer/rollup_metrics.csv
    - docs/user/node-config.json

documentation.odoc:
  image: ${ci_image_name}/test:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  dependencies:
  - oc.docker:ci:amd64
  timeout: 60 minutes
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - eval $(opam env)
  - make -C docs odoc
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    CARGO_NET_OFFLINE: "false"
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
  artifacts:
    expire_in: 4 hours
    paths:
    - docs/_build/api/odoc/
    - docs/odoc.log
    when: always

documentation.build_all:
  image: ${ci_image_name}/test:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  - documentation.odoc
  - documentation.manuals
  - documentation.docgen
  dependencies:
  - oc.docker:ci:amd64
  - documentation.odoc
  - documentation.manuals
  - documentation.docgen
  timeout: 60 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - eval $(opam env)
  - . $HOME/.venv/bin/activate
  - make -C docs -j sphinx
  - make -C docs -j _build/octezdoc.txt
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  artifacts:
    expire_in: 1 week
    paths:
    - docs/_build/
    expose_as: Documentation - excluding old protocols

documentation.publish:
  image: ${ci_image_name}/test:${ci_image_tag}
  stage: publish
  tags:
  - gcp_not_interruptible
  needs:
  - oc.docker:ci:amd64
  - documentation.build_all
  dependencies:
  - oc.docker:ci:amd64
  - documentation.build_all
  timeout: 60 minutes
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - eval $(opam env)
  - . $HOME/.venv/bin/activate
  - echo "${CI_PK_GITLAB_DOC}" > ~/.ssh/id_ed25519
  - echo "${CI_KH}" > ~/.ssh/known_hosts
  - chmod 400 ~/.ssh/id_ed25519
  - ./scripts/ci/doc_publish.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    CARGO_NET_OFFLINE: "false"
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
  retry: 0
