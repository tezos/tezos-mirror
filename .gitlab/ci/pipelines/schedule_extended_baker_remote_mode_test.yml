# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

stages:
- start
- images
- build
- test

oc.docker:ci:amd64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.13.0
  stage: images
  tags:
  - gcp
  dependencies: []
  timeout: 90 minutes
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - ./images/ci_create_ci_images.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.7
    CI_DOCKER_HUB: "false"
    ARCH: amd64
  artifacts:
    reports:
      dotenv: ci_image_tag.env

oc.docker:rust-toolchain:amd64:
  image: ${GCP_REGISTRY}/tezos/docker-images/ci-docker:v1.13.0
  stage: images
  tags:
  - gcp
  dependencies: []
  timeout: 60 minutes
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - ./scripts/ci/docker_rust_toolchain_build.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.7
    CI_DOCKER_HUB: "false"
    IMAGE: ${GCP_PROTECTED_REGISTRY}/tezos/tezos/debian-rust:unstable
  artifacts:
    reports:
      dotenv: rust_toolchain_image_tag.env

teztrec_schedule_extended_test:
  image: ${ci_image_name}/build:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  dependencies:
  - oc.docker:ci:amd64
  allow_failure: true
  timeout: 60 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  - dune exec scripts/ci/update_records/update.exe -- --info --log-file tezt-fetch-records.log
    --from last-successful-scheduled:schedule_extended_test
  - ./scripts/ci/filter_corrupted_records.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  artifacts:
    expire_in: 4 hours
    paths:
    - tezt-fetch-records.log
    - tezt/records/**.json
    - tezt/records/**.json.broken
    when: always

tezt-flaky:
  image: ${ci_image_name}/e2etest:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  dependencies:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  allow_failure: true
  timeout: 40 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - . ./scripts/version.sh
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh --without-select-tezts -- "${TESTS}" --from-record tezt/records/flaky
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh --send-junit
    ${JUNIT} --without-select-tezts -- "${TESTS}" --color --log-buffer-size 5000 --log-file
    tezt.log --global-timeout 1800 --test-timeout 540 --on-unknown-regression-files
    fail --junit ${JUNIT} --junit-mem-peak 'dd_tags[memory.peak]' --from-record tezt/records/flaky
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --record tezt-results.json --job-count
    ${TEZT_PARALLEL} --retry ${TEZT_RETRY} --record-mem-peak --mem-warn 5_000_000_000
    --keep-going --junit-tag 'dd_tags[tezt-tag.flaky]=flaky' --junit-tag 'dd_tags[tezt-tag.time_sensitive]=time_sensitive'
    --junit-tag 'dd_tags[tezt-tag.slow]=slow' --junit-tag 'dd_tags[tezt-tag.extra]=extra'
    --junit-tag 'dd_tags[tezt-tag.infrastructure]=infrastructure' --junit-tag 'dd_tags[tezt-tag.layer1]=layer1'
    --junit-tag 'dd_tags[tezt-tag.tezos2]=tezos2' --junit-tag 'dd_tags[tezt-tag.etherlink]=etherlink'
    --junit-tag 'dd_tags[tezt-tag.memory_hungry]=memory_hungry'
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  - ./scripts/ci/merge_coverage.sh
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -flaky
    TESTS: /ci_disabled && /time_sensitive && /slow && /extra && /cloud && flaky
    TEZT_RETRY: "3"
    TEZT_PARALLEL: "1"
    TEZT_NO_NPX: "true"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2

tezt-extra:
  image: ${ci_image_name}/e2etest:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  dependencies:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  timeout: 40 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - . ./scripts/version.sh
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh --without-select-tezts -- "${TESTS}" --from-record tezt/records/extra
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh --send-junit
    ${JUNIT} --without-select-tezts -- "${TESTS}" --color --log-buffer-size 5000 --log-file
    tezt.log --global-timeout 1800 --test-timeout 540 --on-unknown-regression-files
    fail --junit ${JUNIT} --junit-mem-peak 'dd_tags[memory.peak]' --from-record tezt/records/extra
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --record tezt-results.json --job-count
    ${TEZT_PARALLEL} --retry ${TEZT_RETRY} --record-mem-peak --mem-warn 5_000_000_000
    --keep-going --junit-tag 'dd_tags[tezt-tag.flaky]=flaky' --junit-tag 'dd_tags[tezt-tag.time_sensitive]=time_sensitive'
    --junit-tag 'dd_tags[tezt-tag.slow]=slow' --junit-tag 'dd_tags[tezt-tag.extra]=extra'
    --junit-tag 'dd_tags[tezt-tag.infrastructure]=infrastructure' --junit-tag 'dd_tags[tezt-tag.layer1]=layer1'
    --junit-tag 'dd_tags[tezt-tag.tezos2]=tezos2' --junit-tag 'dd_tags[tezt-tag.etherlink]=etherlink'
    --junit-tag 'dd_tags[tezt-tag.memory_hungry]=memory_hungry'
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -extra
    TESTS: extra && /ci_disabled && /time_sensitive && /slow && /cloud && /flaky
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "6"
    TEZT_NO_NPX: "true"
  artifacts:
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results.json
    - $JUNIT
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 10

tezt-slow:
  image: ${ci_image_name}/e2etest:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  dependencies:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  timeout: 40 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - . ./scripts/version.sh
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh --without-select-tezts -- "${TESTS}" --from-record tezt/records/slow
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh --send-junit
    ${JUNIT} --without-select-tezts -- "${TESTS}" --color --log-buffer-size 5000 --log-file
    tezt.log --global-timeout 1800 --on-unknown-regression-files fail --junit ${JUNIT}
    --junit-mem-peak 'dd_tags[memory.peak]' --from-record tezt/records/slow --job
    ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --record tezt-results.json --job-count
    ${TEZT_PARALLEL} --retry ${TEZT_RETRY} --record-mem-peak --mem-warn 5_000_000_000
    --keep-going --junit-tag 'dd_tags[tezt-tag.flaky]=flaky' --junit-tag 'dd_tags[tezt-tag.time_sensitive]=time_sensitive'
    --junit-tag 'dd_tags[tezt-tag.slow]=slow' --junit-tag 'dd_tags[tezt-tag.extra]=extra'
    --junit-tag 'dd_tags[tezt-tag.infrastructure]=infrastructure' --junit-tag 'dd_tags[tezt-tag.layer1]=layer1'
    --junit-tag 'dd_tags[tezt-tag.tezos2]=tezos2' --junit-tag 'dd_tags[tezt-tag.etherlink]=etherlink'
    --junit-tag 'dd_tags[tezt-tag.memory_hungry]=memory_hungry'
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -slow
    TESTS: slow && /ci_disabled && /time_sensitive && /extra && /cloud
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "3"
    TEZT_NO_NPX: "true"
  artifacts:
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results.json
    - $JUNIT
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 20

tezt-time-sensitive:
  image: ${ci_image_name}/e2etest:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  dependencies:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  timeout: 40 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - . ./scripts/version.sh
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh --without-select-tezts -- "${TESTS}" --from-record tezt/records/time-sensitive
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh --send-junit
    ${JUNIT} --without-select-tezts -- "${TESTS}" --color --log-buffer-size 5000 --log-file
    tezt.log --global-timeout 1800 --test-timeout 540 --on-unknown-regression-files
    fail --junit ${JUNIT} --junit-mem-peak 'dd_tags[memory.peak]' --from-record tezt/records/time-sensitive
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --record tezt-results.json --job-count
    ${TEZT_PARALLEL} --retry ${TEZT_RETRY} --record-mem-peak --mem-warn 5_000_000_000
    --keep-going --junit-tag 'dd_tags[tezt-tag.flaky]=flaky' --junit-tag 'dd_tags[tezt-tag.time_sensitive]=time_sensitive'
    --junit-tag 'dd_tags[tezt-tag.slow]=slow' --junit-tag 'dd_tags[tezt-tag.extra]=extra'
    --junit-tag 'dd_tags[tezt-tag.infrastructure]=infrastructure' --junit-tag 'dd_tags[tezt-tag.layer1]=layer1'
    --junit-tag 'dd_tags[tezt-tag.tezos2]=tezos2' --junit-tag 'dd_tags[tezt-tag.etherlink]=etherlink'
    --junit-tag 'dd_tags[tezt-tag.memory_hungry]=memory_hungry'
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  - ./scripts/ci/merge_coverage.sh
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: -time-sensitive
    TESTS: time_sensitive && /ci_disabled && /slow && /extra && /cloud
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "1"
    TEZT_NO_NPX: "true"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2

tezt:
  image: ${ci_image_name}/e2etest:${ci_image_tag}
  stage: test
  tags:
  - gcp_tezt
  needs:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  dependencies:
  - oc.docker:ci:amd64
  - oc.build_x86_64-released
  - oc.build_amd64-extra-exp
  - oc.build_amd64-extra-dev
  - oc.build_kernels
  - teztrec_schedule_extended_test
  timeout: 40 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - . ./scripts/version.sh
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/tezt.sh --without-select-tezts -- "${TESTS}" --from-record tezt/records
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --list-tsv > selected_tezts.tsv
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/tezt.sh --send-junit
    ${JUNIT} --without-select-tezts -- "${TESTS}" --color --log-buffer-size 5000 --log-file
    tezt.log --global-timeout 1800 --test-timeout 540 --on-unknown-regression-files
    fail --junit ${JUNIT} --junit-mem-peak 'dd_tags[memory.peak]' --from-record tezt/records
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --record tezt-results.json --job-count
    ${TEZT_PARALLEL} --retry ${TEZT_RETRY} --record-mem-peak --mem-warn 5_000_000_000
    --keep-going --junit-tag 'dd_tags[tezt-tag.flaky]=flaky' --junit-tag 'dd_tags[tezt-tag.time_sensitive]=time_sensitive'
    --junit-tag 'dd_tags[tezt-tag.slow]=slow' --junit-tag 'dd_tags[tezt-tag.extra]=extra'
    --junit-tag 'dd_tags[tezt-tag.infrastructure]=infrastructure' --junit-tag 'dd_tags[tezt-tag.layer1]=layer1'
    --junit-tag 'dd_tags[tezt-tag.tezos2]=tezos2' --junit-tag 'dd_tags[tezt-tag.etherlink]=etherlink'
    --junit-tag 'dd_tags[tezt-tag.memory_hungry]=memory_hungry'
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  - ./scripts/ci/merge_coverage.sh
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: ""
    TESTS: /ci_disabled && /time_sensitive && /slow && /extra && /cloud && /flaky
    TEZT_RETRY: "1"
    TEZT_PARALLEL: "6"
    TEZT_NO_NPX: "true"
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 7 days
    paths:
    - selected_tezts.tsv
    - tezt.log
    - tezt-*.log
    - tezt-results.json
    - $JUNIT
    - $BISECT_FILE/$CI_JOB_NAME_SLUG.*
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 50

oc.build_x86_64-released:
  image: ${ci_image_name}/build:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  dependencies:
  - oc.docker:ci:amd64
  timeout: 60 minutes
  cache:
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  - key: rust-targets-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/_target
    policy: pull-push
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - ./scripts/ci/build_full_unreleased.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/released-executables
    CARGO_NET_OFFLINE: "false"
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
    OCTEZ_RUST_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rust_deps
    OCTEZ_RUSTZCASH_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rustzcash_deps
    OCTEZ_ETHERLINK_WASM_RUNTIME_TARGET_DIR: $CI_PROJECT_DIR/_target/etherlink_wasm_runtime
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    when: on_success

oc.build_amd64-extra-dev:
  image: ${ci_image_name}/build:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  dependencies:
  - oc.docker:ci:amd64
  timeout: 60 minutes
  cache:
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  - key: rust-targets-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/_target
    policy: pull-push
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - ./scripts/ci/build_full_unreleased.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/dev-executables
    BUILD_EXTRA: src/bin_tps_evaluation/main_tps_evaluation.exe src/bin_octogram/octogram_main.exe
      tezt/tests/main.exe contrib/octez_injector_server/octez_injector_server.exe
    CARGO_NET_OFFLINE: "false"
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
    OCTEZ_RUST_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rust_deps
    OCTEZ_RUSTZCASH_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rustzcash_deps
    OCTEZ_ETHERLINK_WASM_RUNTIME_TARGET_DIR: $CI_PROJECT_DIR/_target/etherlink_wasm_runtime
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - octez-teztale-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    - etherlink-governance-observer
    when: on_success

oc.build_amd64-extra-exp:
  image: ${ci_image_name}/build:${ci_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:ci:amd64
  dependencies:
  - oc.docker:ci:amd64
  timeout: 60 minutes
  cache:
  - key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  - key: rust-targets-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/_target
    policy: pull-push
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - ./scripts/ci/build_full_unreleased.sh
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/experimental-executables
    BUILD_EXTRA: src/bin_tps_evaluation/main_tps_evaluation.exe src/bin_octogram/octogram_main.exe
      tezt/tests/main.exe contrib/octez_injector_server/octez_injector_server.exe
    CARGO_NET_OFFLINE: "false"
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
    OCTEZ_RUST_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rust_deps
    OCTEZ_RUSTZCASH_DEPS_TARGET_DIR: $CI_PROJECT_DIR/_target/rustzcash_deps
    OCTEZ_ETHERLINK_WASM_RUNTIME_TARGET_DIR: $CI_PROJECT_DIR/_target/etherlink_wasm_runtime
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - octez-teztale-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    - etherlink-governance-observer
    when: on_success

oc.build_kernels:
  image: ${rust_toolchain_image_name}:${rust_toolchain_image_tag}
  stage: build
  tags:
  - gcp
  needs:
  - oc.docker:rust-toolchain:amd64
  dependencies:
  - oc.docker:rust-toolchain:amd64
  timeout: 60 minutes
  cache:
    key: cargo-$CI_JOB_NAME_SLUG
    paths:
    - $CI_PROJECT_DIR/.cargo/registry/cache
    policy: pull-push
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  - . ./scripts/ci/sccache-start.sh
  - 'sccache --show-stats | grep "Cache location" '
  script:
  - make -f kernels.mk build
  - make -f etherlink.mk evm_kernel.wasm
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
  - sccache --show-stats
  - ./scripts/ci/sccache-stop.sh
  variables:
    CC: clang
    NATIVE_TARGET: x86_64-unknown-linux-musl
    CARGO_INCREMENTAL: "0"
    SCCACHE_GCS_BUCKET: $GCP_SCCACHE_BUCKET
    SCCACHE_GCS_RW_MODE: READ_WRITE
    SCCACHE_GCS_KEY_PREFIX: sccache
    SCCACHE_IGNORE_SERVER_IO_ERROR: "1"
    CARGO_NET_OFFLINE: "false"
  artifacts:
    name: build-kernels-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - evm_kernel.wasm
    - smart-rollup-installer
    - sequenced_kernel.wasm
    - tx_kernel.wasm
    - tx_kernel_dal.wasm
    - dal_echo_kernel.wasm
    when: on_success

datadog_pipeline_trace:
  image: datadog/ci:v2.44.0
  stage: start
  tags:
  - gcp
  needs: []
  dependencies: []
  allow_failure: true
  timeout: 60 minutes
  interruptible: false
  before_script:
  - SCRIPT_STEP_BEGIN=$(date +%s)
  - . ./scripts/ci/datadog_send_job_info.sh
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'before'
  script:
  - CI_MERGE_REQUEST_IID=${CI_MERGE_REQUEST_IID:-none}
  - DATADOG_SITE=datadoghq.eu datadog-ci tag --level pipeline --tags pipeline_type:$PIPELINE_TYPE
    --tags mr_number:$CI_MERGE_REQUEST_IID
  - . ./scripts/ci/datadog_send_job_script_step_time.sh || true
  after_script:
  - . ./scripts/ci/datadog_send_job_cache_info.sh 'after'
