{ "openapi": "3.0.0",
  "info":
    { "title": "Smart Rollup Node RPCs",
      "description":
        "Smart Rollup Node RPC API for protocol PtParisA6ruu136piHaBC7cQLDP87JEqtczJWP2pLa5QCELGBH5",
      "version": "Octez 20.3 (4ec59046)" },
  "paths":
    { "/describe":
        { "get":
            { "description": "RPCs documentation and input/output schema",
              "parameters":
                [ { "name": "recurse", "in": "query", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "$ref": "#/components/schemas/service_tree" } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}":
        { "get":
            { "description":
                "Layer-2 block of the layer-2 chain with respect to a Layer 1 block identifier",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "block_hash":
                                        { "description": "Tezos block hash.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/block_hash" } ] },
                                      "level":
                                        { "description":
                                            "Level of the block, corresponds to the level of the tezos block.",
                                          "type": "integer",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647 },
                                      "predecessor":
                                        { "description":
                                            "Predecessor hash of the Tezos block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/block_hash" } ] },
                                      "commitment_hash":
                                        { "description":
                                            "Hash of this block's commitment if any was computed for it.",
                                          "nullable": true,
                                          "oneOf":
                                            [ { "title": "Some",
                                                "oneOf":
                                                  [ { "$ref":
                                                        "#/components/schemas/smart_rollup_commitment_hash" } ] } ] },
                                      "previous_commitment_hash":
                                        { "description":
                                            "Previous commitment hash in the chain. If there is a commitment for this block, this field contains the commitment that was previously computed.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/smart_rollup_commitment_hash" } ] },
                                      "context":
                                        { "description":
                                            "Hash of the layer 2 context for this block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/Smart_rollup_context_hash" } ] },
                                      "inbox_witness":
                                        { "description":
                                            "Witness for the inbox for this block, i.e. the Merkle hash of payloads of messages.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/smart_rollup_merkelized_payload_hashes_hash" } ] },
                                      "inbox_hash":
                                        { "description":
                                            "Hash of the inbox for this block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/smart_rollup_inbox_hash" } ] },
                                      "inbox":
                                        { "description":
                                            "Inbox for this block.",
                                          "type": "object",
                                          "properties":
                                            { "level":
                                                { "type": "integer",
                                                  "minimum": -2147483648,
                                                  "maximum": 2147483647 },
                                              "old_levels_messages":
                                                { "type": "object",
                                                  "properties":
                                                    { "index":
                                                        { "$ref":
                                                            "#/components/schemas/positive_bignum" },
                                                      "content":
                                                        { "type": "object",
                                                          "properties":
                                                            { "hash":
                                                                { "$ref":
                                                                    "#/components/schemas/smart_rollup_merkelized_payload_hashes_hash" },
                                                              "level":
                                                                { "type":
                                                                    "integer",
                                                                  "minimum":
                                                                    -2147483648,
                                                                  "maximum":
                                                                    2147483647 } },
                                                          "required":
                                                            [ "hash",
                                                              "level" ] },
                                                      "back_pointers":
                                                        { "type": "array",
                                                          "items":
                                                            { "$ref":
                                                                "#/components/schemas/smart_rollup_inbox_hash" } } },
                                                  "required":
                                                    [ "index", "content",
                                                      "back_pointers" ] } },
                                          "required":
                                            [ "level",
                                              "old_levels_messages" ] },
                                      "messages":
                                        { "description":
                                            "Messages added to the inbox in this block.",
                                          "type": "array",
                                          "items":
                                            { "type": "string",
                                              "pattern":
                                                "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                                      "commitment":
                                        { "description":
                                            "Commitment, if any is computed for this block.",
                                          "type": "object",
                                          "properties":
                                            { "compressed_state":
                                                { "$ref":
                                                    "#/components/schemas/smart_rollup_state_hash" },
                                              "inbox_level":
                                                { "type": "integer",
                                                  "minimum": -2147483648,
                                                  "maximum": 2147483647 },
                                              "predecessor":
                                                { "$ref":
                                                    "#/components/schemas/smart_rollup_commitment_hash" },
                                              "number_of_ticks":
                                                { "$ref":
                                                    "#/components/schemas/int64" } },
                                          "required":
                                            [ "compressed_state",
                                              "inbox_level", "predecessor",
                                              "number_of_ticks" ] },
                                      "initial_tick":
                                        { "description":
                                            "Initial tick of the PVM at this block, i.e. before evaluation of the messages.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/positive_bignum" } ] },
                                      "num_ticks":
                                        { "description":
                                            "Number of ticks produced by the evaluation of the messages in this block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/int64" } ] } },
                                  "required":
                                    [ "block_hash", "level", "predecessor",
                                      "commitment_hash",
                                      "previous_commitment_hash", "context",
                                      "inbox_witness", "inbox_hash", "inbox",
                                      "messages", "initial_tick",
                                      "num_ticks" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/dal/processed_slots":
        { "get":
            { "description":
                "Data availability processed slots and their statuses",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "array",
                                  "items":
                                    { "type": "object",
                                      "properties":
                                        { "index":
                                            { "type": "integer",
                                              "minimum": -1073741824,
                                              "maximum": 1073741823 },
                                          "status":
                                            { "type": "string",
                                              "enum":
                                                [ "unconfirmed",
                                                  "confirmed" ] } },
                                      "required": [ "index", "status" ] } } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/dal/slot_headers":
        { "get":
            { "description": "Availability slots for a given block",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "array",
                                  "items":
                                    { "type": "object",
                                      "properties":
                                        { "version":
                                            { "type": "string",
                                              "enum": [ "0" ] },
                                          "level":
                                            { "type": "integer",
                                              "minimum": 0,
                                              "maximum": 2147483647 },
                                          "index":
                                            { "type": "integer",
                                              "minimum": 0, "maximum": 255 },
                                          "commitment":
                                            { "$ref":
                                                "#/components/schemas/DAL_commitment" } },
                                      "required":
                                        [ "version", "level", "index",
                                          "commitment" ] } } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/durable/wasm_2_0_0/length":
        { "get":
            { "description":
                "Retrieve number of bytes in raw representation of value by key from PVM durable storage. PVM state is taken with respect to the specified block level.",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "key", "in": "query", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some",
                                        "oneOf":
                                          [ { "$ref":
                                                "#/components/schemas/int64" } ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/durable/wasm_2_0_0/subkeys":
        { "get":
            { "description":
                "Retrieve subkeys of the specified key from PVM durable storage. PVM state is taken with respect to the specified block level.",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "key", "in": "query", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "array",
                                  "items":
                                    { "$ref":
                                        "#/components/schemas/unistring" } } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/durable/wasm_2_0_0/value":
        { "get":
            { "description":
                "Retrieve value by key from PVM durable storage. PVM state is taken with respect to the specified block level. Value returned in hex format.",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "key", "in": "query", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some", "type": "string",
                                        "pattern":
                                          "^([a-zA-Z0-9][a-zA-Z0-9])*$" } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/hash":
        { "get":
            { "description":
                "Tezos block hash of block known to the smart rollup node",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "title":
                                    "A block identifier (Base58Check-encoded)",
                                  "oneOf":
                                    [ { "$ref":
                                          "#/components/schemas/unistring" } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/helpers/proofs/outbox":
        { "get":
            { "description":
                "Generate serialized output proof for some outbox message",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "outbox_level", "in": "query", "required": false,
                    "schema": { "type": "string" } },
                  { "name": "message_index", "in": "query",
                    "required": false, "schema": { "type": "string" } },
                  { "name": "serialized_outbox_message", "in": "query",
                    "required": false, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "commitment":
                                        { "$ref":
                                            "#/components/schemas/smart_rollup_commitment_hash" },
                                      "proof":
                                        { "type": "string",
                                          "pattern":
                                            "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                                  "required": [ "commitment", "proof" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/helpers/proofs/outbox/{level}/messages":
        { "get":
            { "description":
                "Generate serialized output proof for some outbox message at level and index",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "level", "in": "path", "required": true,
                    "schema": { "type": "string" } },
                  { "name": "index", "in": "query", "required": false,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "commitment":
                                        { "$ref":
                                            "#/components/schemas/smart_rollup_commitment_hash" },
                                      "proof":
                                        { "type": "string",
                                          "pattern":
                                            "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                                  "required": [ "commitment", "proof" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/inbox":
        { "get":
            { "description": "Rollup inbox for block",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "level":
                                        { "type": "integer",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647 },
                                      "old_levels_messages":
                                        { "type": "object",
                                          "properties":
                                            { "index":
                                                { "$ref":
                                                    "#/components/schemas/positive_bignum" },
                                              "content":
                                                { "type": "object",
                                                  "properties":
                                                    { "hash":
                                                        { "$ref":
                                                            "#/components/schemas/smart_rollup_merkelized_payload_hashes_hash" },
                                                      "level":
                                                        { "type": "integer",
                                                          "minimum":
                                                            -2147483648,
                                                          "maximum":
                                                            2147483647 } },
                                                  "required":
                                                    [ "hash", "level" ] },
                                              "back_pointers":
                                                { "type": "array",
                                                  "items":
                                                    { "$ref":
                                                        "#/components/schemas/smart_rollup_inbox_hash" } } },
                                          "required":
                                            [ "index", "content",
                                              "back_pointers" ] } },
                                  "required":
                                    [ "level", "old_levels_messages" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/level":
        { "get":
            { "description":
                "Level of Tezos block known to the smart rollup node",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "integer", "minimum": -2147483648,
                                  "maximum": 2147483647 } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/num_messages":
        { "get":
            { "description": "Number of messages for specified block",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "title": "Big number",
                                  "description":
                                    "Decimal representation of a big number",
                                  "type": "string" } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/outbox":
        { "get":
            { "description": "Outbox at block for a given outbox level",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "outbox_level", "in": "query", "required": false,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "array",
                                  "items":
                                    { "type": "object",
                                      "properties":
                                        { "outbox_level":
                                            { "type": "integer",
                                              "minimum": 0,
                                              "maximum": 2147483647 },
                                          "message_index":
                                            { "$ref":
                                                "#/components/schemas/positive_bignum" },
                                          "message":
                                            { "oneOf":
                                                [ { "title":
                                                      "Atomic_transaction_batch",
                                                    "type": "object",
                                                    "properties":
                                                      { "transactions":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "parameters":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "destination":
                                                                    { "$ref":
                                                                    "#/components/schemas/020-PsParisC.contract_id.originated" },
                                                                    "entrypoint":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                "required":
                                                                  [ "parameters",
                                                                    "destination" ] } },
                                                        "kind":
                                                          { "type": "string",
                                                            "enum":
                                                              [ "untyped" ] } },
                                                    "required":
                                                      [ "transactions",
                                                        "kind" ] },
                                                  { "title":
                                                      "Atomic_transaction_batch_typed",
                                                    "type": "object",
                                                    "properties":
                                                      { "transactions":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "parameters":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "parameters_ty":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "destination":
                                                                    { "$ref":
                                                                    "#/components/schemas/020-PsParisC.contract_id.originated" },
                                                                    "entrypoint":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                "required":
                                                                  [ "parameters",
                                                                    "parameters_ty",
                                                                    "destination" ] } },
                                                        "kind":
                                                          { "type": "string",
                                                            "enum":
                                                              [ "typed" ] } },
                                                    "required":
                                                      [ "transactions",
                                                        "kind" ] },
                                                  { "title":
                                                      "Whitelist_update",
                                                    "type": "object",
                                                    "properties":
                                                      { "whitelist":
                                                          { "type": "array",
                                                            "items":
                                                              { "$ref":
                                                                  "#/components/schemas/Signature.Public_key_hash" } },
                                                        "kind":
                                                          { "type": "string",
                                                            "enum":
                                                              [ "whitelist_update" ] } },
                                                    "required": [ "kind" ] } ] } },
                                      "required":
                                        [ "outbox_level", "message_index",
                                          "message" ] } } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/outbox/{level}/messages":
        { "get":
            { "description": "Outbox at block for a given outbox level",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "level", "in": "path", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "array",
                                  "items":
                                    { "type": "object",
                                      "properties":
                                        { "outbox_level":
                                            { "type": "integer",
                                              "minimum": 0,
                                              "maximum": 2147483647 },
                                          "message_index":
                                            { "$ref":
                                                "#/components/schemas/positive_bignum" },
                                          "message":
                                            { "oneOf":
                                                [ { "title":
                                                      "Atomic_transaction_batch",
                                                    "type": "object",
                                                    "properties":
                                                      { "transactions":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "parameters":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "destination":
                                                                    { "$ref":
                                                                    "#/components/schemas/020-PsParisC.contract_id.originated" },
                                                                    "entrypoint":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                "required":
                                                                  [ "parameters",
                                                                    "destination" ] } },
                                                        "kind":
                                                          { "type": "string",
                                                            "enum":
                                                              [ "untyped" ] } },
                                                    "required":
                                                      [ "transactions",
                                                        "kind" ] },
                                                  { "title":
                                                      "Atomic_transaction_batch_typed",
                                                    "type": "object",
                                                    "properties":
                                                      { "transactions":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "parameters":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "parameters_ty":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "destination":
                                                                    { "$ref":
                                                                    "#/components/schemas/020-PsParisC.contract_id.originated" },
                                                                    "entrypoint":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                "required":
                                                                  [ "parameters",
                                                                    "parameters_ty",
                                                                    "destination" ] } },
                                                        "kind":
                                                          { "type": "string",
                                                            "enum":
                                                              [ "typed" ] } },
                                                    "required":
                                                      [ "transactions",
                                                        "kind" ] },
                                                  { "title":
                                                      "Whitelist_update",
                                                    "type": "object",
                                                    "properties":
                                                      { "whitelist":
                                                          { "type": "array",
                                                            "items":
                                                              { "$ref":
                                                                  "#/components/schemas/Signature.Public_key_hash" } },
                                                        "kind":
                                                          { "type": "string",
                                                            "enum":
                                                              [ "whitelist_update" ] } },
                                                    "required": [ "kind" ] } ] } },
                                      "required":
                                        [ "outbox_level", "message_index",
                                          "message" ] } } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/simulate":
        { "post":
            { "description": "Simulate messages evaluation by the PVM",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "requestBody":
                { "content":
                    { "application/json":
                        { "schema":
                            { "type": "object",
                              "properties":
                                { "messages":
                                    { "description":
                                        "Serialized messages for simulation.",
                                      "type": "array",
                                      "items":
                                        { "type": "string",
                                          "pattern":
                                            "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                                  "reveal_pages":
                                    { "description":
                                        "Pages (at most 4kB) to be used for revelation ticks",
                                      "type": "array",
                                      "items":
                                        { "type": "string",
                                          "pattern":
                                            "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                                  "insight_requests":
                                    { "description":
                                        "Paths in the PVM to inspect after the simulation",
                                      "type": "array",
                                      "items":
                                        { "oneOf":
                                            [ { "title": "pvm_state",
                                                "description":
                                                  "Path in the PVM state",
                                                "type": "object",
                                                "properties":
                                                  { "kind":
                                                      { "type": "string",
                                                        "enum":
                                                          [ "pvm_state" ] },
                                                    "key":
                                                      { "type": "array",
                                                        "items":
                                                          { "$ref":
                                                              "#/components/schemas/unistring" } } },
                                                "required": [ "kind", "key" ] },
                                              { "title": "durable_storage",
                                                "description":
                                                  "Path in the PVM durable storage",
                                                "type": "object",
                                                "properties":
                                                  { "kind":
                                                      { "type": "string",
                                                        "enum":
                                                          [ "durable_storage" ] },
                                                    "key":
                                                      { "type": "array",
                                                        "items":
                                                          { "$ref":
                                                              "#/components/schemas/unistring" } } },
                                                "required": [ "kind", "key" ] } ] } },
                                  "log_kernel_debug_file":
                                    { "description":
                                        "File in which to emit kernel logs. This file will be created in <data-dir>/simulation_kernel_logs/, where <data-dir> is the data directory of the rollup node.",
                                      "oneOf":
                                        [ { "$ref":
                                              "#/components/schemas/unistring" } ] } },
                              "required": [ "messages" ] } } } },
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "state_hash":
                                        { "description":
                                            "Hash of the state after execution of the PVM on the input messages",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/smart_rollup_state_hash" } ] },
                                      "status":
                                        { "description":
                                            "Status of the PVM after evaluation",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/unistring" } ] },
                                      "output":
                                        { "description":
                                            "Output produced by evaluation of the messages",
                                          "type": "array",
                                          "items":
                                            { "type": "object",
                                              "properties":
                                                { "outbox_level":
                                                    { "type": "integer",
                                                      "minimum": 0,
                                                      "maximum": 2147483647 },
                                                  "message_index":
                                                    { "$ref":
                                                        "#/components/schemas/positive_bignum" },
                                                  "message":
                                                    { "oneOf":
                                                        [ { "title":
                                                              "Atomic_transaction_batch",
                                                            "type": "object",
                                                            "properties":
                                                              { "transactions":
                                                                  { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "parameters":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "destination":
                                                                    { "$ref":
                                                                    "#/components/schemas/020-PsParisC.contract_id.originated" },
                                                                    "entrypoint":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "parameters",
                                                                    "destination" ] } },
                                                                "kind":
                                                                  { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "untyped" ] } },
                                                            "required":
                                                              [ "transactions",
                                                                "kind" ] },
                                                          { "title":
                                                              "Atomic_transaction_batch_typed",
                                                            "type": "object",
                                                            "properties":
                                                              { "transactions":
                                                                  { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "parameters":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "parameters_ty":
                                                                    { "$ref":
                                                                    "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" },
                                                                    "destination":
                                                                    { "$ref":
                                                                    "#/components/schemas/020-PsParisC.contract_id.originated" },
                                                                    "entrypoint":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "parameters",
                                                                    "parameters_ty",
                                                                    "destination" ] } },
                                                                "kind":
                                                                  { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "typed" ] } },
                                                            "required":
                                                              [ "transactions",
                                                                "kind" ] },
                                                          { "title":
                                                              "Whitelist_update",
                                                            "type": "object",
                                                            "properties":
                                                              { "whitelist":
                                                                  { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/Signature.Public_key_hash" } },
                                                                "kind":
                                                                  { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "whitelist_update" ] } },
                                                            "required":
                                                              [ "kind" ] } ] } },
                                              "required":
                                                [ "outbox_level",
                                                  "message_index",
                                                  "message" ] } },
                                      "inbox_level":
                                        { "description":
                                            "Level of the inbox that would contain these messages",
                                          "type": "integer",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647 },
                                      "num_ticks":
                                        { "description":
                                            "Ticks taken by the PVM for evaluating the messages",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/bignum" } ] },
                                      "insights":
                                        { "description":
                                            "PVM state values requested after the simulation",
                                          "type": "array",
                                          "items":
                                            { "nullable": true,
                                              "oneOf":
                                                [ { "title": "Some",
                                                    "type": "string",
                                                    "pattern":
                                                      "^([a-zA-Z0-9][a-zA-Z0-9])*$" } ] } } },
                                  "required":
                                    [ "state_hash", "status", "output",
                                      "inbox_level", "num_ticks" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/state":
        { "get":
            { "description":
                "Retrieve value from key is PVM state of specified block",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } },
                  { "name": "key", "in": "query", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "string",
                                  "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/state_current_level":
        { "get":
            { "description": "Retrieve the current level of a PVM",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some", "type": "integer",
                                        "minimum": 0, "maximum": 2147483647 } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/state_hash":
        { "get":
            { "description": "State hash for this block",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "title":
                                    "The hash of the VM state of a smart rollup (Base58Check-encoded)",
                                  "oneOf":
                                    [ { "$ref":
                                          "#/components/schemas/unistring" } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/status":
        { "get":
            { "description": "PVM status at block",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "title": "Universal string representation",
                                  "description":
                                    "Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.",
                                  "oneOf":
                                    [ { "type": "string" },
                                      { "type": "object",
                                        "properties":
                                          { "invalid_utf8_string":
                                              { "type": "array",
                                                "items":
                                                  { "type": "integer",
                                                    "minimum": 0,
                                                    "maximum": 255 } } },
                                        "required": [ "invalid_utf8_string" ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/ticks":
        { "get":
            { "description": "Number of ticks for specified level",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "title": "Big number",
                                  "description":
                                    "Decimal representation of a big number",
                                  "type": "string" } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/block/{block_id}/total_ticks":
        { "get":
            { "description": "Total number of ticks at specified block",
              "parameters":
                [ { "name": "block_id", "in": "path",
                    "description": "An L1 block identifier.",
                    "required": true, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "title": "Positive big number",
                                  "description":
                                    "Decimal representation of a positive big number",
                                  "type": "string" } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/last_stored_commitment":
        { "get":
            { "description": "Last commitment computed by the node",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some", "type": "object",
                                        "properties":
                                          { "commitment":
                                              { "type": "object",
                                                "properties":
                                                  { "compressed_state":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_state_hash" },
                                                    "inbox_level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 },
                                                    "predecessor":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_commitment_hash" },
                                                    "number_of_ticks":
                                                      { "$ref":
                                                          "#/components/schemas/int64" } },
                                                "required":
                                                  [ "compressed_state",
                                                    "inbox_level",
                                                    "predecessor",
                                                    "number_of_ticks" ] },
                                            "hash":
                                              { "$ref":
                                                  "#/components/schemas/smart_rollup_commitment_hash" } },
                                        "required": [ "commitment", "hash" ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/monitor_blocks":
        { "get":
            { "description": "Monitor and streaming the L2 blocks",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "block_hash":
                                        { "description": "Tezos block hash.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/block_hash" } ] },
                                      "level":
                                        { "description":
                                            "Level of the block, corresponds to the level of the tezos block.",
                                          "type": "integer",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647 },
                                      "predecessor":
                                        { "description":
                                            "Predecessor hash of the Tezos block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/block_hash" } ] },
                                      "commitment_hash":
                                        { "description":
                                            "Hash of this block's commitment if any was computed for it.",
                                          "nullable": true,
                                          "oneOf":
                                            [ { "title": "Some",
                                                "oneOf":
                                                  [ { "$ref":
                                                        "#/components/schemas/smart_rollup_commitment_hash" } ] } ] },
                                      "previous_commitment_hash":
                                        { "description":
                                            "Previous commitment hash in the chain. If there is a commitment for this block, this field contains the commitment that was previously computed.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/smart_rollup_commitment_hash" } ] },
                                      "context":
                                        { "description":
                                            "Hash of the layer 2 context for this block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/Smart_rollup_context_hash" } ] },
                                      "inbox_witness":
                                        { "description":
                                            "Witness for the inbox for this block, i.e. the Merkle hash of payloads of messages.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/smart_rollup_merkelized_payload_hashes_hash" } ] },
                                      "inbox_hash":
                                        { "description":
                                            "Hash of the inbox for this block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/smart_rollup_inbox_hash" } ] },
                                      "initial_tick":
                                        { "description":
                                            "Initial tick of the PVM at this block, i.e. before evaluation of the messages.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/positive_bignum" } ] },
                                      "num_ticks":
                                        { "description":
                                            "Number of ticks produced by the evaluation of the messages in this block.",
                                          "oneOf":
                                            [ { "$ref":
                                                  "#/components/schemas/int64" } ] } },
                                  "required":
                                    [ "block_hash", "level", "predecessor",
                                      "commitment_hash",
                                      "previous_commitment_hash", "context",
                                      "inbox_witness", "inbox_hash",
                                      "initial_tick", "num_ticks" ],
                                  "additionalProperties": {} } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/smart_rollup_address":
        { "get":
            { "description": "Smart rollup address",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "title":
                                    "A smart rollup address (Base58Check-encoded)",
                                  "oneOf":
                                    [ { "$ref":
                                          "#/components/schemas/unistring" } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/tezos_head":
        { "get":
            { "description": "Tezos head known to the smart rollup node",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some",
                                        "oneOf":
                                          [ { "$ref":
                                                "#/components/schemas/block_hash" } ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/global/tezos_level":
        { "get":
            { "description": "Tezos level known to the smart rollup node",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some", "type": "integer",
                                        "minimum": -2147483648,
                                        "maximum": 2147483647 } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/health":
        { "get":
            { "description":
                "Returns an empty response if the rollup node can answer requests",
              "responses":
                { "200":
                    { "description": "",
                      "content": { "application/json": { "schema": {} } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/local/batcher/injection":
        { "post":
            { "description": "Inject messages in the batcher's queue",
              "requestBody":
                { "content":
                    { "application/json":
                        { "schema":
                            { "description": "Messages to inject",
                              "type": "array",
                              "items":
                                { "$ref":
                                    "#/components/schemas/sc_l2_message" } } } } },
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "Ids of injected L2 messages",
                                  "type": "array",
                                  "items":
                                    { "$ref":
                                        "#/components/schemas/sc_rollup_l2_message_id" } } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/local/batcher/queue":
        { "get":
            { "description": "List messages present in the batcher's queue",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "array",
                                  "items":
                                    { "type": "object",
                                      "properties":
                                        { "id":
                                            { "$ref":
                                                "#/components/schemas/sc_rollup_l2_message_id" },
                                          "message":
                                            { "type": "object",
                                              "properties":
                                                { "counter":
                                                    { "$ref":
                                                        "#/components/schemas/bignum" },
                                                  "content":
                                                    { "$ref":
                                                        "#/components/schemas/sc_l2_message" } },
                                              "required":
                                                [ "counter", "content" ] } },
                                      "required": [ "id", "message" ] } } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/local/batcher/queue/{l2_message_id}":
        { "get":
            { "description": "Retrieve an L2 message and its status",
              "parameters":
                [ { "name": "l2_message_id", "in": "path",
                    "description": "A L2 message id.", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "oneOf":
                                    [ { "title": "unknown",
                                        "description":
                                          "The message is not known by the batcher.",
                                        "type": "object",
                                        "properties":
                                          { "content":
                                              { "type": "string",
                                                "pattern":
                                                  "^([a-zA-Z0-9][a-zA-Z0-9])*$" },
                                            "status":
                                              { "type": "string",
                                                "enum": [ "unknown" ] } },
                                        "required": [ "status" ] },
                                      { "title": "pending_batch",
                                        "description":
                                          "The message is in the batcher queue.",
                                        "type": "object",
                                        "properties":
                                          { "content":
                                              { "type": "string",
                                                "pattern":
                                                  "^([a-zA-Z0-9][a-zA-Z0-9])*$" },
                                            "status":
                                              { "type": "string",
                                                "enum": [ "pending_batch" ] } },
                                        "required": [ "status" ] },
                                      { "title": "pending_injection",
                                        "description":
                                          "The message is batched but not injected yet.",
                                        "type": "object",
                                        "properties":
                                          { "content":
                                              { "type": "string",
                                                "pattern":
                                                  "^([a-zA-Z0-9][a-zA-Z0-9])*$" },
                                            "status":
                                              { "type": "string",
                                                "enum":
                                                  [ "pending_injection" ] },
                                            "operation":
                                              { "$ref":
                                                  "#/components/schemas/sc_rollup_node_l1_operation" } },
                                        "required": [ "status", "operation" ] },
                                      { "title": "injected",
                                        "description":
                                          "The message is injected as part of an L1 operation but it is not included in a block.",
                                        "type": "object",
                                        "properties":
                                          { "content":
                                              { "type": "string",
                                                "pattern":
                                                  "^([a-zA-Z0-9][a-zA-Z0-9])*$" },
                                            "status":
                                              { "type": "string",
                                                "enum": [ "injected" ] },
                                            "operation":
                                              { "$ref":
                                                  "#/components/schemas/sc_rollup_node_l1_operation" },
                                            "layer1":
                                              { "type": "object",
                                                "properties":
                                                  { "operation_hash":
                                                      { "$ref":
                                                          "#/components/schemas/Operation_hash" },
                                                    "operation_index":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -1073741824,
                                                        "maximum": 1073741823 } },
                                                "required":
                                                  [ "operation_hash",
                                                    "operation_index" ] } },
                                        "required":
                                          [ "status", "operation", "layer1" ] },
                                      { "title": "included",
                                        "description":
                                          "The message is included in an inbox in an L1 block.",
                                        "type": "object",
                                        "properties":
                                          { "content":
                                              { "type": "string",
                                                "pattern":
                                                  "^([a-zA-Z0-9][a-zA-Z0-9])*$" },
                                            "status":
                                              { "type": "string",
                                                "enum": [ "included" ] },
                                            "operation":
                                              { "$ref":
                                                  "#/components/schemas/sc_rollup_node_l1_operation" },
                                            "layer1":
                                              { "type": "object",
                                                "properties":
                                                  { "operation_hash":
                                                      { "$ref":
                                                          "#/components/schemas/Operation_hash" },
                                                    "operation_index":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -1073741824,
                                                        "maximum": 1073741823 },
                                                    "block_hash":
                                                      { "$ref":
                                                          "#/components/schemas/block_hash" },
                                                    "level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 } },
                                                "required":
                                                  [ "operation_hash",
                                                    "operation_index",
                                                    "block_hash", "level" ] },
                                            "finalized":
                                              { "type": "boolean" },
                                            "cemented": { "type": "boolean" } },
                                        "required":
                                          [ "status", "operation", "layer1",
                                            "finalized", "cemented" ] },
                                      { "title": "committed",
                                        "description":
                                          "The message is included in a committed inbox on L1.",
                                        "type": "object",
                                        "properties":
                                          { "content":
                                              { "type": "string",
                                                "pattern":
                                                  "^([a-zA-Z0-9][a-zA-Z0-9])*$" },
                                            "status":
                                              { "type": "string",
                                                "enum": [ "committed" ] },
                                            "operation":
                                              { "$ref":
                                                  "#/components/schemas/sc_rollup_node_l1_operation" },
                                            "layer1":
                                              { "type": "object",
                                                "properties":
                                                  { "operation_hash":
                                                      { "$ref":
                                                          "#/components/schemas/Operation_hash" },
                                                    "operation_index":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -1073741824,
                                                        "maximum": 1073741823 },
                                                    "block_hash":
                                                      { "$ref":
                                                          "#/components/schemas/block_hash" },
                                                    "level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 } },
                                                "required":
                                                  [ "operation_hash",
                                                    "operation_index",
                                                    "block_hash", "level" ] },
                                            "finalized":
                                              { "type": "boolean" },
                                            "cemented": { "type": "boolean" },
                                            "commitment":
                                              { "type": "object",
                                                "properties":
                                                  { "compressed_state":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_state_hash" },
                                                    "inbox_level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 },
                                                    "predecessor":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_commitment_hash" },
                                                    "number_of_ticks":
                                                      { "$ref":
                                                          "#/components/schemas/int64" } },
                                                "required":
                                                  [ "compressed_state",
                                                    "inbox_level",
                                                    "predecessor",
                                                    "number_of_ticks" ] },
                                            "hash":
                                              { "$ref":
                                                  "#/components/schemas/smart_rollup_commitment_hash" },
                                            "first_published_at_level":
                                              { "type": "integer",
                                                "minimum": -2147483648,
                                                "maximum": 2147483647 },
                                            "published_at_level":
                                              { "type": "integer",
                                                "minimum": -2147483648,
                                                "maximum": 2147483647 } },
                                        "required":
                                          [ "status", "operation", "layer1",
                                            "finalized", "cemented",
                                            "commitment", "hash",
                                            "first_published_at_level",
                                            "published_at_level" ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/local/commitments/{commitment_hash}":
        { "get":
            { "description": "Commitment computed and published by the node",
              "parameters":
                [ { "name": "commitment_hash", "in": "path",
                    "description": "A commitment hash.", "required": true,
                    "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some", "type": "object",
                                        "properties":
                                          { "commitment":
                                              { "type": "object",
                                                "properties":
                                                  { "compressed_state":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_state_hash" },
                                                    "inbox_level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 },
                                                    "predecessor":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_commitment_hash" },
                                                    "number_of_ticks":
                                                      { "$ref":
                                                          "#/components/schemas/int64" } },
                                                "required":
                                                  [ "compressed_state",
                                                    "inbox_level",
                                                    "predecessor",
                                                    "number_of_ticks" ] },
                                            "hash":
                                              { "$ref":
                                                  "#/components/schemas/smart_rollup_commitment_hash" },
                                            "first_published_at_level":
                                              { "type": "integer",
                                                "minimum": -2147483648,
                                                "maximum": 2147483647 },
                                            "published_at_level":
                                              { "type": "integer",
                                                "minimum": -2147483648,
                                                "maximum": 2147483647 } },
                                        "required": [ "commitment", "hash" ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/local/gc_info":
        { "get":
            { "description": "Information about garbage collection",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "last_gc_level":
                                        { "type": "integer",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647 },
                                      "first_available_level":
                                        { "type": "integer",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647 },
                                      "last_context_split_level":
                                        { "type": "integer",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647 } },
                                  "required":
                                    [ "last_gc_level",
                                      "first_available_level" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/local/last_published_commitment":
        { "get":
            { "description": "Last commitment published by the node",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "nullable": true,
                                  "oneOf":
                                    [ { "title": "Some", "type": "object",
                                        "properties":
                                          { "commitment":
                                              { "type": "object",
                                                "properties":
                                                  { "compressed_state":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_state_hash" },
                                                    "inbox_level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 },
                                                    "predecessor":
                                                      { "$ref":
                                                          "#/components/schemas/smart_rollup_commitment_hash" },
                                                    "number_of_ticks":
                                                      { "$ref":
                                                          "#/components/schemas/int64" } },
                                                "required":
                                                  [ "compressed_state",
                                                    "inbox_level",
                                                    "predecessor",
                                                    "number_of_ticks" ] },
                                            "hash":
                                              { "$ref":
                                                  "#/components/schemas/smart_rollup_commitment_hash" },
                                            "first_published_at_level":
                                              { "type": "integer",
                                                "minimum": -2147483648,
                                                "maximum": 2147483647 },
                                            "published_at_level":
                                              { "type": "integer",
                                                "minimum": -2147483648,
                                                "maximum": 2147483647 } },
                                        "required": [ "commitment", "hash" ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/local/synchronized":
        { "get":
            { "description":
                "Wait for the node to have synchronized its L2 chain with the L1 chain, streaming its progress.",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "oneOf":
                                    [ { "title": "synchronized",
                                        "type": "string",
                                        "enum": [ "synchronized" ] },
                                      { "title": "synchronizing",
                                        "type": "object",
                                        "properties":
                                          { "synchronizing":
                                              { "type": "object",
                                                "properties":
                                                  { "processed_level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 },
                                                    "l1_head_level":
                                                      { "type": "integer",
                                                        "minimum":
                                                          -2147483648,
                                                        "maximum": 2147483647 },
                                                    "percentage_done":
                                                      { "type": "number" } },
                                                "required":
                                                  [ "processed_level",
                                                    "l1_head_level",
                                                    "percentage_done" ] } },
                                        "required": [ "synchronizing" ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/openapi":
        { "get":
            { "description": "OpenAPI specification of RPCs for rollup node",
              "parameters":
                [ { "name": "protocol", "in": "query",
                    "description": "Protocol_hash (Base58Check-encoded)",
                    "required": false, "schema": { "type": "string" } } ],
              "responses":
                { "200":
                    { "description": "",
                      "content": { "application/json": { "schema": {} } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/stats/memory":
        { "get":
            { "description": "Gets memory usage stats",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "oneOf":
                                    [ { "title": "Linux_proc_statm",
                                        "type": "object",
                                        "properties":
                                          { "page_size":
                                              { "type": "integer",
                                                "minimum": -1073741824,
                                                "maximum": 1073741823 },
                                            "size":
                                              { "$ref":
                                                  "#/components/schemas/int64" },
                                            "resident":
                                              { "$ref":
                                                  "#/components/schemas/int64" },
                                            "shared":
                                              { "$ref":
                                                  "#/components/schemas/int64" },
                                            "text":
                                              { "$ref":
                                                  "#/components/schemas/int64" },
                                            "lib":
                                              { "$ref":
                                                  "#/components/schemas/int64" },
                                            "data":
                                              { "$ref":
                                                  "#/components/schemas/int64" },
                                            "dt":
                                              { "$ref":
                                                  "#/components/schemas/int64" } },
                                        "required":
                                          [ "page_size", "size", "resident",
                                            "shared", "text", "lib", "data",
                                            "dt" ] },
                                      { "title": "Darwin_ps",
                                        "type": "object",
                                        "properties":
                                          { "page_size":
                                              { "type": "integer",
                                                "minimum": -1073741824,
                                                "maximum": 1073741823 },
                                            "mem": { "type": "number" },
                                            "resident":
                                              { "$ref":
                                                  "#/components/schemas/int64" } },
                                        "required":
                                          [ "page_size", "mem", "resident" ] } ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/stats/ocaml_gc":
        { "get":
            { "description": "Gets stats from the OCaml Garbage Collector",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "minor_words": { "type": "number" },
                                      "promoted_words": { "type": "number" },
                                      "major_words": { "type": "number" },
                                      "minor_collections":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "major_collections":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "forced_major_collections":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "heap_words":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "heap_chunks":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "live_words":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "live_blocks":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "free_words":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "free_blocks":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "largest_free":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "fragments":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "compactions":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "top_heap_words":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 },
                                      "stack_size":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 } },
                                  "required":
                                    [ "minor_words", "promoted_words",
                                      "major_words", "minor_collections",
                                      "major_collections",
                                      "forced_major_collections",
                                      "heap_words", "heap_chunks",
                                      "live_words", "live_blocks",
                                      "free_words", "free_blocks",
                                      "largest_free", "fragments",
                                      "compactions", "top_heap_words",
                                      "stack_size" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } },
      "/version":
        { "get":
            { "description":
                "Returns the version information of the rollup node",
              "responses":
                { "200":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "type": "object",
                                  "properties":
                                    { "version":
                                        { "$ref":
                                            "#/components/schemas/unistring" },
                                      "store_version":
                                        { "$ref":
                                            "#/components/schemas/unistring" },
                                      "context_version":
                                        { "$ref":
                                            "#/components/schemas/unistring" } },
                                  "required":
                                    [ "version", "store_version",
                                      "context_version" ] } } } },
                  "default":
                    { "description": "",
                      "content":
                        { "application/json":
                            { "schema":
                                { "description":
                                    "The full list of errors is available with the global RPC `GET errors`" } } } } } } } },
  "components":
    { "schemas":
        { "017-PtNairob.big_map_id":
            { "title": "Big map identifier",
              "description": "A big map identifier",
              "oneOf": [ { "$ref": "#/components/schemas/bignum" } ] },
          "017-PtNairob.bond_id":
            { "oneOf":
                [ { "title": "Tx_rollup_bond_id", "type": "object",
                    "properties":
                      { "tx_rollup":
                          { "$ref":
                              "#/components/schemas/017-PtNairob.tx_rollup_id" } },
                    "required": [ "tx_rollup" ] },
                  { "title": "Smart_rollup_bond_id", "type": "object",
                    "properties":
                      { "smart_rollup":
                          { "$ref":
                              "#/components/schemas/017-PtNairob.smart_rollup_address" } },
                    "required": [ "smart_rollup" ] } ] },
          "017-PtNairob.contract_id":
            { "title": "A contract handle",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "017-PtNairob.contract_id.originated":
            { "title": "A contract handle -- originated account",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "017-PtNairob.entrypoint":
            { "title": "entrypoint",
              "description": "Named entrypoint to a Michelson smart contract",
              "oneOf":
                [ { "title": "default", "type": "string",
                    "enum": [ "default" ] },
                  { "title": "root", "type": "string", "enum": [ "root" ] },
                  { "title": "do", "type": "string", "enum": [ "do" ] },
                  { "title": "set_delegate", "type": "string",
                    "enum": [ "set_delegate" ] },
                  { "title": "remove_delegate", "type": "string",
                    "enum": [ "remove_delegate" ] },
                  { "title": "deposit", "type": "string",
                    "enum": [ "deposit" ] },
                  { "title": "named",
                    "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] } ] },
          "017-PtNairob.expressionKind":
            { "title": "Expression kind",
              "description":
                "One of the four possible kinds of expression (integer, string, primitive application or sequence).",
              "type": "string",
              "enum":
                [ "string", "integer", "sequence", "primitiveApplication",
                  "bytes" ] },
          "017-PtNairob.michelson.v1.primitives":
            { "type": "string",
              "enum":
                [ "SHA512", "HASH_KEY", "SIZE", "SAPLING_VERIFY_UPDATE",
                  "False", "SAPLING_EMPTY_STATE", "RENAME",
                  "sapling_transaction", "UNPACK", "NAT", "unit",
                  "bls12_381_fr", "Pair", "IF_NONE", "int", "timestamp",
                  "storage", "UNPAIR", "view", "BLAKE2B", "AMOUNT", "DUP",
                  "nat", "NEG", "bool", "SELF_ADDRESS", "ISNAT", "DIG",
                  "CHAIN_ID", "set", "LSR", "key", "address", "ABS",
                  "CREATE_CONTRACT", "SHA256", "JOIN_TICKETS", "LEVEL",
                  "bls12_381_g1", "operation", "tx_rollup_l2_address",
                  "string", "CHECK_SIGNATURE", "STEPS_TO_QUOTA", "SELF",
                  "DIP", "lambda", "AND", "COMPARE", "chain_id", "MAP",
                  "APPLY", "Elt", "BYTES", "NOT", "IMPLICIT_ACCOUNT", "LT",
                  "UNIT", "EMIT", "SET_DELEGATE", "Some", "parameter",
                  "signature", "ticket", "EMPTY_BIG_MAP", "None", "SUB",
                  "key_hash", "ADD", "map", "VOTING_POWER", "big_map", "CDR",
                  "GT", "IF_CONS", "CONS", "LSL", "DUG", "PACK", "SHA3",
                  "SOURCE", "or", "SUB_MUTEZ", "LAMBDA", "RIGHT",
                  "CREATE_ACCOUNT", "Unit", "CAST", "NEQ", "ITER",
                  "FAILWITH", "PUSH", "OPEN_CHEST", "SOME", "list",
                  "BALANCE", "NIL", "pair", "CAR", "UPDATE",
                  "TOTAL_VOTING_POWER", "PAIR", "constant", "LAMBDA_REC",
                  "ADDRESS", "True", "Right", "Lambda_rec", "IF", "NEVER",
                  "sapling_transaction_deprecated", "SWAP", "EMPTY_MAP",
                  "MUL", "INT", "option", "KECCAK", "LEFT", "Left", "chest",
                  "SPLIT_TICKET", "chest_key", "bls12_381_g2", "EDIV",
                  "LOOP", "bytes", "TICKET", "LE", "PAIRING_CHECK",
                  "MIN_BLOCK_TIME", "OR", "contract", "GET_AND_UPDATE",
                  "mutez", "sapling_state", "NONE", "IF_LEFT", "GET", "NOW",
                  "TRANSFER_TOKENS", "LOOP_LEFT", "CONTRACT",
                  "TICKET_DEPRECATED", "VIEW", "EMPTY_SET", "XOR", "never",
                  "READ_TICKET", "EQ", "GE", "MEM", "SENDER", "DROP",
                  "CONCAT", "EXEC", "SLICE", "code" ] },
          "017-PtNairob.michelson_v1.context_desc":
            { "type": "string", "enum": [ "View", "Lambda" ] },
          "017-PtNairob.mutez":
            { "$ref": "#/components/schemas/positive_bignum" },
          "017-PtNairob.operation_conflict":
            { "title": "Conflict error",
              "description": "Conflict between two operations",
              "type": "object",
              "properties":
                { "existing":
                    { "$ref": "#/components/schemas/Operation_hash" },
                  "new_operation":
                    { "$ref": "#/components/schemas/Operation_hash" } },
              "required": [ "existing", "new_operation" ] },
          "017-PtNairob.primitiveNamespace":
            { "title": "Primitive namespace",
              "description":
                "One of the five possible namespaces of primitive (data constructor, type name, instruction, keyword, or constant hash).",
              "type": "string",
              "enum":
                [ "constant", "type", "constant_hash", "keyword",
                  "instruction" ] },
          "017-PtNairob.scripted.contracts":
            { "type": "object", "properties": { "code": {}, "storage": {} },
              "required": [ "code", "storage" ] },
          "017-PtNairob.smart_rollup_address":
            { "title": "A smart rollup address",
              "description":
                "A smart rollup is identified by a base58 address starting with sr1",
              "oneOf":
                [ { "$ref": "#/components/schemas/Smart_rollup_hash" } ] },
          "017-PtNairob.transaction_destination":
            { "title": "A destination of a transaction",
              "description":
                "A destination notation compatible with the contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash, a base58 originated contract hash, a base58 originated transaction rollup, or a base58 originated smart rollup.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "017-PtNairob.tx_rollup_id":
            { "title": "A tx rollup handle",
              "description":
                "A tx rollup notation as given to an RPC or inside scripts, is a base58 tx rollup hash",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "018-Proxford.big_map_id":
            { "title": "Big map identifier",
              "description": "A big map identifier",
              "oneOf": [ { "$ref": "#/components/schemas/bignum" } ] },
          "018-Proxford.bond_id":
            { "type": "object",
              "properties":
                { "smart_rollup":
                    { "$ref": "#/components/schemas/smart_rollup_address" } },
              "required": [ "smart_rollup" ] },
          "018-Proxford.contract_id":
            { "title": "A contract handle",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "018-Proxford.contract_id.originated":
            { "title": "A contract handle -- originated account",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "018-Proxford.entrypoint":
            { "title": "entrypoint",
              "description": "Named entrypoint to a Michelson smart contract",
              "oneOf":
                [ { "title": "default", "type": "string",
                    "enum": [ "default" ] },
                  { "title": "root", "type": "string", "enum": [ "root" ] },
                  { "title": "do", "type": "string", "enum": [ "do" ] },
                  { "title": "set_delegate", "type": "string",
                    "enum": [ "set_delegate" ] },
                  { "title": "remove_delegate", "type": "string",
                    "enum": [ "remove_delegate" ] },
                  { "title": "deposit", "type": "string",
                    "enum": [ "deposit" ] },
                  { "title": "stake", "type": "string", "enum": [ "stake" ] },
                  { "title": "unstake", "type": "string",
                    "enum": [ "unstake" ] },
                  { "title": "finalize_unstake", "type": "string",
                    "enum": [ "finalize_unstake" ] },
                  { "title": "set_delegate_parameters", "type": "string",
                    "enum": [ "set_delegate_parameters" ] },
                  { "title": "named",
                    "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] } ] },
          "018-Proxford.expressionKind":
            { "title": "Expression kind",
              "description":
                "One of the four possible kinds of expression (integer, string, primitive application or sequence).",
              "type": "string",
              "enum":
                [ "string", "integer", "sequence", "primitiveApplication",
                  "bytes" ] },
          "018-Proxford.michelson.v1.primitives":
            { "type": "string",
              "enum":
                [ "SHA512", "HASH_KEY", "SIZE", "SAPLING_VERIFY_UPDATE",
                  "False", "SAPLING_EMPTY_STATE", "RENAME",
                  "sapling_transaction", "UNPACK", "NAT", "unit",
                  "bls12_381_fr", "Pair", "IF_NONE", "int", "timestamp",
                  "storage", "UNPAIR", "view", "BLAKE2B", "AMOUNT", "DUP",
                  "nat", "NEG", "bool", "SELF_ADDRESS", "ISNAT", "DIG",
                  "CHAIN_ID", "set", "LSR", "key", "address", "ABS",
                  "CREATE_CONTRACT", "SHA256", "JOIN_TICKETS", "LEVEL",
                  "bls12_381_g1", "operation", "tx_rollup_l2_address",
                  "string", "CHECK_SIGNATURE", "STEPS_TO_QUOTA", "SELF",
                  "DIP", "lambda", "AND", "COMPARE", "chain_id", "MAP",
                  "APPLY", "Elt", "BYTES", "NOT", "IMPLICIT_ACCOUNT", "LT",
                  "UNIT", "EMIT", "SET_DELEGATE", "Some", "parameter",
                  "signature", "ticket", "EMPTY_BIG_MAP", "None", "SUB",
                  "key_hash", "ADD", "map", "VOTING_POWER", "big_map", "CDR",
                  "GT", "IF_CONS", "CONS", "LSL", "DUG", "PACK", "SHA3",
                  "SOURCE", "or", "SUB_MUTEZ", "LAMBDA", "RIGHT",
                  "CREATE_ACCOUNT", "Unit", "CAST", "NEQ", "ITER",
                  "FAILWITH", "PUSH", "OPEN_CHEST", "SOME", "list",
                  "BALANCE", "NIL", "pair", "CAR", "UPDATE",
                  "TOTAL_VOTING_POWER", "PAIR", "constant", "LAMBDA_REC",
                  "ADDRESS", "True", "Right", "Lambda_rec", "IF", "NEVER",
                  "sapling_transaction_deprecated", "SWAP", "EMPTY_MAP",
                  "MUL", "INT", "option", "KECCAK", "LEFT", "Left", "chest",
                  "SPLIT_TICKET", "chest_key", "bls12_381_g2", "EDIV",
                  "LOOP", "bytes", "TICKET", "LE", "PAIRING_CHECK",
                  "MIN_BLOCK_TIME", "OR", "contract", "GET_AND_UPDATE",
                  "mutez", "sapling_state", "NONE", "IF_LEFT", "GET", "NOW",
                  "TRANSFER_TOKENS", "LOOP_LEFT", "CONTRACT",
                  "TICKET_DEPRECATED", "VIEW", "EMPTY_SET", "XOR", "never",
                  "READ_TICKET", "EQ", "GE", "MEM", "SENDER", "DROP",
                  "CONCAT", "EXEC", "SLICE", "code" ] },
          "018-Proxford.michelson_v1.context_desc":
            { "type": "string", "enum": [ "View", "Lambda" ] },
          "018-Proxford.mutez":
            { "$ref": "#/components/schemas/positive_bignum" },
          "018-Proxford.operation_conflict":
            { "title": "Conflict error",
              "description": "Conflict between two operations",
              "type": "object",
              "properties":
                { "existing":
                    { "$ref": "#/components/schemas/Operation_hash" },
                  "new_operation":
                    { "$ref": "#/components/schemas/Operation_hash" } },
              "required": [ "existing", "new_operation" ] },
          "018-Proxford.primitiveNamespace":
            { "title": "Primitive namespace",
              "description":
                "One of the five possible namespaces of primitive (data constructor, type name, instruction, keyword, or constant hash).",
              "type": "string",
              "enum":
                [ "constant", "type", "constant_hash", "keyword",
                  "instruction" ] },
          "018-Proxford.scripted.contracts":
            { "type": "object", "properties": { "code": {}, "storage": {} },
              "required": [ "code", "storage" ] },
          "018-Proxford.transaction_destination":
            { "title": "A destination of a transaction",
              "description":
                "A destination notation compatible with the contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash, a base58 originated contract hash, a base58 originated transaction rollup, or a base58 originated smart rollup.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "020-PsParisC.big_map_id":
            { "title": "Big map identifier",
              "description": "A big map identifier",
              "oneOf": [ { "$ref": "#/components/schemas/bignum" } ] },
          "020-PsParisC.bond_id":
            { "type": "object",
              "properties":
                { "smart_rollup":
                    { "$ref": "#/components/schemas/smart_rollup_address" } },
              "required": [ "smart_rollup" ] },
          "020-PsParisC.contract_id":
            { "title": "A contract handle",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "020-PsParisC.contract_id.originated":
            { "title": "A contract handle -- originated account",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "020-PsParisC.entrypoint":
            { "title": "entrypoint",
              "description": "Named entrypoint to a Michelson smart contract",
              "oneOf":
                [ { "title": "default", "type": "string",
                    "enum": [ "default" ] },
                  { "title": "root", "type": "string", "enum": [ "root" ] },
                  { "title": "do", "type": "string", "enum": [ "do" ] },
                  { "title": "set_delegate", "type": "string",
                    "enum": [ "set_delegate" ] },
                  { "title": "remove_delegate", "type": "string",
                    "enum": [ "remove_delegate" ] },
                  { "title": "deposit", "type": "string",
                    "enum": [ "deposit" ] },
                  { "title": "stake", "type": "string", "enum": [ "stake" ] },
                  { "title": "unstake", "type": "string",
                    "enum": [ "unstake" ] },
                  { "title": "finalize_unstake", "type": "string",
                    "enum": [ "finalize_unstake" ] },
                  { "title": "set_delegate_parameters", "type": "string",
                    "enum": [ "set_delegate_parameters" ] },
                  { "title": "named",
                    "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] } ] },
          "020-PsParisC.expressionKind":
            { "title": "Expression kind",
              "description":
                "One of the four possible kinds of expression (integer, string, primitive application or sequence).",
              "type": "string",
              "enum":
                [ "string", "integer", "sequence", "primitiveApplication",
                  "bytes" ] },
          "020-PsParisC.michelson.v1.primitives":
            { "type": "string",
              "enum":
                [ "SHA256", "GT", "RIGHT", "SAPLING_EMPTY_STATE", "False",
                  "RENAME", "CAST", "tx_rollup_l2_address", "PACK", "BYTES",
                  "timestamp", "bls12_381_g2", "Pair", "IF_LEFT", "contract",
                  "mutez", "storage", "PAIR", "view", "UNPACK", "ADD",
                  "DROP", "big_map", "MUL", "NAT", "SELF", "CONTRACT", "CDR",
                  "SAPLING_VERIFY_UPDATE", "pair", "LSL", "int", "operation",
                  "SHA512", "CREATE_ACCOUNT", "BLAKE2B", "SPLIT_TICKET",
                  "LEFT", "never", "unit", "address", "signature",
                  "CHAIN_ID", "constant", "SLICE", "SENDER",
                  "IMPLICIT_ACCOUNT", "key_hash", "AMOUNT",
                  "CHECK_SIGNATURE", "sapling_state", "LT", "EXEC", "Elt",
                  "EMIT", "NONE", "CREATE_CONTRACT", "LSR", "SET_DELEGATE",
                  "OPEN_CHEST", "TRANSFER_TOKENS", "Some", "parameter",
                  "set", "bls12_381_fr", "EDIV", "None", "STEPS_TO_QUOTA",
                  "key", "ABS", "list", "NEVER", "map", "CAR", "IF",
                  "GET_AND_UPDATE", "CONCAT", "LOOP", "DIG", "KECCAK",
                  "Lambda_rec", "SOME", "option", "SUB", "INT", "PUSH",
                  "CONS", "Unit", "ISNAT", "NEG", "XOR", "APPLY", "UNPAIR",
                  "JOIN_TICKETS", "SIZE", "lambda", "AND", "NEQ", "or",
                  "BALANCE", "UNIT", "VOTING_POWER", "OR", "LAMBDA", "chest",
                  "LOOP_LEFT", "True", "Right", "Ticket", "HASH_KEY", "DUG",
                  "sapling_transaction", "SUB_MUTEZ", "EMPTY_BIG_MAP", "MEM",
                  "IF_NONE", "nat", "TOTAL_VOTING_POWER", "LE", "Left",
                  "chest_key", "READ_TICKET", "ticket", "bls12_381_g1",
                  "LEVEL", "VIEW", "string", "PAIRING_CHECK", "LAMBDA_REC",
                  "NOW", "SHA3", "bool", "MIN_BLOCK_TIME", "GET", "bytes",
                  "sapling_transaction_deprecated", "NIL", "IF_CONS", "GE",
                  "NOT", "SWAP", "ITER", "ADDRESS", "TICKET", "DUP",
                  "EMPTY_MAP", "UPDATE", "chain_id", "TICKET_DEPRECATED",
                  "EMPTY_SET", "FAILWITH", "MAP", "SOURCE", "DIP", "COMPARE",
                  "EQ", "SELF_ADDRESS", "code" ] },
          "020-PsParisC.michelson_v1.context_desc":
            { "type": "string", "enum": [ "View", "Lambda" ] },
          "020-PsParisC.mutez":
            { "$ref": "#/components/schemas/positive_bignum" },
          "020-PsParisC.operation_conflict":
            { "title": "Conflict error",
              "description": "Conflict between two operations",
              "type": "object",
              "properties":
                { "existing":
                    { "$ref": "#/components/schemas/Operation_hash" },
                  "new_operation":
                    { "$ref": "#/components/schemas/Operation_hash" } },
              "required": [ "existing", "new_operation" ] },
          "020-PsParisC.primitiveNamespace":
            { "title": "Primitive namespace",
              "description":
                "One of the five possible namespaces of primitive (data constructor, type name, instruction, keyword, or constant hash).",
              "type": "string",
              "enum":
                [ "constant", "type", "constant_hash", "keyword",
                  "instruction" ] },
          "020-PsParisC.scripted.contracts":
            { "type": "object", "properties": { "code": {}, "storage": {} },
              "required": [ "code", "storage" ] },
          "020-PsParisC.transaction_destination":
            { "title": "A destination of a transaction",
              "description":
                "A destination notation compatible with the contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash, a base58 originated contract hash, a base58 originated transaction rollup, or a base58 originated smart rollup.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Bls12_381.Public_key":
            { "title": "A Bls12_381 public key (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Bls12_381.Public_key_hash":
            { "title": "A Bls12_381 public key hash (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Chain_id":
            { "title": "Network identifier (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Commitment_hash":
            { "title": "A commitment ID (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Context_hash":
            { "title": "A hash of context (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Crypto_box.Public_key_hash":
            { "title": "A Cryptobox public key ID (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "DAL_commitment":
            { "title":
                "Commitment representation for the DAL (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Ed25519.Public_key_hash":
            { "title": "An Ed25519 public key hash (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Inbox_list_hash":
            { "title": "A merkle root hash for inboxes (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Message_result_hash":
            { "title": "A message result hash (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Message_result_list_hash":
            { "title":
                "A merklised message result list hash (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Operation_hash":
            { "title": "A Tezos operation ID (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Operation_list_list_hash":
            { "title": "A list of list of operations (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Protocol_hash":
            { "title": "A Tezos protocol ID (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Signature.Public_key":
            { "title":
                "A Ed25519, Secp256k1, or P256 public key (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Signature.Public_key_hash":
            { "title":
                "A Ed25519, Secp256k1, P256, or BLS public key hash (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Signature.V1":
            { "title":
                "A Ed25519, Secp256k1, P256 or BLS signature (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_commitment_hash":
            { "title":
                "The hash of a commitment of a smart rollup (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_context_hash":
            { "title":
                "A base58-check encoded hash of a Smart rollup node context (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_hash":
            { "title": "A smart rollup address (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_inbox_hash":
            { "title":
                "The hash of an inbox of a smart rollup (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_merkelized_payload_hashes_hash":
            { "title":
                "The merkelized payload hashes' hash of the smart rollup inbox (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_reveal_data_blake2b_hash":
            { "title": "A smart rollup reveal hash (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_serialized_message_hash":
            { "title":
                "The hash of a serialized message of the smart rollup inbox. (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Smart_rollup_state_hash":
            { "title":
                "The hash of the VM state of a smart rollup (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "Zk_rollup_hash":
            { "title": "A zk rollup address (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "alpha.big_map_id":
            { "title": "Big map identifier",
              "description": "A big map identifier",
              "oneOf": [ { "$ref": "#/components/schemas/bignum" } ] },
          "alpha.bond_id":
            { "type": "object",
              "properties":
                { "smart_rollup":
                    { "$ref": "#/components/schemas/smart_rollup_address" } },
              "required": [ "smart_rollup" ] },
          "alpha.contract_id":
            { "title": "A contract handle",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "alpha.contract_id.originated":
            { "title": "A contract handle -- originated account",
              "description":
                "A contract notation as given to an RPC or inside scripts. Can be a base58 originated contract hash.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "alpha.entrypoint":
            { "title": "entrypoint",
              "description": "Named entrypoint to a Michelson smart contract",
              "oneOf":
                [ { "title": "default", "type": "string",
                    "enum": [ "default" ] },
                  { "title": "root", "type": "string", "enum": [ "root" ] },
                  { "title": "do", "type": "string", "enum": [ "do" ] },
                  { "title": "set_delegate", "type": "string",
                    "enum": [ "set_delegate" ] },
                  { "title": "remove_delegate", "type": "string",
                    "enum": [ "remove_delegate" ] },
                  { "title": "deposit", "type": "string",
                    "enum": [ "deposit" ] },
                  { "title": "stake", "type": "string", "enum": [ "stake" ] },
                  { "title": "unstake", "type": "string",
                    "enum": [ "unstake" ] },
                  { "title": "finalize_unstake", "type": "string",
                    "enum": [ "finalize_unstake" ] },
                  { "title": "set_delegate_parameters", "type": "string",
                    "enum": [ "set_delegate_parameters" ] },
                  { "title": "named",
                    "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] } ] },
          "alpha.expressionKind":
            { "title": "Expression kind",
              "description":
                "One of the four possible kinds of expression (integer, string, primitive application or sequence).",
              "type": "string",
              "enum":
                [ "string", "integer", "sequence", "primitiveApplication",
                  "bytes" ] },
          "alpha.michelson.v1.primitives":
            { "type": "string",
              "enum":
                [ "SHA256", "GT", "RIGHT", "SAPLING_EMPTY_STATE", "False",
                  "RENAME", "CAST", "tx_rollup_l2_address", "PACK", "BYTES",
                  "timestamp", "bls12_381_g2", "Pair", "IF_LEFT", "contract",
                  "mutez", "storage", "PAIR", "view", "UNPACK", "ADD",
                  "DROP", "big_map", "MUL", "NAT", "SELF", "CONTRACT", "CDR",
                  "SAPLING_VERIFY_UPDATE", "pair", "LSL", "int", "operation",
                  "SHA512", "CREATE_ACCOUNT", "BLAKE2B", "SPLIT_TICKET",
                  "LEFT", "never", "unit", "address", "signature",
                  "CHAIN_ID", "constant", "SLICE", "SENDER",
                  "IMPLICIT_ACCOUNT", "key_hash", "AMOUNT",
                  "CHECK_SIGNATURE", "sapling_state", "LT", "EXEC", "Elt",
                  "EMIT", "NONE", "CREATE_CONTRACT", "LSR", "SET_DELEGATE",
                  "OPEN_CHEST", "TRANSFER_TOKENS", "Some", "parameter",
                  "set", "bls12_381_fr", "EDIV", "None", "STEPS_TO_QUOTA",
                  "key", "ABS", "list", "NEVER", "map", "CAR", "IF",
                  "GET_AND_UPDATE", "CONCAT", "LOOP", "DIG", "KECCAK",
                  "Lambda_rec", "SOME", "option", "SUB", "INT", "PUSH",
                  "CONS", "Unit", "ISNAT", "NEG", "XOR", "APPLY", "UNPAIR",
                  "JOIN_TICKETS", "SIZE", "lambda", "AND", "NEQ", "or",
                  "BALANCE", "UNIT", "VOTING_POWER", "OR", "LAMBDA", "chest",
                  "LOOP_LEFT", "True", "Right", "Ticket", "HASH_KEY", "DUG",
                  "sapling_transaction", "SUB_MUTEZ", "EMPTY_BIG_MAP", "MEM",
                  "IF_NONE", "nat", "TOTAL_VOTING_POWER", "LE", "Left",
                  "chest_key", "READ_TICKET", "ticket", "bls12_381_g1",
                  "LEVEL", "VIEW", "string", "PAIRING_CHECK", "LAMBDA_REC",
                  "NOW", "SHA3", "bool", "MIN_BLOCK_TIME", "GET", "bytes",
                  "sapling_transaction_deprecated", "NIL", "IF_CONS", "GE",
                  "NOT", "SWAP", "ITER", "ADDRESS", "TICKET", "DUP",
                  "EMPTY_MAP", "UPDATE", "chain_id", "TICKET_DEPRECATED",
                  "EMPTY_SET", "FAILWITH", "MAP", "SOURCE", "DIP", "COMPARE",
                  "EQ", "SELF_ADDRESS", "code" ] },
          "alpha.michelson_v1.context_desc":
            { "type": "string", "enum": [ "View", "Lambda" ] },
          "alpha.mutez": { "$ref": "#/components/schemas/positive_bignum" },
          "alpha.operation_conflict":
            { "title": "Conflict error",
              "description": "Conflict between two operations",
              "type": "object",
              "properties":
                { "existing":
                    { "$ref": "#/components/schemas/Operation_hash" },
                  "new_operation":
                    { "$ref": "#/components/schemas/Operation_hash" } },
              "required": [ "existing", "new_operation" ] },
          "alpha.primitiveNamespace":
            { "title": "Primitive namespace",
              "description":
                "One of the five possible namespaces of primitive (data constructor, type name, instruction, keyword, or constant hash).",
              "type": "string",
              "enum":
                [ "constant", "type", "constant_hash", "keyword",
                  "instruction" ] },
          "alpha.scripted.contracts":
            { "type": "object", "properties": { "code": {}, "storage": {} },
              "required": [ "code", "storage" ] },
          "alpha.transaction_destination":
            { "title": "A destination of a transaction",
              "description":
                "A destination notation compatible with the contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash, a base58 originated contract hash, a base58 originated transaction rollup, or a base58 originated smart rollup.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "bignum":
            { "title": "Big number",
              "description": "Decimal representation of a big number",
              "type": "string" },
          "block_hash":
            { "title": "A block identifier (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "block_header":
            { "title": "Block header",
              "description":
                "Block header. It contains both shell and protocol specific data.",
              "type": "object",
              "properties":
                { "level":
                    { "type": "integer", "minimum": -2147483648,
                      "maximum": 2147483647 },
                  "proto":
                    { "type": "integer", "minimum": 0, "maximum": 255 },
                  "predecessor":
                    { "$ref": "#/components/schemas/block_hash" },
                  "timestamp":
                    { "$ref": "#/components/schemas/timestamp.protocol" },
                  "validation_pass":
                    { "type": "integer", "minimum": 0, "maximum": 255 },
                  "operations_hash":
                    { "$ref": "#/components/schemas/Operation_list_list_hash" },
                  "fitness": { "$ref": "#/components/schemas/fitness" },
                  "context": { "$ref": "#/components/schemas/Context_hash" },
                  "protocol_data":
                    { "type": "string",
                      "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
              "required":
                [ "level", "proto", "predecessor", "timestamp",
                  "validation_pass", "operations_hash", "fitness", "context",
                  "protocol_data" ] },
          "block_locator":
            { "description": "A sparse block locator à la Bitcoin",
              "type": "object",
              "properties":
                { "current_head":
                    { "$ref": "#/components/schemas/block_header" },
                  "history":
                    { "type": "array",
                      "items": { "$ref": "#/components/schemas/block_hash" } } },
              "required": [ "current_head", "history" ] },
          "context_hash_version":
            { "description":
                "A version number for the context hash computation",
              "type": "integer", "minimum": 0, "maximum": 65535 },
          "dal_skip_list_pointer":
            { "title":
                "A hash that represents the skip list pointers (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "distributed_db_version":
            { "description":
                "A version number for the distributed DB protocol",
              "type": "integer", "minimum": 0, "maximum": 65535 },
          "distributed_db_version.name":
            { "description": "A name for the distributed DB protocol",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "fitness":
            { "title": "Block fitness",
              "description":
                "The fitness, or score, of a block, that allow the Tezos to decide which chain is the best. A fitness value is a list of byte sequences. They are compared as follows: shortest lists are smaller; lists of the same length are compared according to the lexicographical order.",
              "type": "array",
              "items":
                { "type": "string",
                  "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
          "generic_error":
            { "title": "Generic error",
              "description": "An unclassified error", "type": "object",
              "properties":
                { "kind": { "type": "string", "enum": [ "generic" ] },
                  "error": { "$ref": "#/components/schemas/unistring" } },
              "required": [ "kind", "error" ] },
          "history_mode":
            { "title": "history mode",
              "description": "Storage mode for the Tezos shell.",
              "oneOf":
                [ { "title": "archive",
                    "description":
                      "Archive mode retains every block and operations since the genesis block including their metadata and their associated contexts.",
                    "type": "string", "enum": [ "archive" ] },
                  { "title": "full",
                    "description":
                      "Full mode retains every block and operations since the genesis block but periodically prunes older blocks' metadata to reduce the storage size.",
                    "type": "object",
                    "properties":
                      { "full":
                          { "type": "object",
                            "properties":
                              { "additional_cycles":
                                  { "title": "additional cycles",
                                    "description":
                                      "Number of additional cycles preserved below the savepoint. By default: 1 additional cycles will be stored.",
                                    "type": "integer", "minimum": 0,
                                    "maximum": 1000 } },
                            "required": [ "additional_cycles" ] } },
                    "required": [ "full" ] },
                  { "title": "rolling",
                    "description":
                      "Rolling mode only retain the most recent cycles by periodically periodically discarding older blocks to reduce the storage size.",
                    "type": "object",
                    "properties":
                      { "rolling":
                          { "type": "object",
                            "properties":
                              { "additional_cycles":
                                  { "title": "additional cycles",
                                    "description":
                                      "Number of additional cycles preserved below the savepoint. By default: 1 additional cycles will be stored.",
                                    "type": "integer", "minimum": 0,
                                    "maximum": 1000 } },
                            "required": [ "additional_cycles" ] } },
                    "required": [ "rolling" ] },
                  { "title": "full_alias",
                    "description":
                      "Full mode with default number of additional cycles.",
                    "type": "string", "enum": [ "full" ] },
                  { "title": "rolling_alias",
                    "description":
                      "Rolling mode with default number of additional cycles.",
                    "type": "string", "enum": [ "rolling" ] } ] },
          "int64":
            { "title": "64 bit integers",
              "description": "Decimal representation of 64 bit integers",
              "type": "string" },
          "layout":
            { "oneOf":
                [ { "title": "Zero_width", "type": "object",
                    "properties":
                      { "kind":
                          { "type": "string", "enum": [ "Zero_width" ] } },
                    "required": [ "kind" ] },
                  { "title": "Int", "type": "object",
                    "properties":
                      { "size":
                          { "type": "string",
                            "enum":
                              [ "Int32", "Int16", "Uint16", "Int64", "Int8",
                                "Uint8" ] },
                        "endianness":
                          { "type": "string", "enum": [ "Little", "Big" ] },
                        "kind": { "type": "string", "enum": [ "Int" ] } },
                    "required": [ "size", "kind" ] },
                  { "title": "Bool", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "Bool" ] } },
                    "required": [ "kind" ] },
                  { "title": "RangedInt", "type": "object",
                    "properties":
                      { "min":
                          { "type": "integer", "minimum": -1073741824,
                            "maximum": 1073741823 },
                        "endianness":
                          { "type": "string", "enum": [ "Little", "Big" ] },
                        "max":
                          { "type": "integer", "minimum": -1073741824,
                            "maximum": 1073741823 },
                        "kind": { "type": "string", "enum": [ "RangedInt" ] } },
                    "required": [ "min", "max", "kind" ] },
                  { "title": "RangedFloat", "type": "object",
                    "properties":
                      { "min": { "type": "number" },
                        "max": { "type": "number" },
                        "kind":
                          { "type": "string", "enum": [ "RangedFloat" ] } },
                    "required": [ "min", "max", "kind" ] },
                  { "title": "Float", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "Float" ] } },
                    "required": [ "kind" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "Bytes" ] } },
                    "required": [ "kind" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "String" ] } },
                    "required": [ "kind" ] },
                  { "title": "Enum", "type": "object",
                    "properties":
                      { "size":
                          { "type": "string",
                            "enum": [ "Int16", "Uint16", "Int8", "Uint8" ] },
                        "reference":
                          { "$ref": "#/components/schemas/unistring" },
                        "kind": { "type": "string", "enum": [ "Enum" ] } },
                    "required": [ "size", "reference", "kind" ] },
                  { "title": "Seq", "type": "object",
                    "properties":
                      { "layout": { "$ref": "#/components/schemas/layout" },
                        "kind": { "type": "string", "enum": [ "Seq" ] },
                        "length_limit":
                          { "oneOf":
                              [ { "title": "No_limit", "type": "object",
                                  "properties":
                                    { "kind":
                                        { "type": "string",
                                          "enum": [ "no-limit" ] } },
                                  "required": [ "kind" ] },
                                { "title": "At_most", "type": "object",
                                  "properties":
                                    { "kind":
                                        { "type": "string",
                                          "enum": [ "at-most" ] },
                                      "at_most":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 } },
                                  "required": [ "kind", "at_most" ] },
                                { "title": "Exactly", "type": "object",
                                  "properties":
                                    { "kind":
                                        { "type": "string",
                                          "enum": [ "exactly" ] },
                                      "exactly":
                                        { "type": "integer",
                                          "minimum": -1073741824,
                                          "maximum": 1073741823 } },
                                  "required": [ "kind", "exactly" ] } ] } },
                    "required": [ "layout", "kind" ] },
                  { "title": "Ref", "type": "object",
                    "properties":
                      { "name": { "$ref": "#/components/schemas/unistring" },
                        "kind": { "type": "string", "enum": [ "Ref" ] } },
                    "required": [ "name", "kind" ] },
                  { "title": "Padding", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "Padding" ] } },
                    "required": [ "kind" ] } ] },
          "micheline..expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref": "#/components/schemas/micheline..expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim": { "$ref": "#/components/schemas/unistring" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline..expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.017-PtNairob.generic.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.017-PtNairob.generic.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim": { "$ref": "#/components/schemas/unistring" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.017-PtNairob.generic.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.017-PtNairob.michelson_v1.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.017-PtNairob.michelson_v1.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim":
                          { "$ref":
                              "#/components/schemas/017-PtNairob.michelson.v1.primitives" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.017-PtNairob.michelson_v1.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.018-Proxford.generic.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.018-Proxford.generic.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim": { "$ref": "#/components/schemas/unistring" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.018-Proxford.generic.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.018-Proxford.michelson_v1.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.018-Proxford.michelson_v1.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim":
                          { "$ref":
                              "#/components/schemas/018-Proxford.michelson.v1.primitives" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.018-Proxford.michelson_v1.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.020-PsParisC.generic.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.020-PsParisC.generic.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim": { "$ref": "#/components/schemas/unistring" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.020-PsParisC.generic.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.020-PsParisC.michelson_v1.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim":
                          { "$ref":
                              "#/components/schemas/020-PsParisC.michelson.v1.primitives" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.020-PsParisC.michelson_v1.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.alpha.generic.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.alpha.generic.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim": { "$ref": "#/components/schemas/unistring" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.alpha.generic.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.alpha.michelson_v1.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.alpha.michelson_v1.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim":
                          { "$ref":
                              "#/components/schemas/alpha.michelson.v1.primitives" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.alpha.michelson_v1.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.alpha_client.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.alpha_client.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim": { "$ref": "#/components/schemas/unistring" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.alpha_client.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.generic.expression":
            { "oneOf":
                [ { "title": "Int", "type": "object",
                    "properties":
                      { "int": { "$ref": "#/components/schemas/bignum" } },
                    "required": [ "int" ] },
                  { "title": "String", "type": "object",
                    "properties":
                      { "string":
                          { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "string" ] },
                  { "title": "Bytes", "type": "object",
                    "properties":
                      { "bytes":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required": [ "bytes" ] },
                  { "title": "Sequence", "type": "array",
                    "items":
                      { "$ref":
                          "#/components/schemas/micheline.generic.expression" } },
                  { "title": "Prim__generic",
                    "description":
                      "Generic primitive (any number of args with or without annotations)",
                    "type": "object",
                    "properties":
                      { "prim": { "$ref": "#/components/schemas/unistring" },
                        "args":
                          { "type": "array",
                            "items":
                              { "$ref":
                                  "#/components/schemas/micheline.generic.expression" } },
                        "annots":
                          { "type": "array",
                            "items":
                              { "$ref": "#/components/schemas/unistring" } } },
                    "required": [ "prim" ] } ] },
          "micheline.location":
            { "title": "Canonical location in a Micheline expression",
              "description":
                "The location of a node in a Micheline expression tree in prefix order, with zero being the root and adding one for every basic node, sequence and primitive application.",
              "type": "integer", "minimum": -1073741824,
              "maximum": 1073741823 },
          "mutez":
            { "title": "A millionth of a tez",
              "description":
                "One million mutez make a tez (1 tez = 1e6 mutez)",
              "oneOf": [ { "$ref": "#/components/schemas/positive_bignum" } ] },
          "nanotez":
            { "title": "A thousandth of a mutez",
              "description":
                "One thousand nanotez make a mutez (1 tez = 1e9 nanotez)",
              "type": "array",
              "items":
                { "oneOf": [ { "$ref": "#/components/schemas/bignum" } ] } },
          "network_version":
            { "description":
                "A version number for the network protocol (includes distributed DB version and p2p version)",
              "type": "object",
              "properties":
                { "chain_name":
                    { "$ref":
                        "#/components/schemas/distributed_db_version.name" },
                  "distributed_db_version":
                    { "$ref": "#/components/schemas/distributed_db_version" },
                  "p2p_version":
                    { "$ref": "#/components/schemas/p2p_version" } },
              "required":
                [ "chain_name", "distributed_db_version", "p2p_version" ] },
          "p2p_address":
            { "description": "An address for locating peers.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "p2p_connection.id":
            { "description":
                "The identifier for a p2p connection. It includes an address and a port number.",
              "type": "object",
              "properties":
                { "addr": { "$ref": "#/components/schemas/p2p_address" },
                  "port":
                    { "type": "integer", "minimum": 0, "maximum": 65535 } },
              "required": [ "addr" ] },
          "p2p_point.id":
            { "description": "Identifier for a peer point",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "p2p_version":
            { "description": "A version number for the p2p layer.",
              "type": "integer", "minimum": 0, "maximum": 65535 },
          "positive_bignum":
            { "title": "Positive big number",
              "description":
                "Decimal representation of a positive big number",
              "type": "string" },
          "protocol.environment_version":
            { "type": "integer", "minimum": 0, "maximum": 65535 },
          "sc_l2_message":
            { "description": "A hex encoded smart rollup message",
              "type": "string", "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" },
          "sc_rollup_l2_message_id":
            { "title":
                "A smart rollup layer 2 message identifier (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "sc_rollup_node_l1_operation":
            { "oneOf":
                [ { "title": "add_messages", "type": "object",
                    "properties":
                      { "kind":
                          { "type": "string", "enum": [ "add_messages" ] },
                        "message":
                          { "type": "array",
                            "items":
                              { "type": "string",
                                "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } } },
                    "required": [ "kind", "message" ] },
                  { "title": "cement", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "cement" ] },
                        "rollup":
                          { "$ref":
                              "#/components/schemas/smart_rollup_address" },
                        "commitment":
                          { "$ref":
                              "#/components/schemas/smart_rollup_commitment_hash" } },
                    "required": [ "kind", "rollup", "commitment" ] },
                  { "title": "publish", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "publish" ] },
                        "rollup":
                          { "$ref":
                              "#/components/schemas/smart_rollup_address" },
                        "commitment":
                          { "type": "object",
                            "properties":
                              { "compressed_state":
                                  { "$ref":
                                      "#/components/schemas/smart_rollup_state_hash" },
                                "inbox_level":
                                  { "type": "integer",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647 },
                                "predecessor":
                                  { "$ref":
                                      "#/components/schemas/smart_rollup_commitment_hash" },
                                "number_of_ticks":
                                  { "$ref": "#/components/schemas/int64" } },
                            "required":
                              [ "compressed_state", "inbox_level",
                                "predecessor", "number_of_ticks" ] } },
                    "required": [ "kind", "rollup", "commitment" ] },
                  { "title": "refute", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "refute" ] },
                        "rollup":
                          { "$ref":
                              "#/components/schemas/smart_rollup_address" },
                        "opponent":
                          { "$ref":
                              "#/components/schemas/Signature.Public_key_hash" },
                        "refutation":
                          { "oneOf":
                              [ { "title": "Start", "type": "object",
                                  "properties":
                                    { "refutation_kind":
                                        { "type": "string",
                                          "enum": [ "start" ] },
                                      "player_commitment_hash":
                                        { "$ref":
                                            "#/components/schemas/smart_rollup_commitment_hash" },
                                      "opponent_commitment_hash":
                                        { "$ref":
                                            "#/components/schemas/smart_rollup_commitment_hash" } },
                                  "required":
                                    [ "refutation_kind",
                                      "player_commitment_hash",
                                      "opponent_commitment_hash" ] },
                                { "title": "Move", "type": "object",
                                  "properties":
                                    { "refutation_kind":
                                        { "type": "string",
                                          "enum": [ "move" ] },
                                      "choice":
                                        { "$ref":
                                            "#/components/schemas/positive_bignum" },
                                      "step":
                                        { "oneOf":
                                            [ { "title": "Dissection",
                                                "type": "array",
                                                "items":
                                                  { "type": "object",
                                                    "properties":
                                                      { "state":
                                                          { "$ref":
                                                              "#/components/schemas/smart_rollup_state_hash" },
                                                        "tick":
                                                          { "$ref":
                                                              "#/components/schemas/positive_bignum" } },
                                                    "required": [ "tick" ] } },
                                              { "title": "Proof",
                                                "type": "string",
                                                "pattern":
                                                  "^([a-zA-Z0-9][a-zA-Z0-9])*$" } ] } },
                                  "required":
                                    [ "refutation_kind", "choice", "step" ] } ] } },
                    "required":
                      [ "kind", "rollup", "opponent", "refutation" ] },
                  { "title": "timeout", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "timeout" ] },
                        "rollup":
                          { "$ref":
                              "#/components/schemas/smart_rollup_address" },
                        "stakers":
                          { "type": "object",
                            "properties":
                              { "alice":
                                  { "$ref":
                                      "#/components/schemas/Signature.Public_key_hash" },
                                "bob":
                                  { "$ref":
                                      "#/components/schemas/Signature.Public_key_hash" } },
                            "required": [ "alice", "bob" ] } },
                    "required": [ "kind", "rollup", "stakers" ] },
                  { "title": "recover", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "recover" ] },
                        "rollup":
                          { "$ref":
                              "#/components/schemas/smart_rollup_address" },
                        "staker":
                          { "$ref":
                              "#/components/schemas/Signature.Public_key_hash" } },
                    "required": [ "kind", "rollup", "staker" ] },
                  { "title": "execute_outbox_message", "type": "object",
                    "properties":
                      { "kind":
                          { "type": "string",
                            "enum": [ "execute_outbox_message" ] },
                        "rollup":
                          { "$ref":
                              "#/components/schemas/smart_rollup_address" },
                        "cemented_commitment":
                          { "$ref":
                              "#/components/schemas/smart_rollup_commitment_hash" },
                        "proof":
                          { "type": "string",
                            "pattern": "^([a-zA-Z0-9][a-zA-Z0-9])*$" } },
                    "required":
                      [ "kind", "rollup", "cemented_commitment", "proof" ] } ] },
          "sc_rollup_node_mode":
            { "oneOf":
                [ { "title": "custom", "type": "object",
                    "properties":
                      { "custom":
                          { "type": "array",
                            "items":
                              { "type": "string",
                                "enum":
                                  [ "add_messages", "publish", "refute",
                                    "recover", "timeout", "cement",
                                    "execute_outbox_message" ] } } },
                    "required": [ "custom" ] },
                  { "title": "observer", "type": "string",
                    "enum": [ "observer" ] },
                  { "title": "accuser", "type": "string",
                    "enum": [ "accuser" ] },
                  { "title": "bailout", "type": "string",
                    "enum": [ "bailout" ] },
                  { "title": "batcher", "type": "string",
                    "enum": [ "batcher" ] },
                  { "title": "maintenance", "type": "string",
                    "enum": [ "maintenance" ] },
                  { "title": "operator", "type": "string",
                    "enum": [ "operator" ] } ] },
          "schema.field":
            { "oneOf":
                [ { "title": "Named_field", "type": "object",
                    "properties":
                      { "name": { "$ref": "#/components/schemas/unistring" },
                        "layout": { "$ref": "#/components/schemas/layout" },
                        "data_kind":
                          { "$ref": "#/components/schemas/schema.kind" },
                        "kind": { "type": "string", "enum": [ "named" ] } },
                    "required": [ "name", "layout", "data_kind", "kind" ] },
                  { "title": "Anonymous_field", "type": "object",
                    "properties":
                      { "layout": { "$ref": "#/components/schemas/layout" },
                        "kind": { "type": "string", "enum": [ "anon" ] },
                        "data_kind":
                          { "$ref": "#/components/schemas/schema.kind" } },
                    "required": [ "layout", "kind", "data_kind" ] },
                  { "title": "Dynamic_field", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "dyn" ] },
                        "name": { "$ref": "#/components/schemas/unistring" },
                        "num_fields":
                          { "type": "integer", "minimum": -1073741824,
                            "maximum": 1073741823 },
                        "size":
                          { "type": "string",
                            "enum": [ "N", "Uint30", "Uint16", "Uint8" ] } },
                    "required": [ "kind", "num_fields", "size" ] },
                  { "title": "Optional_field", "type": "object",
                    "properties":
                      { "kind":
                          { "type": "string",
                            "enum": [ "option_indicator" ] },
                        "name": { "$ref": "#/components/schemas/unistring" } },
                    "required": [ "kind", "name" ] } ] },
          "schema.kind":
            { "oneOf":
                [ { "title": "Fixed", "type": "object",
                    "properties":
                      { "size":
                          { "type": "integer", "minimum": -1073741824,
                            "maximum": 1073741823 },
                        "kind": { "type": "string", "enum": [ "Fixed" ] } },
                    "required": [ "size", "kind" ] },
                  { "title": "Dynamic", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "Dynamic" ] } },
                    "required": [ "kind" ] },
                  { "title": "Variable", "type": "object",
                    "properties":
                      { "kind": { "type": "string", "enum": [ "Variable" ] } },
                    "required": [ "kind" ] } ] },
          "script_expr":
            { "title": "A script expression ID (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "service_tree":
            { "oneOf":
                [ { "title": "Static", "type": "object",
                    "properties":
                      { "static":
                          { "type": "object",
                            "properties":
                              { "get_service":
                                  { "type": "object",
                                    "properties":
                                      { "meth":
                                          { "type": "string",
                                            "enum":
                                              [ "PATCH", "GET", "POST",
                                                "PUT", "DELETE" ] },
                                        "path":
                                          { "type": "array",
                                            "items":
                                              { "oneOf":
                                                  [ { "title": "PStatic",
                                                      "oneOf":
                                                        [ { "$ref":
                                                              "#/components/schemas/unistring" } ] },
                                                    { "title": "PDynamic",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "single" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] },
                                                    { "title": "PDynamicTail",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "multiple" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] } ] } },
                                        "description":
                                          { "$ref":
                                              "#/components/schemas/unistring" },
                                        "query":
                                          { "type": "array",
                                            "items":
                                              { "type": "object",
                                                "properties":
                                                  { "name":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "description":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "kind":
                                                      { "oneOf":
                                                          [ { "title":
                                                                "Single",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "single":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "single" ] },
                                                            { "title":
                                                                "Optional",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "optional":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "optional" ] },
                                                            { "title": "Flag",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "flag":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    {} } },
                                                              "required":
                                                                [ "flag" ] },
                                                            { "title":
                                                                "Multi",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "multi":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "multi" ] } ] } },
                                                "required":
                                                  [ "name", "kind" ] } },
                                        "input":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "output":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "error":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] } },
                                    "required":
                                      [ "meth", "path", "query", "output",
                                        "error" ] },
                                "post_service":
                                  { "type": "object",
                                    "properties":
                                      { "meth":
                                          { "type": "string",
                                            "enum":
                                              [ "PATCH", "GET", "POST",
                                                "PUT", "DELETE" ] },
                                        "path":
                                          { "type": "array",
                                            "items":
                                              { "oneOf":
                                                  [ { "title": "PStatic",
                                                      "oneOf":
                                                        [ { "$ref":
                                                              "#/components/schemas/unistring" } ] },
                                                    { "title": "PDynamic",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "single" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] },
                                                    { "title": "PDynamicTail",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "multiple" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] } ] } },
                                        "description":
                                          { "$ref":
                                              "#/components/schemas/unistring" },
                                        "query":
                                          { "type": "array",
                                            "items":
                                              { "type": "object",
                                                "properties":
                                                  { "name":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "description":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "kind":
                                                      { "oneOf":
                                                          [ { "title":
                                                                "Single",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "single":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "single" ] },
                                                            { "title":
                                                                "Optional",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "optional":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "optional" ] },
                                                            { "title": "Flag",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "flag":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    {} } },
                                                              "required":
                                                                [ "flag" ] },
                                                            { "title":
                                                                "Multi",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "multi":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "multi" ] } ] } },
                                                "required":
                                                  [ "name", "kind" ] } },
                                        "input":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "output":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "error":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] } },
                                    "required":
                                      [ "meth", "path", "query", "output",
                                        "error" ] },
                                "delete_service":
                                  { "type": "object",
                                    "properties":
                                      { "meth":
                                          { "type": "string",
                                            "enum":
                                              [ "PATCH", "GET", "POST",
                                                "PUT", "DELETE" ] },
                                        "path":
                                          { "type": "array",
                                            "items":
                                              { "oneOf":
                                                  [ { "title": "PStatic",
                                                      "oneOf":
                                                        [ { "$ref":
                                                              "#/components/schemas/unistring" } ] },
                                                    { "title": "PDynamic",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "single" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] },
                                                    { "title": "PDynamicTail",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "multiple" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] } ] } },
                                        "description":
                                          { "$ref":
                                              "#/components/schemas/unistring" },
                                        "query":
                                          { "type": "array",
                                            "items":
                                              { "type": "object",
                                                "properties":
                                                  { "name":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "description":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "kind":
                                                      { "oneOf":
                                                          [ { "title":
                                                                "Single",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "single":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "single" ] },
                                                            { "title":
                                                                "Optional",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "optional":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "optional" ] },
                                                            { "title": "Flag",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "flag":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    {} } },
                                                              "required":
                                                                [ "flag" ] },
                                                            { "title":
                                                                "Multi",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "multi":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "multi" ] } ] } },
                                                "required":
                                                  [ "name", "kind" ] } },
                                        "input":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "output":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "error":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] } },
                                    "required":
                                      [ "meth", "path", "query", "output",
                                        "error" ] },
                                "put_service":
                                  { "type": "object",
                                    "properties":
                                      { "meth":
                                          { "type": "string",
                                            "enum":
                                              [ "PATCH", "GET", "POST",
                                                "PUT", "DELETE" ] },
                                        "path":
                                          { "type": "array",
                                            "items":
                                              { "oneOf":
                                                  [ { "title": "PStatic",
                                                      "oneOf":
                                                        [ { "$ref":
                                                              "#/components/schemas/unistring" } ] },
                                                    { "title": "PDynamic",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "single" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] },
                                                    { "title": "PDynamicTail",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "multiple" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] } ] } },
                                        "description":
                                          { "$ref":
                                              "#/components/schemas/unistring" },
                                        "query":
                                          { "type": "array",
                                            "items":
                                              { "type": "object",
                                                "properties":
                                                  { "name":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "description":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "kind":
                                                      { "oneOf":
                                                          [ { "title":
                                                                "Single",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "single":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "single" ] },
                                                            { "title":
                                                                "Optional",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "optional":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "optional" ] },
                                                            { "title": "Flag",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "flag":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    {} } },
                                                              "required":
                                                                [ "flag" ] },
                                                            { "title":
                                                                "Multi",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "multi":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "multi" ] } ] } },
                                                "required":
                                                  [ "name", "kind" ] } },
                                        "input":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "output":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "error":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] } },
                                    "required":
                                      [ "meth", "path", "query", "output",
                                        "error" ] },
                                "patch_service":
                                  { "type": "object",
                                    "properties":
                                      { "meth":
                                          { "type": "string",
                                            "enum":
                                              [ "PATCH", "GET", "POST",
                                                "PUT", "DELETE" ] },
                                        "path":
                                          { "type": "array",
                                            "items":
                                              { "oneOf":
                                                  [ { "title": "PStatic",
                                                      "oneOf":
                                                        [ { "$ref":
                                                              "#/components/schemas/unistring" } ] },
                                                    { "title": "PDynamic",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "single" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] },
                                                    { "title": "PDynamicTail",
                                                      "type": "object",
                                                      "properties":
                                                        { "id":
                                                            { "type":
                                                                "string",
                                                              "enum":
                                                                [ "multiple" ] },
                                                          "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "descr":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" } },
                                                      "required":
                                                        [ "id", "name" ] } ] } },
                                        "description":
                                          { "$ref":
                                              "#/components/schemas/unistring" },
                                        "query":
                                          { "type": "array",
                                            "items":
                                              { "type": "object",
                                                "properties":
                                                  { "name":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "description":
                                                      { "$ref":
                                                          "#/components/schemas/unistring" },
                                                    "kind":
                                                      { "oneOf":
                                                          [ { "title":
                                                                "Single",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "single":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "single" ] },
                                                            { "title":
                                                                "Optional",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "optional":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "optional" ] },
                                                            { "title": "Flag",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "flag":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    {} } },
                                                              "required":
                                                                [ "flag" ] },
                                                            { "title":
                                                                "Multi",
                                                              "type":
                                                                "object",
                                                              "properties":
                                                                { "multi":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "id":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "single" ] },
                                                                    "name":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "descr":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "id",
                                                                    "name" ] } },
                                                              "required":
                                                                [ "multi" ] } ] } },
                                                "required":
                                                  [ "name", "kind" ] } },
                                        "input":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "output":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] },
                                        "error":
                                          { "type": "object",
                                            "properties":
                                              { "json_schema": {},
                                                "binary_schema":
                                                  { "type": "object",
                                                    "properties":
                                                      { "toplevel":
                                                          { "oneOf":
                                                              [ { "title":
                                                                    "Obj",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                  "required":
                                                                    [ "fields" ] },
                                                                { "title":
                                                                    "Cases",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                  "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                { "title":
                                                                    "Int_enum",
                                                                  "type":
                                                                    "object",
                                                                  "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                  "required":
                                                                    [ "size",
                                                                    "cases" ] } ] },
                                                        "fields":
                                                          { "type": "array",
                                                            "items":
                                                              { "type":
                                                                  "object",
                                                                "properties":
                                                                  { "description":
                                                                    { "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "title":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                                    "description":
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                                    "required":
                                                                    [ "title" ] },
                                                                    "encoding":
                                                                    { "oneOf":
                                                                    [ { "title":
                                                                    "Obj",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "fields":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.field" } } },
                                                                    "required":
                                                                    [ "fields" ] },
                                                                    { "title":
                                                                    "Cases",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "tag_size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Uint16",
                                                                    "Uint8" ] },
                                                                    "kind":
                                                                    { "$ref":
                                                                    "#/components/schemas/schema.kind" },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "$ref":
                                                                    "#/components/schemas/union case" } } },
                                                                    "required":
                                                                    [ "tag_size",
                                                                    "kind",
                                                                    "cases" ] },
                                                                    { "title":
                                                                    "Int_enum",
                                                                    "type":
                                                                    "object",
                                                                    "properties":
                                                                    { "size":
                                                                    { "type":
                                                                    "string",
                                                                    "enum":
                                                                    [ "Int16",
                                                                    "Uint16",
                                                                    "Int8",
                                                                    "Uint8" ] },
                                                                    "cases":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "type":
                                                                    "array",
                                                                    "items":
                                                                    { "oneOf":
                                                                    [ { "type":
                                                                    "integer",
                                                                    "minimum":
                                                                    -1073741824,
                                                                    "maximum":
                                                                    1073741823 },
                                                                    { "$ref":
                                                                    "#/components/schemas/unistring" } ] } } } },
                                                                    "required":
                                                                    [ "size",
                                                                    "cases" ] } ] } },
                                                                "required":
                                                                  [ "description",
                                                                    "encoding" ] } } },
                                                    "required":
                                                      [ "toplevel",
                                                        "fields" ] } },
                                            "required":
                                              [ "json_schema",
                                                "binary_schema" ] } },
                                    "required":
                                      [ "meth", "path", "query", "output",
                                        "error" ] },
                                "subdirs":
                                  { "oneOf":
                                      [ { "title": "Suffixes",
                                          "type": "object",
                                          "properties":
                                            { "suffixes":
                                                { "type": "array",
                                                  "items":
                                                    { "type": "object",
                                                      "properties":
                                                        { "name":
                                                            { "$ref":
                                                                "#/components/schemas/unistring" },
                                                          "tree":
                                                            { "$ref":
                                                                "#/components/schemas/service_tree" } },
                                                      "required":
                                                        [ "name", "tree" ] } } },
                                          "required": [ "suffixes" ] },
                                        { "title": "Arg", "type": "object",
                                          "properties":
                                            { "dynamic_dispatch":
                                                { "type": "object",
                                                  "properties":
                                                    { "arg":
                                                        { "type": "object",
                                                          "properties":
                                                            { "id":
                                                                { "type":
                                                                    "string",
                                                                  "enum":
                                                                    [ "single" ] },
                                                              "name":
                                                                { "$ref":
                                                                    "#/components/schemas/unistring" },
                                                              "descr":
                                                                { "$ref":
                                                                    "#/components/schemas/unistring" } },
                                                          "required":
                                                            [ "id", "name" ] },
                                                      "tree":
                                                        { "$ref":
                                                            "#/components/schemas/service_tree" } },
                                                  "required":
                                                    [ "arg", "tree" ] } },
                                          "required": [ "dynamic_dispatch" ] } ] } } } },
                    "required": [ "static" ] },
                  { "title": "Dynamic", "type": "object",
                    "properties":
                      { "dynamic":
                          { "nullable": true,
                            "oneOf":
                              [ { "title": "Some",
                                  "oneOf":
                                    [ { "$ref":
                                          "#/components/schemas/unistring" } ] } ] } },
                    "required": [ "dynamic" ] },
                  { "title": "Empty", "type": "string", "enum": [ "empty" ] } ] },
          "smart_rollup_address":
            { "title": "A smart rollup address (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "smart_rollup_commitment_hash":
            { "title":
                "The hash of a commitment of a smart rollup (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "smart_rollup_inbox_hash":
            { "title":
                "The hash of an inbox of a smart rollup (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "smart_rollup_merkelized_payload_hashes_hash":
            { "title":
                "The hash of the Merkelized payload hashes of a smart rollup inbox (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "smart_rollup_state_hash":
            { "title":
                "The hash of the VM state of a smart rollup (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "timestamp.protocol":
            { "description":
                "A timestamp as seen by the protocol: second-level precision, epoch based.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "timestamp.rfc":
            { "title": "RFC 3339 formatted timestamp",
              "description": "A date in RFC 3339 notation.",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] },
          "timestamp.system":
            { "description":
                "A timestamp as seen by the underlying, local computer: subsecond-level precision, epoch or rfc3339 based.",
              "oneOf":
                [ { "title": "RFC encoding",
                    "oneOf":
                      [ { "$ref": "#/components/schemas/timestamp.rfc" } ] },
                  { "title": "Second since epoch",
                    "oneOf": [ { "$ref": "#/components/schemas/int64" } ] } ] },
          "union case":
            { "type": "object",
              "properties":
                { "tag":
                    { "type": "integer", "minimum": -1073741824,
                      "maximum": 1073741823 },
                  "fields":
                    { "type": "array",
                      "items":
                        { "$ref": "#/components/schemas/schema.field" } },
                  "name": { "$ref": "#/components/schemas/unistring" } },
              "required": [ "tag", "fields" ] },
          "unistring":
            { "title": "Universal string representation",
              "description":
                "Either a plain UTF8 string, or a sequence of bytes for strings that contain invalid byte sequences.",
              "oneOf":
                [ { "type": "string" },
                  { "type": "object",
                    "properties":
                      { "invalid_utf8_string":
                          { "type": "array",
                            "items":
                              { "type": "integer", "minimum": 0,
                                "maximum": 255 } } },
                    "required": [ "invalid_utf8_string" ] } ] },
          "value_hash":
            { "title": "Hash of a consensus value (Base58Check-encoded)",
              "oneOf": [ { "$ref": "#/components/schemas/unistring" } ] } } } }
