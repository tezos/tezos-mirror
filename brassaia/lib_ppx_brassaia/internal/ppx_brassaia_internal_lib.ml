(*
 * Copyright (c) 2018-2022 Tarides <contact@tarides.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *)

module Source_code_position = struct
  type t = string * int * int * int
  (** The type of inclusive ranges of source code positions, as generated by the
      OCaml {!__POS__} macro. The 4-tuple components are 'file name', 'line
      number', 'column start' and 'column end' respectively. *)

  let pp ppf (fname, line_number, col_start, col_end) =
    Format.fprintf ppf "File %S, line %d, characters %d-%d" fname line_number
      col_start col_end

  let tag : t Logs.Tag.def =
    Logs.Tag.def "Source_code_position"
      ~doc:"The source code location at which the log entry was generated." pp
end
