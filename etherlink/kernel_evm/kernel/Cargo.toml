# SPDX-FileCopyrightText: 2023 Nomadic Labs <contact@nomadic-labs.com>
# SPDX-FileCopyrightText: 2023-2024 TriliTech <contact@trili.tech>
# SPDX-FileCopyrightText: 2023 Functori <contact@functori.com>
# SPDX-FileCopyrightText: 2023 Marigold <contact@marigold.dev>
#
# SPDX-License-Identifier: MIT

[package]
name = 'evm_kernel'
version = '0.1.0'
edition = '2021'
build = "build.rs"
license = "MIT"

[lib]
crate-type = ["cdylib"]

[dependencies]
thiserror.workspace = true
anyhow.workspace = true

primitive-types.workspace = true
num-traits.workspace = true
num-derive.workspace = true
softfloat.workspace = true

rlp.workspace = true
hex.workspace = true

bytes.workspace = true

sha3.workspace = true
libsecp256k1.workspace = true
tezos_crypto_rs.workspace = true

ethereum.workspace = true
ethbloom.workspace = true

evm.workspace = true
evm-execution.workspace = true
tezos_ethereum.workspace = true
tezos-evm-logging.workspace = true
tezos-evm-runtime.workspace = true
tezos-indexable-storage.workspace = true
tezos-storage.workspace = true

tezos-smart-rollup.workspace = true
tezos-smart-rollup-core.workspace = true
tezos-smart-rollup-host.workspace = true
tezos-smart-rollup-entrypoint.workspace = true
tezos-smart-rollup-debug.workspace = true
tezos-smart-rollup-encoding.workspace = true
tezos-smart-rollup-installer-config.workspace = true
tezos-smart-rollup-storage.workspace = true

tezos_data_encoding.workspace = true

proptest = { workspace = true, optional = true }

[dev-dependencies]
tezos-smart-rollup-mock.workspace = true
tezos-smart-rollup-panic-hook.workspace = true
proptest.workspace = true

# Hack: getrandom will use custom implementation if kernel is being built for wasm32-unknown-unknown
# See https://github.com/rust-random/getrandom/blob/a39033a34a0b81c5b15ef1fba28696ab93aac9db/src/custom.rs
# Generally getrandom is not supposed to be used in wasm env, this trick is just to overcome build errors
getrandom = { version = "=0.2.15", features = ["custom"] }

pretty_assertions.workspace = true
evm-execution = { workspace = true, features = ["fa_bridge_testing"] }
alloy-sol-types.workspace = true
alloy-primitives.workspace = true

[features]
default = ["panic-hook"]
panic-hook = []
testing = ["proptest", "debug", "evm-execution/testing"]
debug = ["tezos-evm-logging/debug"]
benchmark = ["tezos-evm-logging/benchmark", "evm-execution/benchmark"]
benchmark-bypass-stage2 = ["benchmark"]
benchmark-opcodes = ["benchmark", "evm-execution/benchmark-opcodes"]
benchmark-full = ["benchmark", "debug", "benchmark-opcodes"]
