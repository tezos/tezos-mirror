{ parameter
    (or (pair %default
           (nat %withdrawal_id)
           (ticket %ticket (pair nat (option bytes)))
           (timestamp %timestamp)
           (address %target)
           (bytes %payload)
           (bytes %l2_caller))
        (pair %payout_withdrawal
           (nat %withdrawal_id)
           (ticket %ticket (pair nat (option bytes)))
           (timestamp %timestamp)
           (address %target)
           (address %payer)
           (bytes %payload)
           (bytes %l2_caller))) ;
  storage
    (pair (address %tez_ticket_exchanger)
          (big_map %withdrawals
             (pair (nat %withdrawal_id)
                   (nat %ticket_amount)
                   (timestamp %timestamp)
                   (address %target)
                   (bytes %payload)
                   (bytes %l2_caller))
             address)) ;
  code { LAMBDA
           (pair address address (big_map (pair nat nat timestamp address bytes bytes) address))
           (contract (pair address (ticket (pair nat (option bytes)))))
           { UNPAIR ;
             DUP 2 ;
             CAR ;
             DUP 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ;
                  CAR ;
                  CONTRACT %burn (pair address (ticket (pair nat (option bytes)))) ;
                  IF_NONE
                    { PUSH string "Invalid tez ticket exchanger contract" ; FAILWITH }
                    {} }
                { SWAP ;
                  DROP ;
                  CONTRACT %withdraw (pair address (ticket (pair nat (option bytes)))) ;
                  IF_NONE { PUSH string "Invalid FA ticket exchanger contract" ; FAILWITH } {} } } ;
         LAMBDA
           (pair address
                 (pair nat (option bytes))
                 address
                 (big_map (pair nat nat timestamp address bytes bytes) address))
           unit
           { UNPAIR 3 ;
             DIG 2 ;
             CAR ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { UNPAIR ;
                  SWAP ;
                  IF_NONE
                    { PUSH nat 0 ;
                      SWAP ;
                      COMPARE ;
                      NEQ ;
                      IF { PUSH string "Invalid token ID for tez withdrawal" ; FAILWITH }
                         { UNIT } }
                    { DROP 2 ;
                      PUSH string "Unexpected token metadata for tez withdrawal" ;
                      FAILWITH } }
                { DROP ; UNIT } } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { UNPAIR 6 ;
             SWAP ;
             READ_TICKET ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             DIG 8 ;
             DIG 8 ;
             DUP 9 ;
             DIG 8 ;
             DIG 5 ;
             DIG 8 ;
             PAIR 6 ;
             DUP 6 ;
             DIG 2 ;
             DUP 4 ;
             PAIR 3 ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP 5 ;
             DIG 2 ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DUP 5 ;
             CDR ;
             DUP 3 ;
             GET ;
             IF_NONE
               { SWAP ;
                 DROP ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DIG 3 ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 SWAP }
               { DIG 4 ;
                 DROP ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 4 ;
                 DIG 3 ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 DUP 3 ;
                 DIG 3 ;
                 CDR ;
                 NONE address ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 2 } ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             PAIR }
           { UNPAIR 7 ;
             SWAP ;
             READ_TICKET ;
             UNPAIR ;
             SWAP ;
             UNPAIR ;
             DIG 9 ;
             DIG 9 ;
             DUP 9 ;
             DIG 8 ;
             DIG 5 ;
             DIG 8 ;
             PAIR 6 ;
             DUP 7 ;
             CDR ;
             DUP 2 ;
             GET ;
             IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
             IF { DROP 9 ;
                  PUSH string "This fast withdrawal has already been processed" ;
                  FAILWITH }
                { DUP 7 ;
                  DIG 2 ;
                  DUP 4 ;
                  PAIR 3 ;
                  DIG 7 ;
                  SWAP ;
                  EXEC ;
                  DROP ;
                  DUP 6 ;
                  DIG 2 ;
                  PAIR ;
                  DIG 6 ;
                  SWAP ;
                  EXEC ;
                  PUSH mutez 0 ;
                  DIG 3 ;
                  DIG 4 ;
                  PAIR ;
                  TRANSFER_TOKENS ;
                  DUP 4 ;
                  DIG 4 ;
                  CDR ;
                  DIG 4 ;
                  SOME ;
                  DIG 4 ;
                  UPDATE ;
                  UPDATE 2 ;
                  NIL operation ;
                  DIG 2 ;
                  CONS ;
                  PAIR } } } }

