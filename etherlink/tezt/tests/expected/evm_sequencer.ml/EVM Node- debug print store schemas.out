
./octez-evm-node debug print store schemas
CREATE TABLE context_hashes (
  id SERIAL PRIMARY KEY,
  context_hash VARCHAR(52) NOT NULL
);

CREATE TABLE kernel_upgrades (
  injected_before INT NOT NULL,
  root_hash TEXT NOT NULL,
  activation_timestamp INT NOT NULL,
  applied_before INT
);

CREATE TABLE blueprints (
  id SERIAL PRIMARY KEY,
  payload BLOB NOT NULL,
  timestamp DATETIME NOT NULL
);

CREATE TABLE delayed_transactions (
  injected_before INT NOT NULL,
  hash TEXT NOT NULL,
  payload TEXT NOT NULL
);

CREATE TABLE "l1_l2_levels_relationships" (
  latest_l2_level PRIMARY KEY ON CONFLICT REPLACE,
  l1_level INT NOT NULL UNIQUE ON CONFLICT ABORT
);

CREATE UNIQUE INDEX unapplied_upgrade
ON kernel_upgrades (
  COALESCE(applied_before, -1)
);

CREATE TABLE blocks (
  level serial PRIMARY KEY,
  hash VARCHAR(32) NOT NULL,
  block BLOB NOT NULL
);

CREATE TABLE transactions (
  block_hash VARCHAR(32) NOT NULL,
  block_number serial NOT NULL,
  index_ serial NOT NULL,
  hash VARCHAR(32) PRIMARY KEY NOT NULL,
  from_ VARCHAR(20) NOT NULL,
  to_ VARCHAR(20),
  receipt_fields BLOB NOT NULL,
  object_fields BLOB NOT NULL
);

CREATE UNIQUE INDEX block_hash_index ON blocks (hash);

CREATE TABLE pending_confirmations (
    level serial PRIMARY KEY,
    hash VARCHAR(32) NOT NULL
);

CREATE TABLE irmin_chunks (
  level INTEGER,
  timestamp TIMESTAMP
);

CREATE TABLE metadata (
  key TEXT PRIMARY KEY NOT NULL,
  value TEXT NOT null
);

CREATE TABLE block_storage_mode (
  legacy INTEGER NOT NULL,
  CONSTRAINT valid_legacy CHECK (legacy IN (0, 1))
);

CREATE INDEX index_transactions_block_number ON transactions(block_number);

CREATE TABLE l1_l2_finalized_levels (
  l1_level INTEGER PRIMARY KEY,
  start_l2_level INTEGER NOT NULL, -- L2 level at start of L1 block
  end_l2_level INTEGER NOT NULL -- L2 level at end of L1 block
);

CREATE INDEX idx_start_l2_level
ON l1_l2_finalized_levels(start_l2_level);

CREATE INDEX idx_end_l2_level
ON l1_l2_finalized_levels(end_l2_level);

CREATE TABLE sequencer_upgrades (
  injected_before INT NOT NULL,
  sequencer TEXT NOT NULL,
  pool_address TEXT NOT NULL,
  activation_timestamp INT NOT NULL,
  applied_before INT
)
